<?xml version="1.0"?>
<doc>
    <assembly>
        <name>obj/Release/Kendo.Mvc</name>
    </assembly>
    <members>
        <member name="M:Kendo.Mvc.Extensions.HttpRequestBaseExtensions.ApplicationRoot(System.Web.HttpRequestBase)">
            <summary>
            Get the Application root path.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.HttpRequestBaseExtensions.CanCompress(System.Web.HttpRequestBase)">
            <summary>
            Determines whether this instance can compress the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
                <c>true</c> if this instance can compress the specified instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.DynamicClass.ToString">
            <exclude />
            <excludeToc />
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.DynamicProperty.#ctor(System.String,System.Type)">
            <exclude />
            <excludeToc />
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Implementation.DynamicProperty.Name">
            <exclude />
            <excludeToc />
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Implementation.DynamicProperty.Type">
            <exclude />
            <excludeToc />
        </member>
        <member name="T:Kendo.Mvc.Resources.Messages">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.ResourceManager">
            <summary>
            Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Culture">
            <summary>
            Overrides the current thread's CurrentUICulture property for all
            resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_BackColor">
            <summary>
            Looks up a localized string similar to Background Color.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Bold">
            <summary>
            Looks up a localized string similar to Bold.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_CreateLink">
            <summary>
            Looks up a localized string similar to Insert hyperlink.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_DeleteFile">
            <summary>
            Looks up a localized string similar to Are you sure you want to delete "{0}"?.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_DialogButtonSeparator">
            <summary>
            Looks up a localized string similar to or.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_DialogCancel">
            <summary>
            Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_DialogInsert">
            <summary>
            Looks up a localized string similar to Insert.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_DirectoryNotFound">
            <summary>
            Looks up a localized string similar to A directory with this name was not found..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_DropFilesHere">
            <summary>
            Looks up a localized string similar to drop files here to upload.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_EmptyFolder">
            <summary>
            Looks up a localized string similar to Empty Folder.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_FontName">
            <summary>
            Looks up a localized string similar to Select font family.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_FontNameInherit">
            <summary>
            Looks up a localized string similar to (inherited font).
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_FontSize">
            <summary>
            Looks up a localized string similar to Select font size.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_FontSizeInherit">
            <summary>
            Looks up a localized string similar to (inherited size).
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_ForeColor">
            <summary>
            Looks up a localized string similar to Color.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_FormatBlock">
            <summary>
            Looks up a localized string similar to Format.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_ImageAltText">
            <summary>
            Looks up a localized string similar to Alternate text.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_ImageWebAddress">
            <summary>
            Looks up a localized string similar to Web address.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Indent">
            <summary>
            Looks up a localized string similar to Indent.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_InsertHtml">
            <summary>
            Looks up a localized string similar to Insert HTML.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_InsertImage">
            <summary>
            Looks up a localized string similar to Insert image.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_InsertOrderedList">
            <summary>
            Looks up a localized string similar to Insert ordered list.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_InsertUnorderedList">
            <summary>
            Looks up a localized string similar to Insert unordered list.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_InvalidFileType">
            <summary>
            Looks up a localized string similar to The selected file "{0}" is not valid. Supported file types are {1}..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Italic">
            <summary>
            Looks up a localized string similar to Italic.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_JustifyCenter">
            <summary>
            Looks up a localized string similar to Center text.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_JustifyFull">
            <summary>
            Looks up a localized string similar to Justify.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_JustifyLeft">
            <summary>
            Looks up a localized string similar to Align text left.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_JustifyRight">
            <summary>
            Looks up a localized string similar to Align text right.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_LinkOpenInNewWindow">
            <summary>
            Looks up a localized string similar to Open link in new window.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_LinkText">
            <summary>
            Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_LinkToolTip">
            <summary>
            Looks up a localized string similar to ToolTip.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_LinkWebAddress">
            <summary>
            Looks up a localized string similar to Web address.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_OrderBy">
            <summary>
            Looks up a localized string similar to Arrange by:.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_OrderByName">
            <summary>
            Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_OrderBySize">
            <summary>
            Looks up a localized string similar to Size.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Outdent">
            <summary>
            Looks up a localized string similar to Outdent.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_OverwriteFile">
            <summary>
            Looks up a localized string similar to 'A file with name "{0}" already exists in the current directory. Do you want to overwrite it?.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Search">
            <summary>
            Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Strikethrough">
            <summary>
            Looks up a localized string similar to Strikethrough.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Styles">
            <summary>
            Looks up a localized string similar to Styles.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Subscript">
            <summary>
            Looks up a localized string similar to Subscript.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Superscript">
            <summary>
            Looks up a localized string similar to Superscript.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Underline">
            <summary>
            Looks up a localized string similar to Underline.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_Unlink">
            <summary>
            Looks up a localized string similar to Remove hyperlink.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Editor_UploadFile">
            <summary>
            Looks up a localized string similar to Upload.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_And">
            <summary>
            Looks up a localized string similar to And.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_Clear">
            <summary>
            Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_DateIsEqualTo">
            <summary>
            Looks up a localized string similar to Is equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_DateIsGreaterThan">
            <summary>
            Looks up a localized string similar to Is after.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_DateIsGreaterThanOrEqualTo">
            <summary>
            Looks up a localized string similar to Is after or equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_DateIsLessThan">
            <summary>
            Looks up a localized string similar to Is before.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_DateIsLessThanOrEqualTo">
            <summary>
            Looks up a localized string similar to Is before or equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_DateIsNotEqualTo">
            <summary>
            Looks up a localized string similar to Is not equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_EnumIsEqualTo">
            <summary>
            Looks up a localized string similar to Is equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_EnumIsNotEqualTo">
            <summary>
            Looks up a localized string similar to Is not equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_Filter">
            <summary>
            Looks up a localized string similar to Filter.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_Info">
            <summary>
            Looks up a localized string similar to Show items with value that:.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_IsFalse">
            <summary>
            Looks up a localized string similar to is false.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_IsTrue">
            <summary>
            Looks up a localized string similar to is true.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_NumberIsEqualTo">
            <summary>
            Looks up a localized string similar to Is equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_NumberIsGreaterThan">
            <summary>
            Looks up a localized string similar to Is greater than.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_NumberIsGreaterThanOrEqualTo">
            <summary>
            Looks up a localized string similar to Is greater than or equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_NumberIsLessThan">
            <summary>
            Looks up a localized string similar to Is less than.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_NumberIsLessThanOrEqualTo">
            <summary>
            Looks up a localized string similar to Is less than or equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_NumberIsNotEqualTo">
            <summary>
            Looks up a localized string similar to Is not equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_Or">
            <summary>
            Looks up a localized string similar to Or.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_SelectValue">
            <summary>
            Looks up a localized string similar to -Select value-.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_StringContains">
            <summary>
            Looks up a localized string similar to Contains.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_StringDoesNotContain">
            <summary>
            Looks up a localized string similar to Does not contain.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_StringEndsWith">
            <summary>
            Looks up a localized string similar to Ends with.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_StringIsEqualTo">
            <summary>
            Looks up a localized string similar to Is equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_StringIsNotEqualTo">
            <summary>
            Looks up a localized string similar to Is not equal to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Filter_StringStartsWith">
            <summary>
            Looks up a localized string similar to Starts with.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_Cancel">
            <summary>
            Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_CancelChanges">
            <summary>
            Looks up a localized string similar to Cancel changes.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_Columns">
            <summary>
            Looks up a localized string similar to Columns.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_Confirmation">
            <summary>
            Looks up a localized string similar to Are you sure you want to delete this item?.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_Create">
            <summary>
            Looks up a localized string similar to Add new item.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_Destroy">
            <summary>
            Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_Edit">
            <summary>
            Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_SaveChanges">
            <summary>
            Looks up a localized string similar to Save changes.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_Select">
            <summary>
            Looks up a localized string similar to Select.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_SortAscending">
            <summary>
            Looks up a localized string similar to Sort Ascending.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_SortDescending">
            <summary>
            Looks up a localized string similar to Sort Descending.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Grid_Update">
            <summary>
            Looks up a localized string similar to Update.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Group_Empty">
            <summary>
            Looks up a localized string similar to Drag a column header and drop it here to group by that column.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_Display">
            <summary>
            Looks up a localized string similar to {0} - {1} of {2} items.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_Empty">
            <summary>
            Looks up a localized string similar to No items to display.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_First">
            <summary>
            Looks up a localized string similar to Go to the first page.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_ItemsPerPage">
            <summary>
            Looks up a localized string similar to items per page.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_Last">
            <summary>
            Looks up a localized string similar to Go to the last page.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_Next">
            <summary>
            Looks up a localized string similar to Go to the next page.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_Of">
            <summary>
            Looks up a localized string similar to of {0}.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_Page">
            <summary>
            Looks up a localized string similar to Page.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_Previous">
            <summary>
            Looks up a localized string similar to Go to the previous page.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Pager_Refresh">
            <summary>
            Looks up a localized string similar to Refresh.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Upload_Cancel">
            <summary>
            Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Upload_DropFilesHere">
            <summary>
            Looks up a localized string similar to drop files here to upload.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Upload_Remove">
            <summary>
            Looks up a localized string similar to Remove.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Upload_Retry">
            <summary>
            Looks up a localized string similar to Retry.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Upload_Select">
            <summary>
            Looks up a localized string similar to Select....
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Upload_StatusFailed">
            <summary>
            Looks up a localized string similar to failed.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Upload_StatusUploaded">
            <summary>
            Looks up a localized string similar to uploaded.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Upload_StatusUploading">
            <summary>
            Looks up a localized string similar to uploading.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Messages.Upload_UploadSelectedFiles">
            <summary>
            Looks up a localized string similar to Upload files.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.AutoComplete" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder.#ctor(Kendo.Mvc.UI.AutoComplete)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.AutoCompleteEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoComplete()
            .Name("AutoComplete")
            .Events(events =&gt;
            events.Change("change")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder.Filter(System.String)">
            <summary>
            Use it to enable filtering of items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoComplete()
            .Name("AutoComplete")
            .Filter("startswith");
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder.Filter(Kendo.Mvc.UI.FilterType)">
            <summary>
            Use it to enable filtering of items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoComplete()
            .Name("AutoComplete")
            .Filter(FilterType.Contains);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder.HighlightFirst(System.Boolean)">
            <summary>
            Use it to enable highlighting of first matched item.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoComplete()
            .Name("AutoComplete")
            .HighlightFirst(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder.MinLength(System.Int32)">
            <summary>
            Specifies the minimum number of characters that should be typed before the widget queries the dataSource.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoComplete()
            .Name("AutoComplete")
            .MinLength(3)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder.Placeholder(System.String)">
            <summary>
            A string that appears in the textbox when it has no value.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoComplete()
            .Name("AutoComplete")
            .MinLength(3)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder.Separator(System.String)">
            <summary>
            Sets the separator for completion. Empty by default, allowing for only one completion.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoComplete()
            .Name("AutoComplete")
            .Separator(", ")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteBuilder.Suggest(System.Boolean)">
            <summary>
            Controls whether the AutoComplete should automatically auto-type the rest of text.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoComplete()
            .Name("AutoComplete")
            .Suggest(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AutoCompleteEventBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.AutoCompleteEventBuilder" /> class.
            </summary>
            <param name="Events">The client events.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.CalendarEventBuilder">
            <summary>
            Defines the fluent interface for configuring datepicker client events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarEventBuilder.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Change client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("DatePicker")
            .Events(events =&gt; events.Change(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarEventBuilder.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .Events(events =&gt; events.Change("change"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarEventBuilder.Navigate(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Navigate client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .Events(events =&gt; events.Navigate(
            @&lt;text&gt;
            %&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarEventBuilder.Navigate(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the Navigate client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .Events(events =&gt; events.Navigate("navigate"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.CalendarSelectionSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="P:Kendo.Mvc.UI.Calendar.SelectionSettings" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarSelectionSettingsBuilder.#ctor(Kendo.Mvc.UI.CalendarSelectionSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.CalendarSelectionSettingsBuilder" /> class.
            </summary>
            <param name="settings">The selection settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarSelectionSettingsBuilder.Dates(System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Defines list of dates. This list determines which dates to be rendered with action link.
            </summary>
            <param name="dates">List of <see cref="T:System.DateTime" /> objects</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarSelectionSettingsBuilder.Action(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action to which the date should navigate
            </summary>
            <param name="routeValues">The route values of the Action method.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarSelectionSettingsBuilder.Action(System.String,System.String,System.Object)">
            <summary>
            Sets the action to which the item should navigate
            </summary>
            <param name="action">Name of the action.</param>
            <param name="controller">Name of the controller.</param>
            <param name="values">The route values.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAxisLabels.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartAxisLabels" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabels.Mirror">
            <summary>
            A value indicating whether to render the axis labels on the other side.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabels.Step">
            <summary>
            Label rendering step. Every n-th label is rendered where n is the step.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabels.Skip">
            <summary>
            Label rendering skip. Skips rendering the first n labels.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabels.DateFormats">
            <summary>
            Date formats for the date axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabels.Culture">
            <summary>
            Culture to use for formatting date labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartCategoryAxis`1.#ctor(Kendo.Mvc.UI.Chart{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartCategoryAxis{T}" /> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.AxisCrossingValues">
            <summary>
            The values at which perpendicular axes cross this axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.Categories">
            <summary>
            The categories displayed on the axis
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.Member">
            <summary>
            Gets the member name to be used as category.
            </summary>
            <value>The member.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.Type">
            <summary>
            Specifies the category axis type.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.BaseUnit">
            <summary>
            Specifies the date category axis base unit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.BaseUnitStep">
            <summary>
            Sets the step (interval) between categories in base units.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.MaxDateGroups">
            <summary>
            Specifies the maximum number of groups (categories) to produce when
            either BaseUnit is set to Fit or BaseUnitStep is set to 0 (auto).
            This option is ignored in all other cases.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.RoundToBaseUnit">
            <summary>
            If set to false, the min and max dates will not be rounded off to
            the nearest baseUnit.
            This option is most useful in combination with explicit min and max dates.
            It will be ignored if either Bar, Column, OHLC or Candlestick series are plotted on the axis.
            </summary>
            <value>
            A boolean value that indicates if the axis range should be rounded to the nearest base unit.
            The default value is true.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.Justified">
            <summary>
            Positions categories and series points on major ticks. This removes the empty space before and after the series.
            This option will be ignored if either Bar, Column, OHLC or Candlestick series are plotted on the axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.AutoBaseUnitSteps">
            <summary>
            Specifies the discrete BaseUnitStep values
            when either BaseUnit is set to Fit or BaseUnitStep is set to 0 (auto).
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.Min">
            <summary>
            Specifies the date category axis minimum (start) date.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.Max">
            <summary>
            Specifies the date category axis maximum (end) date.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCategoryAxis`1.Select">
            <summary>
            Gets or sets the axis selection.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAxisBase`2.#ctor(Kendo.Mvc.UI.Chart{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartAxisBase{T, TValue}" /> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.MajorTicks">
            <summary>
            The axis major ticks configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Crosshair">
            <summary>
            The axis crosshair configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.MinorTicks">
            <summary>
            The axis minor ticks configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.MajorGridLines">
            <summary>
            The major grid lines configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.MinorGridLines">
            <summary>
            The minor grid lines configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Line">
            <summary>
            The axis line configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Labels">
            <summary>
            The axis labels.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.PlotBands">
            <summary>
            The axis plot bands.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Title">
            <summary>
            The axis title.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Name">
            <summary>
            The axis name. Leave empty to use the "primary" default value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Pane">
            <summary>
            The name of the pane that the axis should be rendered in.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Color">
            <summary>
            The color for all axis elements. Can be overriden by individual settings.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Reverse">
            <summary>
            A value indicating if the axis labels should be rendered in reverse.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.NarrowRange">
            <summary>
            A value indicating if the automatic axis range should snap to 0.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBase`2.Visible">
            <summary>
            Gets or sets the axis visibility.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartNumericAxis`1.#ctor(Kendo.Mvc.UI.Chart{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartNumericAxis{T}" /> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNumericAxis`1.AxisCrossingValues">
            <summary>
            The values at which perpendicular axes cross this axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNumericAxis`1.Min">
            <summary>
            The minimum axis value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNumericAxis`1.Max">
            <summary>
            The axis maximum value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNumericAxis`1.MajorUnit">
            <summary>
            The interval between major divisions
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNumericAxis`1.MinorUnit">
            <summary>
            The interval between minor divisions.
            It defaults to MajorUnit / 5.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAxisDefaults`1.#ctor(Kendo.Mvc.UI.Chart{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartCategoryAxis{T}" /> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartPlotBand`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartPlotBand{T}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPlotBand`1.From">
            <summary>
            Gets or sets the plot band start position.
            </summary>
            <value>
            The start position of the plot band.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPlotBand`1.To">
            <summary>
            Gets or sets the plot band end position.
            </summary>
            <value>
            The end position of the plot band.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPlotBand`1.Color">
            <summary>
            Gets or sets the plot band background color.
            </summary>
            <value>
            The plot band background color.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPlotBand`1.Opacity">
            <summary>
            Gets or sets the plot band opacity.
            </summary>
            <value>
            The plot band opacity.
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAxisTitle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartAxisTitle" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Text">
            <summary>
            Gets or sets the axis title text.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Font">
            <summary>
            Gets or sets the axis title font.
            </summary>
            <value>
            Specify a font in CSS format. For example "16px Arial,Helvetica,sans-serif".
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Position">
            <summary>
            Gets or sets the axis title position.
            </summary>
            <remarks>
            The default value is <see cref="F:Kendo.Mvc.UI.ChartAxisTitlePosition.Center" /></remarks>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Margin">
            <summary>
            Gets or sets the axis title margin
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Background">
            <summary>
            Gets or sets the axis title background color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Color">
            <summary>
            Gets or sets the axis title text color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Padding">
            <summary>
            Gets or sets the axis title padding
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Border">
            <summary>
            Gets or sets the axis title border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Opacity">
            <summary>
            Gets or sets the axis title opacity.
            </summary>
            <value>
            The axis title opacity.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTitle.Rotation">
            <summary>
            Gets or sets the axis title rrotation.
            </summary>
            <value>
            The label opacity.
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAxisTicks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartAxisTicks" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTicks.Size">
            <summary>
            Gets or sets the ticks size.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisTicks.Visible">
            <summary>
            Gets or sets the ticks visibility.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAxisLabelsDateFormats.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartAxisLabels" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabelsDateFormats.Hours">
            <summary>
            Date format to use when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Hours" />.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabelsDateFormats.Days">
            <summary>
            Date format to use when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Days" />.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabelsDateFormats.Minutes">
            <summary>
            Date format to use when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Minutes" />.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabelsDateFormats.Months">
            <summary>
            Date format to use when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Months" />.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabelsDateFormats.Weeks">
            <summary>
            Date format to use when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Weeks" />.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisLabelsDateFormats.Years">
            <summary>
            Date format to use when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Years" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartDateAxis`1.#ctor(Kendo.Mvc.UI.Chart{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartNumericAxis{T}" /> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDateAxis`1.BaseUnit">
            <summary>
            Specifies the date category axis base unit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDateAxis`1.AxisCrossingValues">
            <summary>
            The values at which perpendicular axes cross this axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDateAxis`1.Min">
            <summary>
            The minimum axis value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDateAxis`1.Max">
            <summary>
            The axis maximum value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDateAxis`1.MajorUnit">
            <summary>
            The interval between major divisions in base units.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDateAxis`1.MinorUnit">
            <summary>
            The interval between minor divisions in base units.
            It defaults to 1/5th of the majorUnit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBaseUnitSteps.Minutes">
            <summary>
            The discrete baseUnitStep values when baseUnit is set to Minutes and
            baseUnitStep is set to Auto.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBaseUnitSteps.Hours">
            <summary>
            The discrete baseUnitStep values when baseUnit is set to Hours and
            baseUnitStep is set to Auto.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBaseUnitSteps.Days">
            <summary>
            The discrete baseUnitStep values when baseUnit is set to Minutes and
            baseUnitStep is set to Auto.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBaseUnitSteps.Weeks">
            <summary>
            The discrete baseUnitStep values when baseUnit is set to Weeks and
            baseUnitStep is set to Auto.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBaseUnitSteps.Months">
            <summary>
            The discrete baseUnitStep values when baseUnit is set to Months and
            baseUnitStep is set to Auto.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisBaseUnitSteps.Years">
            <summary>
            The discrete baseUnitStep values when baseUnit is set to Years and
            baseUnitStep is set to Auto.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAxisCrosshair.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartAxisCrosshair" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisCrosshair.Tooltip">
            <summary>
            The tooltip of the crosshair.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAxisCrosshairTooltip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartAxisCrosshairTooltip" /> class.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAxisSelection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartDateSelection" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisSelection.From">
            <summary>
            The lower boundary of the range.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisSelection.To">
            <summary>
            The upper boundary of the range.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAxisSelection.Mousewheel">
            <summary>
            Mousewheel zoom settings
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartSelectionMousewheel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartSelectionMousewheel" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSelectionMousewheel.Reverse">
            <summary>
            Gets or sets a value that indicates
            if the mousewheel direction should be reversed.
            </summary>
            <value>
            The mousewheel reverse flag.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSelectionMousewheel.Zoom">
            <summary>
            Gets or sets zoom direction settings.
            </summary>
            <value>
            The zoom direction settings.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxis`1.PlotBands">
            <summary>
            The axis plot bands.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxis`1.Pane">
            <summary>
            The name of the pane that the axis should be rendered in.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxis`1.Visible">
            <summary>
            Gets or sets the axis visibility.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartDateAxis.BaseUnit">
            <summary>
            The base time interval for the axis labels.
            The default baseUnit is determined automatically from the value range.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartDateAxis.AxisCrossingValues">
            <summary>
            The dates at which perpendicular axes cross this axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartDateAxis.Min">
            <summary>
            The axis minimum (start) date
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartDateAxis.Max">
            <summary>
            The axis maximum (end) date
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartDateAxis.MajorUnit">
            <summary>
            The interval between major divisions in base units.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartDateAxis.MinorUnit">
            <summary>
            The interval between minor divisions in base units.
            It defaults to 1/5th of the majorUnit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartNumericAxis.AxisCrossingValues">
            <summary>
            The values at which perpendicular axes cross this axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartNumericAxis.Min">
            <summary>
            The axis minimum value
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartNumericAxis.Max">
            <summary>
            The axis maximum value
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartNumericAxis.MajorUnit">
            <summary>
            The interval between major divisions
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartNumericAxis.MinorUnit">
            <summary>
            The interval between minor divisions.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.MajorTicks">
            <summary>
            The axis major ticks configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.MinorTicks">
            <summary>
            The axis minor ticks configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.MajorGridLines">
            <summary>
            The major grid lines configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.MinorGridLines">
            <summary>
            The minor grid lines configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.Line">
            <summary>
            The axis line configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.Labels">
            <summary>
            The axis labels.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.Title">
            <summary>
            The axis title.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.Name">
            <summary>
            The axis name. Leave empty to use the "primary" default value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.Color">
            <summary>
            The color for all axis elements. Can be overriden by individual settings.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.Reverse">
            <summary>
            A value indicating if the axis labels should be rendered in reverse.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.NarrowRange">
            <summary>
            A value indicating if the automatic axis range should snap to 0.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAxisBase.Crosshair">
            <summary>
            The axis crosshair configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.Categories">
            <summary>
            The categories displayed on the axis
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.Member">
            <summary>
            The Model member used to populate the <see cref="P:Kendo.Mvc.UI.IChartCategoryAxis.Categories" /></summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.AxisCrossingValues">
            <summary>
            The category indicies at which perpendicular axes cross this axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.Type">
            <summary>
            Specifies the category axis type.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.BaseUnit">
            <summary>
            Specifies the date category axis base unit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.BaseUnitStep">
            <summary>
            Sets the step (interval) between categories in base units.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.MaxDateGroups">
            <summary>
            Specifies the maximum number of groups (categories) to produce when
            either BaseUnit is set to Fit or BaseUnitStep is set to 0 (auto).
            This option is ignored in all other cases.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.RoundToBaseUnit">
            <summary>
            If set to false, the min and max dates will not be rounded off to
            the nearest baseUnit.
            This option is most useful in combination with explicit min and max dates.
            It will be ignored if either Bar, Column, OHLC or Candlestick series are plotted on the axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.Justified">
            <summary>
            Positions categories and series points on major ticks. This removes the empty space before and after the series.
            This option will be ignored if either Bar, Column, OHLC or Candlestick series are plotted on the axis.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.AutoBaseUnitSteps">
            <summary>
            Specifies the discrete BaseUnitStep values
            when either BaseUnit is set to Fit or BaseUnitStep is set to 0 (auto).
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.Min">
            <summary>
            Specifies the date category axis minimum (start) date.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.Max">
            <summary>
            Specifies the date category axis maximum (end) date.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCategoryAxis.Select">
            <summary>
            Gets or sets the axis selection.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.Data">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.UrlGenerator">
            <summary>
            Gets or sets the URL generator.
            </summary>
            <value>The URL generator.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.ChartArea">
            <summary>
            Gets or sets the Chart area.
            </summary>
            <value>
            The Chart area.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.PlotArea">
            <summary>
            Gets or sets the Plot area.
            </summary>
            <value>
            The Plot area.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.Theme">
            <summary>
            Gets or sets the Chart theme.
            </summary>
            <value>
            The Chart theme.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.Title">
            <summary>
            Gets or sets the Chart title.
            </summary>
            <value>
            The Chart title.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.Legend">
            <summary>
            Gets or sets the Chart legend.
            </summary>
            <value>
            The Chart legend.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.Transitions">
            <summary>
            Gets or sets the Chart transitions.
            </summary>
            <value>
            The Chart Transitions.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.Series">
            <summary>
            Gets the chart series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.Panes">
            <summary>
            Gets the chart panes.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.SeriesDefaults">
            <summary>
            Gets the default settings for all series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.CategoryAxes">
            <summary>
            Configuration for all category axes
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.ValueAxes">
            <summary>
            Configuration for all value axes
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.XAxes">
            <summary>
            Configuration for all X axes in scatter charts
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.YAxes">
            <summary>
            Configuration for all Y axes in scatter charts
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.AxisDefaults">
            <summary>
            Configuration for the default axis
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.DataSource">
            <summary>
            Gets the data source configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.AutoBind">
            <summary>
            Gets or sets a value indicating if the chart
            should be data bound during initialization.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.SeriesColors">
            <summary>
            Gets or sets the series colors.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Chart`1.Tooltip">
            <summary>
            Gets or sets the data point tooltip options
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartTitle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartTitle" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Text">
            <summary>
            Gets or sets the title text
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Font">
            <summary>
            Gets or sets the title font.
            </summary>
            <value>
            Specify a font in CSS format. For example "16px Arial,Helvetica,sans-serif".
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Color">
            <summary>
            Gets or sets the title color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Position">
            <summary>
            Gets or sets the title position.
            </summary>
            <remarks>
            The default value is <see cref="F:Kendo.Mvc.UI.ChartTitlePosition.Top" /></remarks>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Align">
            <summary>
            Gets or sets the title text alignment.
            </summary>
            <remarks>
            The default value is <see cref="F:Kendo.Mvc.UI.ChartTextAlignment.Center" /></remarks>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Visible">
            <summary>
            Gets or sets a value indicating if the title is visible
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Margin">
            <summary>
            Gets or sets the title margin
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Background">
            <summary>
            Gets or sets the title background color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Padding">
            <summary>
            Gets or sets the title padding
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTitle.Border">
            <summary>
            Gets or sets the legend border
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartLegend.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartLegend" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.Font">
            <summary>
            Gets or sets the legend font.
            </summary>
            <value>
            Specify a font in CSS format. For example "16px Arial,Helvetica,sans-serif".
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.Color">
            <summary>
            Gets or sets the legend labels color.
            </summary>
            <value>
            Specify the color of the labels.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.Position">
            <summary>
            Gets or sets the legend position.
            </summary>
            <remarks>
            The default value is <see cref="F:Kendo.Mvc.UI.ChartLegendPosition.Right" /></remarks>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.OffsetX">
            <summary>
            Gets or sets the legend X-offset from its position.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.OffsetY">
            <summary>
            Gets or sets the legend Y-offset from its position.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.Visible">
            <summary>
            Gets or sets a value indicating if the legend is visible
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.Margin">
            <summary>
            Gets or sets the legend margin
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.Padding">
            <summary>
            Gets or sets the legend margin
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.Background">
            <summary>
            Gets or sets the legend background color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLegend.Border">
            <summary>
            Gets or sets the legend border
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartSpacing.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartSpacing" /> class.
            </summary>
            <param name="margin">The spacing to be applied in all directions.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartSpacing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartSpacing" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSpacing.Top">
            <summary>
            Gets or sets the top spacing.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSpacing.Right">
            <summary>
            Gets or sets the right spacing.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSpacing.Bottom">
            <summary>
            Gets or sets the bottom spacing.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSpacing.Left">
            <summary>
            Gets or sets the left spacing.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartElementBorder.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{Kendo.Mvc.UI.ChartDashType})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartElementBorder" /> class.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartElementBorder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartElementBorder" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartElementBorder.Opacity">
            <summary>
            Gets or sets the opacity of the border.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartElementBorder.Width">
            <summary>
            Gets or sets the width of the border.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartElementBorder.Color">
            <summary>
            Gets or sets the color of the border.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartElementBorder.DashType">
            <summary>
            Gets or sets the dash type of the border.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartArea.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartArea" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartArea.Background">
            <summary>
            Gets or sets the Chart area background.
            </summary>
            <value>
            The Chart area background.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartArea.Border">
            <summary>
            Gets or sets the Chart area border.
            </summary>
            <value>
            The Chart area border.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartArea.Margin">
            <summary>
            Gets or sets the Chart area margin.
            </summary>
            <value>
            The Chart area margin.
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartLine.#ctor(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartLine" /> class.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartLine" /> class.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartTooltip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartTooltip" /> class.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartPane.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartPane" /> class
            with the specified name.
            </summary>
            <param name="name">The unique pane name.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartPane.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartPane" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPane.Name">
            <summary>
            Gets or sets the unique pane name
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPane.Height">
            <summary>
            Gets or sets the pane height in pixels.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPane.Title">
            <summary>
            Gets or sets the pane title.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPane.Margin">
            <summary>
            Gets or sets the pane margin
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPane.Background">
            <summary>
            Gets or sets the pane background color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPane.Padding">
            <summary>
            Gets or sets the pane padding
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPane.Border">
            <summary>
            Gets or sets the pane border
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartTooltipBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartTooltipBase" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTooltipBase.Font">
            <summary>
            Gets or sets the tooltip font.
            </summary>
            <value>
            Specify a font in CSS format. For example "16px Arial,Helvetica,sans-serif".
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTooltipBase.Visible">
            <summary>
            Gets or sets a value indicating if the tooltip is visible
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTooltipBase.Padding">
            <summary>
            Gets or sets the tooltip margin
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTooltipBase.Border">
            <summary>
            Gets or sets the tooltip border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTooltipBase.Background">
            <summary>
            Gets or sets the tooltip background.
            </summary>
            <value>
            The label background.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTooltipBase.Color">
            <summary>
            Gets or sets the tooltip color.
            </summary>
            <value>
            The label color.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTooltipBase.Format">
            <summary>
            Gets or sets the tooltip format.
            </summary>
            <value>
            The label format.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTooltipBase.Template">
            <summary>
            Gets or sets the tooltip template.
            </summary>
            <value>
            The tooltip template.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartTooltipBase.Opacity">
            <summary>
            Gets or sets the tooltip opacity.
            </summary>
            <value>
            The tooltip opacity.
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartLineBase.#ctor(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartLineBase" /> class.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartLineBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartLineBase" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineBase.Width">
            <summary>
            Gets or sets the line width.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineBase.Opacity">
            <summary>
            Gets or sets the line opacity.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineBase.Color">
            <summary>
            Gets or sets the line color.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineBase.Visible">
            <summary>
            Gets or sets the line visibility.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineBase.DashType">
            <summary>
            Gets or sets the line dash type.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartZoomDirection">
            <summary>
            Specifies the zoom direction.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartZoomDirection.Both">
            <summary>
            Both ends of the selection are moved.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartZoomDirection.Left">
            <summary>
            The left selection edge is moved during zoom.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartZoomDirection.Right">
            <summary>
            The right selection edge is moved during zoom.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartPanesFactory">
            <summary>
            Creates panes for the <see cref="!:Chart{TModel}" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPanesFactory.#ctor(Kendo.Mvc.UI.IChart)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartPanesFactory" /> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartPanesFactory.Container">
            <summary>
            The parent Chart
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPanesFactory.Add">
            <summary>
            Defines a chart pane.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPanesFactory.Add(System.String)">
            <summary>
            Defines a named chart pane.
            </summary>
            <param name="name">
            The unique pane name
            </param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartPaneBuilder">
            <summary>
            Defines the fluent interface for configuring Pane.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.#ctor(Kendo.Mvc.UI.ChartPane)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartPaneBuilder" /> class.
            </summary>
            <param name="pane">The phart pane.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Pane">
            <summary>
            Gets or sets the Pane.
            </summary>
            <value>The Pane.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Title(System.String)">
            <summary>
            Sets the title of the pane.
            </summary>
            <param name="title">The pane title.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Title(System.Action{Kendo.Mvc.UI.Fluent.ChartTitleBuilder})">
            <summary>
            Defines the title of the pane.
            </summary>
            <param name="configurator">The configuration action.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Height(System.Int32)">
            <summary>
            Sets the height of the pane.
            </summary>
            <param name="height">The pane height.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Background(System.String)">
            <summary>
            Sets the pane background color
            </summary>
            <param name="background">The background color.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the pane margin
            </summary>
            <param name="top">The pane top margin.</param>
            <param name="right">The pane right margin.</param>
            <param name="bottom">The pane bottom margin.</param>
            <param name="left">The pane left margin.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Margin(System.Int32)">
            <summary>
            Sets the pane margin
            </summary>
            <param name="margin">The pane margin.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the pane padding
            </summary>
            <param name="top">The pane top padding.</param>
            <param name="right">The pane right padding.</param>
            <param name="bottom">The pane bottom padding.</param>
            <param name="left">The pane left padding.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Padding(System.Int32)">
            <summary>
            Sets the pane padding
            </summary>
            <param name="padding">The pane padding.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the pane border
            </summary>
            <param name="width">The pane border width.</param>
            <param name="color">The pane border color.</param>
            <param name="dashType">The pane dash type.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPaneBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the pane border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder.#ctor(Kendo.Mvc.UI.ChartAxisBaseUnitSteps)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder" /> class.
            </summary>
            <param name="baseUnitSteps">The axis base unit steps.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder.Minutes(System.Int32[])">
            <summary>
            The discrete BaseUnitStep values when BaseUnit is set to Minutes and
            BaseUnitStep is set to 0 (auto).
            </summary>
            <param name="steps">The discrete steps when BaseUnit is set to Minutes.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("chart")
            .Title("Units sold")
            .Series(series =&gt; {
            series
            .Column(new int[] { 20, 40, 45, 30, 50 });
            })
            .CategoryAxis(axis =&gt; axis
            .Date()
            .BaseUnit(ChartAxisBaseUnit.Fit)
            .AutoBaseUnitSteps(steps =&gt; steps.Minutes(1, 2))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder.Hours(System.Int32[])">
            <summary>
            The discrete BaseUnitStep values when BaseUnit is set to Hours and
            BaseUnitStep is set to 0 (auto).
            </summary>
            <param name="steps">The discrete steps when BaseUnit is set to Hours.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("chart")
            .Title("Units sold")
            .Series(series =&gt; {
            series
            .Column(new int[] { 20, 40, 45, 30, 50 });
            })
            .CategoryAxis(axis =&gt; axis
            .Date()
            .BaseUnit(ChartAxisBaseUnit.Fit)
            .AutoBaseUnitSteps(steps =&gt; steps.Hours(1, 2))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder.Days(System.Int32[])">
            <summary>
            The discrete BaseUnitStep values when BaseUnit is set to Days and
            BaseUnitStep is set to 0 (auto).
            </summary>
            <param name="steps">The discrete steps when BaseUnit is set to Days.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("chart")
            .Title("Units sold")
            .Series(series =&gt; {
            series
            .Column(new int[] { 20, 40, 45, 30, 50 });
            })
            .CategoryAxis(axis =&gt; axis
            .Date()
            .BaseUnit(ChartAxisBaseUnit.Fit)
            .AutoBaseUnitSteps(steps =&gt; steps.Days(1, 2))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder.Weeks(System.Int32[])">
            <summary>
            The discrete BaseUnitStep values when BaseUnit is set to Weeks and
            BaseUnitStep is set to 0 (auto).
            </summary>
            <param name="steps">The discrete steps when BaseUnit is set to Weeks.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("chart")
            .Title("Units sold")
            .Series(series =&gt; {
            series
            .Column(new int[] { 20, 40, 45, 30, 50 });
            })
            .CategoryAxis(axis =&gt; axis
            .Date()
            .BaseUnit(ChartAxisBaseUnit.Fit)
            .AutoBaseUnitSteps(steps =&gt; steps.Weeks(1, 2))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder.Months(System.Int32[])">
            <summary>
            The discrete BaseUnitStep values when BaseUnit is set to Months and
            BaseUnitStep is set to 0 (auto).
            </summary>
            <param name="steps">The discrete steps when BaseUnit is set to Months.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("chart")
            .Title("Units sold")
            .Series(series =&gt; {
            series
            .Column(new int[] { 20, 40, 45, 30, 50 });
            })
            .CategoryAxis(axis =&gt; axis
            .Date()
            .BaseUnit(ChartAxisBaseUnit.Fit)
            .AutoBaseUnitSteps(steps =&gt; steps.Months(1, 2))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder.Years(System.Int32[])">
            <summary>
            The discrete BaseUnitStep values when BaseUnit is set to Years and
            BaseUnitStep is set to 0 (auto).
            </summary>
            <param name="steps">The discrete steps when BaseUnit is set to Years.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("chart")
            .Title("Units sold")
            .Series(series =&gt; {
            series
            .Column(new int[] { 20, 40, 45, 30, 50 });
            })
            .CategoryAxis(axis =&gt; axis
            .Date()
            .BaseUnit(ChartAxisBaseUnit.Fit)
            .AutoBaseUnitSteps(steps =&gt; steps.Years(1, 2))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesHighlightBuilder">
            <summary>
            Defines the fluent interface for configuring bubble series highlight.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesHighlightBuilder.#ctor(Kendo.Mvc.UI.ChartSeriesHighlight)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesHighlightBuilder" /> class.
            </summary>
            <param name="highlight">The series highlight.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesHighlightBuilder.Border(System.Int32)">
            <summary>
            Sets the bubble highlight border width.
            The color is computed automatically from the base point color.
            </summary>
            <param name="width">The bubble highlight border width.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesHighlightBuilder.Border(System.Int32,System.String)">
            <summary>
            Sets the bubble highlight border width.
            </summary>
            <param name="width">The border width.</param>
            <param name="color">The border color</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesHighlightBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the highlight border
            </summary>
            <param name="configurator">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesHighlightBuilder.Opacity(System.Double)">
            <summary>
            Sets the bubble highlight opacity.
            </summary>
            <param name="opacity">The bubble highlight opacity.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartPieSeriesHighlightBuilder">
            <summary>
            Defines the fluent interface for configuring pie series highlight.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesHighlightBuilder.#ctor(Kendo.Mvc.UI.ChartSeriesHighlight)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartPieSeriesHighlightBuilder" /> class.
            </summary>
            <param name="highlight">The series highlight.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesHighlightBuilder.Border(System.Int32)">
            <summary>
            Sets the bubble highlight border width.
            The color is computed automatically from the base point color.
            </summary>
            <param name="width">The bubble highlight border width.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesHighlightBuilder.Border(System.Int32,System.String)">
            <summary>
            Sets the bubble highlight border width.
            </summary>
            <param name="width">The border width.</param>
            <param name="color">The border color</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesHighlightBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the highlight border
            </summary>
            <param name="configurator">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesHighlightBuilder.Opacity(System.Double)">
            <summary>
            Sets the bubble highlight opacity.
            </summary>
            <param name="opacity">The bubble highlight opacity.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesHighlightBuilder.Color(System.String)">
            <summary>
            Sets the pie highlight color.
            </summary>
            <param name="color">The highlight color</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder">
            <summary>
            Defines the fluent interface for configuring candlestick series highlight.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder.#ctor(Kendo.Mvc.UI.ChartSeriesHighlight)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder" /> class.
            </summary>
            <param name="highlight">The series highlight.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder.Border(System.Int32)">
            <summary>
            Sets the bubble highlight border width.
            The color is computed automatically from the base point color.
            </summary>
            <param name="width">The bubble highlight border width.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder.Border(System.Int32,System.String)">
            <summary>
            Sets the bubble highlight border width.
            </summary>
            <param name="width">The border width.</param>
            <param name="color">The border color</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the highlight border
            </summary>
            <param name="configurator">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder.Opacity(System.Double)">
            <summary>
            Sets the bubble highlight opacity.
            </summary>
            <param name="opacity">The bubble highlight opacity.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder.Line(System.Int32)">
            <summary>
            Configures the candlestick highlight line width.
            </summary>
            <param name="width">The lines width.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder.Line(System.Int32,System.String)">
            <summary>
            Configures the candlestick highlight lines.
            </summary>
            <param name="width">The lines width.</param>
            <param name="color">The lines color.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder.Line(System.Action{Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder})">
            <summary>
            Configures the candlestick highlight chart lines.
            </summary>
            <param name="configurator">The configuration action.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesHighlightBuilder">
            <summary>
            Defines the fluent interface for configuring OHLC series highlight.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesHighlightBuilder.#ctor(Kendo.Mvc.UI.ChartSeriesHighlight)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesHighlightBuilder" /> class.
            </summary>
            <param name="highlight">The series highlight.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesHighlightBuilder.Highlight">
            <summary>
            Gets or sets the highlight
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesHighlightBuilder.Line(System.Int32)">
            <summary>
            Configures the candlestick highlight line width.
            </summary>
            <param name="width">The lines width.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesHighlightBuilder.Line(System.Int32,System.String)">
            <summary>
            Configures the candlestick highlight lines.
            </summary>
            <param name="width">The lines width.</param>
            <param name="color">The lines color.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesHighlightBuilder.Line(System.Action{Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder})">
            <summary>
            Configures the OHLC highlight chart lines.
            </summary>
            <param name="configurator">The configuration action.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.ChartLine" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairBuilder.#ctor(Kendo.Mvc.UI.ChartAxisCrosshair)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartLineBuilder" /> class.
            </summary>
            <param name="chartLine">The chart line.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairBuilder.Tooltip(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder})">
            <summary>
            Configures the crosshair tooltip
            </summary>
            <param name="configurator">The tooltip configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairBuilder.Visible(System.Boolean)">
            <summary>
            Sets the crosshair visible
            </summary>
            <param name="visible">The crosshair visible.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.#ctor(Kendo.Mvc.UI.ChartAxisCrosshairTooltip)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder" /> class.
            </summary>
            <param name="tooltip">The chart crosshair tooltip.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Font(System.String)">
            <summary>
            Sets the tooltip font
            </summary>
            <param name="font">The tooltip font (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .Font("14px Arial,Helvetica,sans-serif")
            .Visible(true)
            )
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Visible(System.Boolean)">
            <summary>
            Sets the tooltip visible
            </summary>
            <param name="visible">The tooltip visible.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .Visible(true)
            )
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Background(System.String)">
            <summary>
            Sets the tooltip background
            </summary>
            <param name="background">The tooltip background.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .Background("red")
            .Visible(true)
            )
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Color(System.String)">
            <summary>
            Sets the tooltip text color
            </summary>
            <param name="color">
            The tooltip text color.
            The default is the same as the series labels color.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .color("red")
            .Visible(true)
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the tooltip padding
            </summary>
            <param name="top">The tooltip top padding.</param>
            <param name="right">The tooltip right padding.</param>
            <param name="bottom">The tooltip bottom padding.</param>
            <param name="left">The tooltip left padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .Padding(0, 5, 5, 0)
            .Visible(true)
            )
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Padding(System.Int32)">
            <summary>
            Sets the tooltip padding
            </summary>
            <param name="padding">The tooltip padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .Padding(20)
            .Visible(true)
            )
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Border(System.Int32,System.String)">
            <summary>
            Sets the tooltip border
            </summary>
            <param name="width">The tooltip border width.</param>
            <param name="color">The tooltip border color (CSS syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .Border(1, "Red")
            .Visible(true)
            )
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the tooltip border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Format(System.String)">
            <summary>
            Sets the tooltip format
            </summary>
            <param name="format">The tooltip format.</param>
            <remarks>
            The format string is ignored if a template is set.
            </remarks>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .Format("{0:C}")
            .Visible(true)
            )
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Template(System.String)">
            <summary>
            Sets the tooltip template
            </summary>
            <param name="template">The tooltip template.</param>
            <value>
            A client-side template for the tooltip.
            <list type="bullet"><listheader>
            Available template variables:
            </listheader><item>value - the point value</item></list></value>
            <remarks>
            The format string is ignored if a template is set.
            </remarks>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .Template("|&lt;#= value #|&gt;")
            .Visible(true)
            )
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisCrosshairTooltipBuilder.Opacity(System.Double)">
            <summary>
            Sets the tooltip opacity.
            </summary>
            <param name="opacity">
            The series opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            .series.Bar(new double[] { 15.7, 16.7, 20, 23.5, 26.6 }).Name("World");
            .series.Bar(new double[] { 67.96, 68.93, 75, 74, 78 }).Name("United States");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories("2005", "2006", "2007", "2008", "2009")
            .Crosshair(crosshair =&gt; crosshair
            .Visible(true)
            .Tooltip(tooltip =&gt; tooltip
            .Opacity(0.5)
            .Visible(true)
            )
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring bullet series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartBulletSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBulletSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Gap(System.Double)">
            <summary>
            Set distance between category clusters.
            <param name="gap">
            A value of 1 means that there is a total of 1 bullet width / vertical bullet height between categories.
            The distance is distributed evenly on each side.
            The default value is 1.5
            </param></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target).Gap(1))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Spacing(System.Double)">
            <summary>
            Sets a value indicating the distance between bullets / categories.
            </summary>
            <param name="spacing">
            Value of 1 means that the distance between bullets is equal to their width.
            The default value is 0
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target).Spacing(1))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the bullets border.
            </summary>
            <param name="width">The bullets border width.</param>
            <param name="color">The bullets border color (CSS syntax).</param>
            <param name="dashType">The bullets border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target).Border("1", "#000", ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Overlay(Kendo.Mvc.UI.ChartBarSeriesOverlay)">
            <summary>
            Sets the bullet effects overlay
            </summary>
            <param name="overlay">The bullet effects overlay. The default is ChartBarSeriesOverlay.Glass</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target).Overlay(ChartBarSeriesOverlay.None))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Name(System.String)">
            <summary>
            Sets the series title displayed in the legend.
            </summary>
            <param name="text">The title.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target).Name("Sales"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Opacity(System.Double)">
            <summary>
            Sets the series opacity.
            </summary>
            <param name="opacity">
            The series opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target).Opacity(0.5))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Color(System.String)">
            <summary>
            Sets the bullet fill color
            </summary>
            <param name="color">The bar bullet color (CSS syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target).Color("Red"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Tooltip(System.Action{Kendo.Mvc.UI.Fluent.ChartTooltipBuilder})">
            <summary>
            Configure the data point tooltip for the series.
            </summary>
            <param name="configurator">Use the configurator to set data tooltip options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target)
            .Tooltip(tooltip =&gt;
            {
            tooltip.Visible(true).Format("{0:C}");
            })
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Tooltip(System.Boolean)">
            <summary>
            Sets the data point tooltip visibility.
            </summary>
            <param name="visible">
            A value indicating if the data point tooltip should be displayed.
            The tooltip is not visible by default.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target).Tooltip(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Axis(System.String)">
            <summary>
            Sets the axis name to use for this series.
            </summary>
            <param name="axis">The axis name for this series.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target).Name("Sales").Axis("secondary"))
            .ValueAxis(axis =&gt; axis.Numeric())
            .ValueAxis(axis =&gt; axis.Numeric("secondary"))
            .CategoryAxis(axis =&gt; axis.AxisCrossingValue(0, 10))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletSeriesBuilder`1.Target(System.Action{Kendo.Mvc.UI.Fluent.ChartBulletTargetBuilder})">
            <summary>
            Configure the data point tooltip for the series.
            </summary>
            <param name="configurator">Use the configurator to set data tooltip options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bullet(s =&gt; s.Current, s =&gt; s.Target)
            .Tooltip(tooltip =&gt;
            {
            tooltip.Visible(true).Format("{0:C}");
            })
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartBulletTargetBuilder">
            <summary>
            Defines the fluent interface for configuring the chart target.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletTargetBuilder.#ctor(Kendo.Mvc.UI.ChartBulletTarget)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartBulletTargetBuilder" /> class.
            </summary>
            <param name="chartTarget">The chart target configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletTargetBuilder.Width(System.Int32)">
            <summary>
            Sets the target width.
            </summary>
            <param name="width">The target width.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bullet(s =&gt; s.Current, s =&gt; s.Target)
            .Target(target =&gt; target
            .Width(10)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletTargetBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the target border
            </summary>
            <param name="width">The target border width.</param>
            <param name="color">The target border color (CSS syntax).</param>
            <param name="dashType">The target border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bullet(s =&gt; s.Current, s =&gt; s.Target)
            .Target(target =&gt; target
            .Border(1, "Red", ChartDashType.Dot)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletTargetBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the markers border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBulletTargetBuilder.Color(System.String)">
            <summary>
            Sets the color of the bullet chart target.
            </summary>
            <param name="color">The color of the bullet chart target.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bullet(s =&gt; s.Current, s =&gt; s.Target)
            .Target(target =&gt; target
            .Color("Red");
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartSeriesHighlightBuilder">
            <summary>
            Defines the fluent interface for configuring series highlight.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesHighlightBuilder.#ctor(Kendo.Mvc.UI.ChartSeriesHighlight)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartSeriesHighlightBuilder" /> class.
            </summary>
            <param name="highlight">The series highlight.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartSeriesHighlightBuilder.Highlight">
            <summary>
            Gets or sets the highlight
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesHighlightBuilder.Visible(System.Boolean)">
            <summary>
            Sets the highlight visibility
            </summary>
            <param name="visible">The highlight visibility.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder.#ctor(Kendo.Mvc.UI.ChartAxisSelection)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder" /> class.
            </summary>
            <param name="chartLegend">The chart legend.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder.From(System.DateTime)">
            <summary>
            Sets the selection lower boundary
            </summary>
            <param name="fromDate">The selection lower boundary.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Select(select =&gt;
            select.From(fromDate).To(toDate)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder.From(System.Double)">
            <summary>
            Sets the selection lower boundary
            </summary>
            <param name="fromDate">The selection lower boundary.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Select(select =&gt;
            select.From(from).To(to)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder.To(System.DateTime)">
            <summary>
            Sets the selection upper boundary
            </summary>
            <param name="toDate">The selection upper boundary.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Select(select =&gt;
            select.To(toDate).To(toDate)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder.To(System.Double)">
            <summary>
            Sets the selection upper boundary
            </summary>
            <param name="toDate">The selection upper boundary.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Select(select =&gt;
            select.To(to).To(to)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder.Mousewheel(System.Action{Kendo.Mvc.UI.Fluent.ChartSelectionMousewheelBuilder})">
            <summary>
            Configures the mousewheel zoom options
            </summary>
            <param name="configurator">The mousewheel zoom options</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartSelectionMousewheelBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Fluent.ChartSelectionMousewheelBuilder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSelectionMousewheelBuilder.#ctor(Kendo.Mvc.UI.ChartSelectionMousewheel)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartSelectionMousewheelBuilder" /> class.
            </summary>
            <param name="selectionMousewheel">The mousewheel zoom settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSelectionMousewheelBuilder.Reverse">
            <summary>
            Reverses the mousewheel direction.
            Rotating the wheel down will shrink the selection, rotating up will expand it.
            </summary>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Select(select =&gt; select
            .From(fromDate).To(toDate)
            .Mousewheel(mw =&gt; mw.Reverse())
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSelectionMousewheelBuilder.Reverse(System.Boolean)">
            <summary>
            Sets a value indicating if the mousewheel should be reversed.
            </summary>
            <param name="reverse">
            true: scrolling up shrinks the selection.
            false: scrolling down expands the selection.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Select(select =&gt; select
            .From(fromDate).To(toDate)
            .Mousewheel(mw =&gt; mw.Reverse(true))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSelectionMousewheelBuilder.Zoom(Kendo.Mvc.UI.ChartZoomDirection)">
            <summary>
            Sets the mousehweel zoom type
            </summary>
            <param name="fromDate">The mousehweel zoom type. Default value is ChartZoomDirection.Both</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Select(select =&gt;
            select.From(from).To(to)
            .Mousewheel(mw =&gt; mw.Zoom(ChartZoomDirection.Left))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="P:Kendo.Mvc.UI.ISeriesContainer.Series">
            <summary>
            The component series.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartAxisTickType">
            <summary>
            Defines the position of axis ticks
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisTickType.Outside">
            <summary>
            The tick is drawn on the outer side of the axis
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisTickType.None">
            <summary>
            No tick is drawn
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartBarGradient">
            <summary>
            Defines the gradient of bar/column charts
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartBarGradient.Glass">
            <summary>
            The bars have glass effect overlay.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartBarGradient.None">
            <summary>
            The bars have no effect overlay.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartBarLabelsPosition">
            <summary>
            Defines the position of bar/column chart labels
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartBarLabelsPosition.Center">
            <summary>
            The label is positioned at the bar center
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartBarLabelsPosition.InsideEnd">
            <summary>
            The label is positioned inside, near the end of the bar
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartBarLabelsPosition.InsideBase">
            <summary>
            The label is positioned inside, near the base of the bar
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartBarLabelsPosition.OutsideEnd">
            <summary>
            The label is positioned outside, near the end of the bar.
            Not applicable for stacked bar series.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartLegendPosition">
            <summary>
            Defines the position chart legend
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartLegendPosition.Top">
            <summary>
            The legend is positioned on the top
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartLegendPosition.Bottom">
            <summary>
            The legend is positioned on the bottom
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartLegendPosition.Left">
            <summary>
            The legend is positioned on the left
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartLegendPosition.Right">
            <summary>
            The legend is positioned on the right
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartLegendPosition.Custom">
            <summary>
            The legend is positioned using OffsetX and OffsetY
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartPointLabelsPosition">
            <summary>
            Defines the position of point labels.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPointLabelsPosition.Above">
            <summary>
            The label is positioned at the top of the point marker.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPointLabelsPosition.Right">
            <summary>
            The label is positioned at the right of the point marker.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPointLabelsPosition.Below">
            <summary>
            The label is positioned at the bottom of the point marker.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPointLabelsPosition.Left">
            <summary>
            The label is positioned at the left of the point marker.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartLineMissingValues">
            <summary>
            Defines the behavior for handling missing values in line series.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartLineMissingValues.Interpolate">
            <summary>
            The value is interpolated from neighboring points.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartLineMissingValues.Zero">
            <summary>
            The value is assumed to be zero.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartLineMissingValues.Gap">
            <summary>
            The line stops before the missing point and continues after it.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartMarkerShape">
            <summary>
            Defines the shape of the marker.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartMarkerShape.Square">
            <summary>
            The marker shape is square.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartMarkerShape.Triangle">
            <summary>
            The marker shape is triangle.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartMarkerShape.Circle">
            <summary>
            The marker shape is circle.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartTextAlignment">
            <summary>
            Defines text alignment options
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartTextAlignment.Left">
            <summary>
            The text is aligned to the left
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartTextAlignment.Center">
            <summary>
            The text is aligned to the middle
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartTextAlignment.Right">
            <summary>
            The text is aligned to the right
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartTitlePosition">
            <summary>
            Defines the position chart title
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartTitlePosition.Top">
            <summary>
            The title is positioned on the top
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartTitlePosition.Bottom">
            <summary>
            The title is positioned on the bottom
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartDashType">
            <summary>
            Specifies a line dash type.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartDashType.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartDashType.Dot">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartDashType.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartDashType.LongDash">
            <summary>
            Specifies a line consisting of a repeating pattern of long-dash.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartDashType.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartDashType.LongDashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of lond-dash-dot.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartDashType.LongDashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of long-dash-dot-dot.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartPieSeriesOverlay">
            <summary>
            Defines the available pie series effects overlays
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPieSeriesOverlay.None">
            <summary>
            The pies have no effect overlay
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPieSeriesOverlay.SharpBevel">
            <summary>
            The pie segments have sharp bevel effect overlay
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPieSeriesOverlay.RoundedBevel">
            <summary>
            The pie segments have sharp bevel effect overlay
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartPieLabelsAlign">
            <summary>
            Defines the alignment of the pie labels.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPieLabelsAlign.Circle">
            <summary>
            The labels are positioned in circle around the pie chart.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPieLabelsAlign.Column">
            <summary>
            The labels are positioned in columns to the left and right of the pie chart.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartScatterLineMissingValues">
            <summary>
            Defines the behavior for handling missing values in scatter line series.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartScatterLineMissingValues.Interpolate">
            <summary>
            The value is interpolated from neighboring points.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartScatterLineMissingValues.Gap">
            <summary>
            The line stops before the missing point and continues after it.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartPieLabelsPosition">
            <summary>
            Defines the position of pie chart labels.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPieLabelsPosition.Center">
            <summary>
            The label is positioned at the center of the pie segment.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPieLabelsPosition.InsideEnd">
            <summary>
            The label is positioned inside, near the end of the pie segment.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartPieLabelsPosition.OutsideEnd">
            <summary>
            The label is positioned outside, near the end of the pie segment.
            The label and the pie segment are connected with connector line.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartAxisOrientation">
            <summary>
            Defines chart axis orientation
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisOrientation.Vertical">
            <summary>
            The axis is verical
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisOrientation.Horizontal">
            <summary>
            The axis is horizontal
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartAxisTitlePosition">
            <summary>
            Defines the position chart axis title
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisTitlePosition.Top">
            <summary>
            The axis title is positioned on the top (work only with vertical axis)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisTitlePosition.Bottom">
            <summary>
            The axis title is positioned on the bottom (work only with vertical axis)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisTitlePosition.Left">
            <summary>
            The axis title is positioned on the left (work only with horizontal axis)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisTitlePosition.Right">
            <summary>
            The axis title is positioned on the right (work only with horizontal axis)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisTitlePosition.Center">
            <summary>
            The axis title is positioned in the center
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartAreaMissingValues">
            <summary>
            Defines the behavior for handling missing values in area series.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAreaMissingValues.Interpolate">
            <summary>
            The value is interpolated from neighboring points.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAreaMissingValues.Zero">
            <summary>
            The value is assumed to be zero.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAreaMissingValues.Gap">
            <summary>
            The line stops before the missing point and continues after it.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartSeriesAggregate">
            <summary>
            Aggregate function for date series.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartSeriesAggregate.Max">
            <summary>
            The highest value for the date period
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartSeriesAggregate.Min">
            <summary>
            The lowest value for the date period
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartSeriesAggregate.Sum">
            <summary>
            The sum of all values for the date period
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartSeriesAggregate.Count">
            <summary>
            The number of values for the date period
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartSeriesAggregate.Avg">
            <summary>
            The average of all values for the date period
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartCategoryAxisType">
            <summary>
            Specifies the category axis type.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartCategoryAxisType.Category">
            <summary>
            Discrete category axis.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartCategoryAxisType.Date">
            <summary>
            Specialized axis for displaying chronological data.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartAxisBaseUnit">
            <summary>
            The base time interval for the axis.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Hours">
            <summary>
            Hours.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Days">
            <summary>
            Days.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Minutes">
            <summary>
            Minutes.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Months">
            <summary>
            Months.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Weeks">
            <summary>
            Weeks.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Years">
            <summary>
            Years.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Fit">
            <summary>
            Automatic base unit based on limit set from MaxDataGroups.
            Note that the BaseUnitStep setting will be disregarded.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisDefaultsBuilder`1">
            <summary>
            Defines the fluent interface for configuring of all axes.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisDefaultsBuilder`1.#ctor(Kendo.Mvc.UI.Chart{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartAxisDefaultsBuilder{TModel}" /> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisLabelsBuilder">
            <summary>
            Defines the fluent interface for configuring the chart labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsBuilder.#ctor(Kendo.Mvc.UI.ChartAxisLabels)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisLabelsBuilder" /> class.
            </summary>
            <param name="chartLabels">The labels configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsBuilder.Mirror(System.Boolean)">
            <summary>
            Renders the axis labels on the other side.
            </summary>
            <param name="mirror">A value indicating whether to render the axis labels on the other side.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .ValueAxis(axis =&gt; axis
            .Numeric().Labels(labels =&gt; labels.Mirror(true))
            )
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            // Move the value axis to the right side
            .AxisCrossingValue(5)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsBuilder.Step(System.Int32)">
            <summary>
            Label rendering step.
            </summary>
            <param name="step">A value indicating the step at which labels are rendered.
            Every n-th label is rendered where n is the step.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(product =&gt; product.Name)
            .Labels(labels =&gt; labels.Step(2))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsBuilder.Skip(System.Int32)">
            <summary>
            Label rendering skip.
            </summary>
            <param name="skip">Skips rendering the first n labels.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(product =&gt; product.Name)
            .Labels(labels =&gt; labels.Skip(2))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartPieLabelsBuilder">
            <summary>
            Defines the fluent interface for configuring the chart data labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieLabelsBuilder.#ctor(Kendo.Mvc.UI.ChartPieLabels)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartPieLabelsBuilder" /> class.
            </summary>
            <param name="chartPieLabels">The data labels configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieLabelsBuilder.Align(Kendo.Mvc.UI.ChartPieLabelsAlign)">
            <summary>
            Sets the labels align
            </summary>
            <param name="align">The labels align.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Pie(p =&gt; p.Sales)
            .Labels(labels =&gt; labels
            .Align(ChartPieLabelsAlign.Column)
            .Visible(true)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieLabelsBuilder.Distance(System.Int32)">
            <summary>
            Sets the labels distance
            </summary>
            <param name="distance">The labels distance.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Pie(p =&gt; p.Sales)
            .Labels(labels =&gt; labels
            .Distance(20)
            .Visible(true)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieLabelsBuilder.Position(Kendo.Mvc.UI.ChartPieLabelsPosition)">
            <summary>
            Sets the labels position
            </summary>
            <param name="position">The labels position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Pie(p =&gt; p.Sales)
            .Labels(labels =&gt; labels
            .Position(ChartPieLabelsPosition.Center)
            .Visible(true)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder">
            <summary>
            Defines the fluent interface for configuring the chart data points tooltip.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.#ctor(Kendo.Mvc.UI.ChartTooltip)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder" /> class.
            </summary>
            <param name="chartTooltip">The data point tooltip configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Font(System.String)">
            <summary>
            Sets the tooltip font
            </summary>
            <param name="font">The tooltip font (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Font("14px Arial,Helvetica,sans-serif")
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Visible(System.Boolean)">
            <summary>
            Sets the tooltip visibility
            </summary>
            <param name="visible">The tooltip visibility. The tooltip is not visible by default.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Background(System.String)">
            <summary>
            Sets the tooltip background color
            </summary>
            <param name="background">
            The tooltip background color.
            The default is determined from the series color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Background("Red")
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Color(System.String)">
            <summary>
            Sets the tooltip text color
            </summary>
            <param name="color">
            The tooltip text color.
            The default is the same as the series labels color.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Color("Red")
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the tooltip padding
            </summary>
            <param name="top">The tooltip top padding.</param>
            <param name="right">The tooltip right padding.</param>
            <param name="bottom">The tooltip bottom padding.</param>
            <param name="left">The tooltip left padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Padding(0, 5, 5, 0)
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Padding(System.Int32)">
            <summary>
            Sets the tooltip padding
            </summary>
            <param name="padding">The tooltip padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Padding(20)
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Border(System.Int32,System.String)">
            <summary>
            Sets the tooltip border
            </summary>
            <param name="width">The tooltip border width.</param>
            <param name="color">The tooltip border color (CSS syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Border(1, "Red")
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the tooltip border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Format(System.String)">
            <summary>
            Sets the tooltip format
            </summary>
            <param name="format">The tooltip format.</param>
            <remarks>
            The format string is ignored if a template is set.
            </remarks>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Format("{0:C}")
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Template(System.String)">
            <summary>
            Sets the tooltip template
            </summary>
            <param name="template">The tooltip template.</param>
            <value>
            A client-side template for the tooltip.
            <list type="bullet"><listheader>
            Available template variables:
            </listheader><item>value - the point value</item><item>category - the category name</item><item>series - the data series configuration object</item><item>dataItem - the original data item (client-side binding only)</item></list></value>
            <remarks>
            The format string is ignored if a template is set.
            </remarks>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Template("&lt;#= category #&gt; - &lt;#= value #&gt;")
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Opacity(System.Double)">
            <summary>
            Sets the tooltip opacity.
            </summary>
            <param name="opacity">
            The series opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Opacity(0.5)
            .Visible(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTooltipBuilder.Shared(System.Boolean)">
            <summary>
            Sets the tooltip shared
            </summary>
            <param name="shared">The tooltip shared.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt; tooltip
            .Visible(true)
            .Shared(true)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring pie series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartPieSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartPieSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Name(System.String)">
            <summary>
            Sets the name of the series.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Pie(s =&gt; s.Sales, s =&gt; s.DateString).Name("Sales"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Opacity(System.Double)">
            <summary>
            Sets the series opacity.
            </summary>
            <param name="opacity">
            The series opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Pie(s =&gt; s.Sales, s =&gt; s.DateString).Opacity(0.5))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Padding(System.Int32)">
            <summary>
            Sets the padding of the chart.
            </summary>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Pie(s =&gt; s.Sales, s =&gt; s.DateString).Padding(100))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.StartAngle(System.Int32)">
            <summary>
            Sets the start angle of the first pie segment.
            </summary>
            <param name="startAngle">The pie start angle(in degrees).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Pie(s =&gt; s.Sales, s =&gt; s.DateString).StartAngle(100))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Labels(System.Action{Kendo.Mvc.UI.Fluent.ChartPieLabelsBuilder})">
            <summary>
            Configures the pie chart labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Pie(s =&gt; s.Sales, s =&gt; s.DateString)
            .Labels(labels =&gt; labels
            .Color("red")
            .Visible(true)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Labels(System.Boolean)">
            <summary>
            Sets the visibility of pie chart labels.
            </summary>
            <param name="visible">The visibility. The default value is false.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Pie(s =&gt; s.Sales, s =&gt; s.DateString)
            .Labels(true);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the pie segments border
            </summary>
            <param name="width">The pie segments border width.</param>
            <param name="color">The pie segments border color (CSS syntax).</param>
            <param name="dashType">The pie segments border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Pie(s =&gt; s.Sales, s =&gt; s.DateString).Border(1, "#000", ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the pie border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Overlay(Kendo.Mvc.UI.ChartPieSeriesOverlay)">
            <summary>
            Sets the pie segments effects overlay
            </summary>
            <param name="overlay">
            The pie segment effects overlay.
            The default value is set in the theme.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Pie(s =&gt; s.Sales, s =&gt; s.DateString).Overlay(ChartPieSeriesOverlay.None))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Connectors(System.Action{Kendo.Mvc.UI.Fluent.ChartPieConnectorsBuilder})">
            <summary>
            Configures the pie chart connectors.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Pie(s =&gt; s.Sales, s =&gt; s.DateString)
            .Connectors(c =&gt; c
            .Color("red")
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieSeriesBuilder`1.Highlight(System.Action{Kendo.Mvc.UI.Fluent.ChartPieSeriesHighlightBuilder})">
            <summary>
            Configures the pie highlight
            </summary>
            <param name="configurator">The configuration action.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring scatter series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartScatterSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartScatterSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartScatterLineSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring scatter line series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterLineSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartScatterLineSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartScatterLineSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterLineSeriesBuilder`1.Width(System.Double)">
            <summary>
            Sets the chart line width.
            </summary>
            <param name="width">The line width.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.ScatterLine(s =&gt; s.x, s =&gt; s.y).Width(2))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterLineSeriesBuilder`1.DashType(Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the chart line dash type.
            </summary>
            <param name="dashType">The line dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.ScatterLine(s =&gt; s.x, s =&gt; s.y).DashType(ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterLineSeriesBuilder`1.MissingValues(Kendo.Mvc.UI.ChartScatterLineMissingValues)">
            <summary>
            Configures the behavior for handling missing values in scatter line series.
            </summary>
            <param name="missingValues">The missing values behavior. The default is to leave gaps.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .ScatterLine(s =&gt; s.x, s =&gt; s.y)
            .MissingValues(ChartScatterLineMissingValues.Interpolate);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilderBase`2">
            <summary>
            Defines the fluent interface for configuring scatter series.
            </summary>
            <typeparam name="TSeries">The type of the data item</typeparam>
            <typeparam name="TBuilder">The type of the builder</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilderBase`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartScatterSeriesBuilderBase{TSeries, TBuilder}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilderBase`2.Labels(System.Action{Kendo.Mvc.UI.Fluent.ChartPointLabelsBuilder})">
            <summary>
            Configures the scatter chart labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Scatter(s =&gt; s.x, s =&gt; s.y)
            .Labels(labels =&gt; labels
            .Position(ChartBarLabelsPosition.Above)
            .Visible(true)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilderBase`2.Labels(System.Boolean)">
            <summary>
            Sets the visibility of scatter chart labels.
            </summary>
            <param name="visible">The visibility. The default value is false.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Scatter(s =&gt; s.x, s =&gt; s.y)
            .Labels(true);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilderBase`2.Markers(System.Action{Kendo.Mvc.UI.Fluent.ChartMarkersBuilder})">
            <summary>
            Configures the scatter chart markers.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Scatter(s =&gt; s.x, s =&gt; s.y)
            .Markers(markers =&gt; markers
            .Type(ChartMarkerShape.Triangle)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilderBase`2.Markers(System.Boolean)">
            <summary>
            Sets the visibility of scatter chart markers.
            </summary>
            <param name="visible">The visibility. The default value is true.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Scatter(s =&gt; s.x, s =&gt; s.y)
            .Markers(true);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilderBase`2.XAxis(System.String)">
            <summary>
            Sets the axis name to use for this series.
            </summary>
            <param name="axis">The axis name for this series.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Scatter(s =&gt; s.X, s =&gt; s.Y).Name("Scatter").XAxis("secondary"))
            .XAxis(axis =&gt; axis.Numeric())
            .XAxis(axis =&gt; axis.Numeric("secondary"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilderBase`2.YAxis(System.String)">
            <summary>
            Sets the axis name to use for this series.
            </summary>
            <param name="axis">The axis name for this series.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Scatter(s =&gt; s.Sales).Name("Sales").YAxis("secondary"))
            .YAxis(axis =&gt; axis.Numeric())
            .YAxis(axis =&gt; axis.Numeric("secondary"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartScatterSeriesBuilderBase`2.Axis(System.String)">
            <summary>
            Not applicable to scatter series
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartPieConnectorsBuilder">
            <summary>
            Defines the fluent interface for configuring the chart connectors.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieConnectorsBuilder.#ctor(Kendo.Mvc.UI.ChartPieConnectors)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartPieConnectorsBuilder" /> class.
            </summary>
            <param name="pieConnectors">The connectors configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieConnectorsBuilder.Width(System.Int32)">
            <summary>
            Sets the connectors width
            </summary>
            <param name="width">The connectors width.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Pie(p =&gt; p.Sales)
            .Connectors(c =&gt; c
            .Width(3)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieConnectorsBuilder.Color(System.String)">
            <summary>
            Sets the connectors color
            </summary>
            <param name="color">The connectors color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Pie(p =&gt; p.Sales)
            .Connectors(c =&gt; c
            .Color(red)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPieConnectorsBuilder.Padding(System.Int32)">
            <summary>
            Sets the connectors padding
            </summary>
            <param name="padding">The connectors padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Pie(p =&gt; p.Sales)
            .Connectors(c =&gt; c
            .Padding(10)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartPlotBandsBuilder`1">
            <summary>
            Defines the fluent interface for configuring plot band.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPlotBandsBuilder`1.#ctor(Kendo.Mvc.UI.ChartPlotBand{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartPlotBandsBuilder{T}" /> class.
            </summary>
            <param name="item">The plot band.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPlotBandsBuilder`1.From(`0)">
            <summary>
            Sets the plot band start position.
            </summary>
            <param name="from">The plot band start position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .PlotBands(plotBands =&gt; plotBands
            .Add().From(1).Color("Red");
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPlotBandsBuilder`1.To(`0)">
            <summary>
            Sets the plot band end position.
            </summary>
            <param name="to">The plot band end position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .PlotBands(plotBands =&gt; plotBands
            .Add().To(2).Color("Red");
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPlotBandsBuilder`1.Color(System.String)">
            <summary>
            Sets the plot band background color
            </summary>
            <param name="color">The plot band background color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .PlotBands(plotBands =&gt; plotBands
            .Add().Color("Red");
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPlotBandsBuilder`1.Opacity(System.Double)">
            <summary>
            Sets the plot band opacity
            </summary>
            <param name="opacity">The plot band opacity.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .PlotBands(plotBands =&gt; plotBands
            .Add().Opacity(0.5);
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisPlotBandsFactory`2">
            <summary>
            Creates plot bands for the <see cref="!:ChartAxisPlotBandsFactory{TAxis, TValue}" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisPlotBandsFactory`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartAxisPlotBandsFactory{TAxis, TValue}" /> class.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartAxisPlotBandsFactory`2.Axis">
            <summary>
            The Axis
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisPlotBandsFactory`2.Add">
            <summary>
            Adds a plot band.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisPlotBandsFactory`2.Add(`1,`1,System.String)">
            <summary>
            Defines a item.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.ChartAxisTitle" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.#ctor(Kendo.Mvc.UI.ChartAxisTitle)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder" /> class.
            </summary>
            <param name="title">The chart axis title.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Text(System.String)">
            <summary>
            Sets the axis title text.
            </summary>
            <param name="text">The text of the axis title.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Text("Axis")
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Font(System.String)">
            <summary>
            Sets the axis title font.
            </summary>
            <param name="font">The axis title font (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Font("16px Arial,Helvetica,sans-serif")
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Background(System.String)">
            <summary>
            Sets the axis title background color.
            </summary>
            <param name="background">The axis background color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Background("red")
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Color(System.String)">
            <summary>
            Sets the axis title text color.
            </summary>
            <param name="color">The axis text color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Color("red")
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Position(Kendo.Mvc.UI.ChartAxisTitlePosition)">
            <summary>
            Sets the axis title position.
            </summary>
            <param name="position">The axis title position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Position(ChartTitlePosition.Center)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the axis title margin.
            </summary>
            <param name="top">The axis title top margin.</param>
            <param name="right">The axis title right margin.</param>
            <param name="bottom">The axis title bottom margin.</param>
            <param name="left">The axis title left margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Margin(20, 20, 20, 20)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Margin(System.Int32)">
            <summary>
            Sets the axis title margin.
            </summary>
            <param name="margin">The axis title margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Margin(20)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the axis title padding.
            </summary>
            <param name="top">The axis title top padding.</param>
            <param name="right">The axis title right padding.</param>
            <param name="bottom">The axis title bottom padding.</param>
            <param name="left">The axis title left padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Padding(20, 20, 20, 20)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Padding(System.Int32)">
            <summary>
            Sets the axis title padding
            </summary>
            <param name="padding">The axis title padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Padding(20)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the axis title border
            </summary>
            <param name="width">The axis title border width.</param>
            <param name="color">The axis title border color.</param>
            <param name="dashType">The axis title dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Border(1, "#000", ChartDashType.Dot)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the title border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder.Opacity(System.Double)">
            <summary>
            Sets the axis title opacity.
            </summary>
            <param name="opacity">
            The series opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Title(title =&gt; title
            .Opacity(0.5)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring area series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartAreaSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartAreaSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.Stack(System.Boolean)">
            <summary>
            Sets a value indicating if the areas should be stacked.
            </summary>
            <param name="stacked">A value indicating if the areas should be stacked.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Area(s =&gt; s.Sales).Stack(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.Aggregate(Kendo.Mvc.UI.ChartSeriesAggregate)">
            <summary>
            Sets the aggregate function for date series.
            This function is used when a category (an year, month, etc.) contains two or more points.
            </summary>
            <param name="aggregate">Aggregate function name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Area(s =&gt; s.Sales).Aggregate())
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.Labels(System.Action{Kendo.Mvc.UI.Fluent.ChartPointLabelsBuilder})">
            <summary>
            Configures the area chart labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Position(ChartBarLabelsPosition.Above)
            .Visible(true)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.Labels(System.Boolean)">
            <summary>
            Sets the visibility of area chart labels.
            </summary>
            <param name="visible">The visibility. The default value is false.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Labels(true);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.Line(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Configures the area chart line.
            </summary>
            <param name="width">The line width.</param>
            <param name="color">The line color.</param>
            <param name="dashType">The line dashType.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Line(2, "red", ChartDashType.Dot)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.Line(System.Action{Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder})">
            <summary>
            Configures the area chart line.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Line(line =&gt; line.Opacity(0.2))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.Markers(System.Action{Kendo.Mvc.UI.Fluent.ChartMarkersBuilder})">
            <summary>
            Configures the area chart markers.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Markers(markers =&gt; markers
            .Type(ChartMarkerShape.Triangle)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.Markers(System.Boolean)">
            <summary>
            Sets the visibility of area chart markers.
            </summary>
            <param name="visible">The visibility. The default value is true.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Markers(true);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaSeriesBuilder`1.MissingValues(Kendo.Mvc.UI.ChartAreaMissingValues)">
            <summary>
            Configures the behavior for handling missing values in area series.
            </summary>
            <param name="missingValues">The missing values behavior. The default is to leave gaps.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .MissingValues(ChartAreaMissingValues.Interpolate);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartBorderBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.ChartElementBorder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBorderBuilder.#ctor(Kendo.Mvc.UI.ChartElementBorder)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartBorderBuilder" /> class.
            </summary>
            <param name="chartBorder">The chart border.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBorderBuilder.Color(System.String)">
            <summary>
            Sets the border color.
            </summary>
            <param name="color">The border color (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.Border(border =&gt; border.Color("#f00")))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBorderBuilder.Opacity(System.Double)">
            <summary>
            Sets the border opacity
            </summary>
            <param name="opacity">The border opacity (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.Border(border =&gt; border.Opacity(0.2)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBorderBuilder.Width(System.Int32)">
            <summary>
            Sets the border width.
            </summary>
            <param name="width">The border width.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.Border(border =&gt; border.Width(2)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBorderBuilder.DashType(Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the border dashType.
            </summary>
            <param name="dashType">The border dashType.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.Border(border =&gt; border.DashType(ChartDashType.Dot)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.ChartLine" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder.#ctor(Kendo.Mvc.UI.ChartLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder" /> class.
            </summary>
            <param name="chartLine">The chart line.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder.Color(System.String)">
            <summary>
            Sets the line color
            </summary>
            <param name="color">The line color (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Line(line =&gt; line.Color("#f00"))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder.Width(System.Int32)">
            <summary>
            Sets the line width
            </summary>
            <param name="width">The line width.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Line(line =&gt; line.Width(6))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder.DashType(Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the line dashType.
            </summary>
            <param name="dashType">The line dashType.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Line(line =&gt; line.DashType(ChartDashType.Dot))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder.Opacity(System.Double)">
            <summary>
            Sets the line opacity.
            </summary>
            <param name="opacity">The line opacity.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Line(line =&gt; line.Opacity(0.2))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartLineBuilderBase">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.ChartLine" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineBuilderBase.#ctor(Kendo.Mvc.UI.ChartLineBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartLineBuilder" /> class.
            </summary>
            <param name="chartLine">The chart line.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineBuilderBase.Color(System.String)">
            <summary>
            Sets the line color
            </summary>
            <param name="color">The line color (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.MajorGridLines(lines =&gt; lines.Color("#f00")))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineBuilderBase.Width(System.Int32)">
            <summary>
            Sets the line width
            </summary>
            <param name="width">The line width.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.MajorGridLines(lines =&gt; lines.Width(2)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineBuilderBase.DashType(Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the line dashType.
            </summary>
            <param name="dashType">The line dashType.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.MajorGridLines(lines =&gt; lines.DashType(ChartDashType.Dot)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisTicksBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.ChartAxisTicks" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTicksBuilder.#ctor(Kendo.Mvc.UI.ChartAxisTicks)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisTicksBuilder" /> class.
            </summary>
            <param name="gaugeTicks">The chart axis ticks.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTicksBuilder.Size(System.Int32)">
            <summary>
            Sets the ticks size
            </summary>
            <param name="size">The ticks size.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("chart")
            .ValueAxis(axis =&gt; axis.MajorTicks(ticks =&gt; ticks.Size(2)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisTicksBuilder.Visible(System.Boolean)">
            <summary>
            Sets the ticks visibility
            </summary>
            <param name="visible">The ticks visibility.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("chart")
            .ValueAxis(axis =&gt; axis.MajorTicks(ticks =&gt; ticks.Visible(false)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1">
            <summary>
            Configures date category axis for the <see cref="!:Chart{TModel}" />.
            </summary>
            <typeparam name="TModel">The type of the data item to which the chart is bound to</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.#ctor(Kendo.Mvc.UI.Chart{`0},Kendo.Mvc.UI.IChartCategoryAxis)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartCategoryAxisBuilder{TModel}" /> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Container">
            <summary>
            The parent Chart
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Categories(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Defines bound categories.
            </summary>
            <param name="expression">
            The expression used to extract the categories value from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Categories(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Defines categories.
            </summary>
            <param name="categories">
            The list of categories
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Categories(System.DateTime[])">
            <summary>
            Defines categories.
            </summary>
            <param name="categories">
            The list of categories
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.BaseUnit(Kendo.Mvc.UI.ChartAxisBaseUnit)">
            <summary>
            Sets the date category axis base unit.
            </summary>
            <param name="baseUnit">
            The date category axis base unit
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.BaseUnitStep(System.Int32)">
            <summary>
            Sets the step (interval) between categories in base units.
            Specifiying 0 (auto) will set the step to such value that the total
            number of categories does not exceed MaxDateGroups.
            </summary>
            <remarks>
            This option is ignored if baseUnit is set to "fit".
            </remarks>
            <param name="baseUnitStep">
            the step (interval) between categories in base units.
            Set 0 for automatic step. The default value is 1.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.MaxDateGroups(System.Int32)">
            <summary>
            Specifies the maximum number of groups (categories) that the chart will attempt to
            produce when either BaseUnit is set to Fit or BaseUnitStep is set to 0 (auto).
            This option is ignored in all other cases.
            </summary>
            <param name="maxDateGroups">
            the maximum number of groups (categories).
            The default value is 10.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.RoundToBaseUnit(System.Boolean)">
            <summary>
            If set to false, the min and max dates will not be rounded off to
            the nearest baseUnit.
            This option is most useful in combination with explicit min and max dates.
            It will be ignored if either Bar, Column, OHLC or Candlestick series are plotted on the axis.
            </summary>
            <param name="roundToBaseUnit">
            A boolean value that indicates if the axis range should be rounded to the nearest base unit.
            The default value is true.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Justify(System.Boolean)">
            <summary>
            Positions categories and series points on major ticks. This removes the empty space before and after the series.
            This option will be ignored if either Bar, Column, OHLC or Candlestick series are plotted on the axis.
            </summary>
            <param name="justified">
            A boolean value that indicates if the empty space before and after the series should be removed.
            The default value is false.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Justify">
            <summary>
            Positions categories and series points on major ticks. This removes the empty space before and after the series.
            This option will be ignored if either Bar, Column, OHLC or Candlestick series are plotted on the axis.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.AutoBaseUnitSteps(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisBaseUnitStepsBuilder})">
            <summary>
            Specifies the discrete baseUnitStep values when
            either BaseUnit is set to Fit or BaseUnitStep is set to 0 (auto).
            </summary>
            <param name="configurator">
            The configuration action.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Min(System.DateTime)">
            <summary>
            Sets the date category axis minimum (start) date.
            </summary>
            <param name="min">
            The date category axis minimum (start) date
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Max(System.DateTime)">
            <summary>
            Sets the date category axis maximum (end) date.
            </summary>
            <param name="max">
            The date category axis maximum (end) date
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.AxisCrossingValue(System.Double)">
            <summary>
            Sets value at which the first perpendicular axis crosses this axis.
            </summary>
            <param name="axisCrossingValue">The value at which the first perpendicular axis crosses this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Date().AxisCrossingValue(4))
            .ValueAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .ValueAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.AxisCrossingValue(System.Double[])">
            <summary>
            Sets value at which perpendicular axes cross this axis.
            </summary>
            <param name="axisCrossingValues">The values at which perpendicular axes cross this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Date().AxisCrossingValue(0, 10))
            .ValueAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .ValueAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.AxisCrossingValue(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets value at which perpendicular axes cross this axis.
            </summary>
            <param name="axisCrossingValues">The values at which perpendicular axes cross this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Date().AxisCrossingValue(new double[] { 0, 10 }))
            .ValueAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .ValueAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Labels(System.Action{Kendo.Mvc.UI.Fluent.ChartDateAxisLabelsBuilder})">
            <summary>
            Configures the axis labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Date()
            .Labels(labels =&gt; labels
            .Culture(new CultureInfo("es-ES")
            .Visible(true)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Select(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets the selection range
            </summary>
            <param name="from">The selection range start.</param>
            <param name="to">The selection range end.
            *Note*: The specified date is not included in the selected range
            unless the axis is justified. In order to select all categories specify
            a value larger than the last date.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("StockChart")
            .CategoryAxis(axis =&gt; axis.Select(DateTime.Today.AddMonths(-1), DateTime.Today))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateCategoryAxisBuilder`1.Select(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder})">
            <summary>
            Configures the selection
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("StockChart")
            .CategoryAxis(axis =&gt; axis.Select(select =&gt;
            select.Mousewheel(mw =&gt; mw.Reverse())
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartDateAxisLabelsBuilder">
            <summary>
            Defines the fluent interface for configuring the chart labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisLabelsBuilder.#ctor(Kendo.Mvc.UI.ChartAxisLabels)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartDateAxisLabelsBuilder" /> class.
            </summary>
            <param name="chartLabels">The labels configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisLabelsBuilder.Culture(System.Globalization.CultureInfo)">
            <summary>
            Culture to use for formatting the dates.
            </summary>
            <param name="culture">Culture to use for formatting the dates.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Date()
            .Categories(sale =&gt; sale.Date)
            .Labels(labels =&gt; labels.Culture(new CultureInfo("es-ES")))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisLabelsBuilder.DateFormats(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder})">
            <summary>
            Culture to use for formatting the dates.
            See <a href="http://www.kendoui.com/documentation/framework/globalization/overview.aspx">Globalization</a>
            for more information.
            </summary>
            <param name="configurator">Culture to use for formatting the dates.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Date()
            .Categories(sale =&gt; sale.Date)
            .Labels(labels =&gt; labels.Culture(new CultureInfo("es-ES")))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.ChartLine" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder.#ctor(Kendo.Mvc.UI.ChartAxisLabelsDateFormats)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder" /> class.
            </summary>
            <param name="dateFormats">The date formats.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder.Hours(System.String)">
            <summary>
            Sets the date format when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Hours" /></summary>
            <param name="format">The date format.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Date()
            .Labels(labels =&gt; labels
            .DateFormats(formats =&gt; formats
            .Hours("HH:mm")
            )
            )
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder.Days(System.String)">
            <summary>
            Sets the date format when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Days" /></summary>
            <param name="format">The date format.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Date()
            .Labels(labels =&gt; labels
            .DateFormats(formats =&gt; formats
            .Days("dddd dd")
            )
            )
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder.Minutes(System.String)">
            <summary>
            Sets the date format when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Minutes" /></summary>
            <param name="format">The date format.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Date()
            .Labels(labels =&gt; labels
            .DateFormats(formats =&gt; formats
            .Minutes("ss")
            )
            )
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder.Months(System.String)">
            <summary>
            Sets the date format when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Months" /></summary>
            <param name="format">The date format.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Date()
            .Labels(labels =&gt; labels
            .DateFormats(formats =&gt; formats
            .Months("MMMM MM")
            )
            )
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder.Weeks(System.String)">
            <summary>
            Sets the date format when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Months" /></summary>
            <param name="format">The date format.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Date()
            .Labels(labels =&gt; labels
            .DateFormats(formats =&gt; formats
            .Months("dddd")
            )
            )
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisLabelsDateFormatsBuilder.Years(System.String)">
            <summary>
            Sets the date format when the base date unit is <see cref="F:Kendo.Mvc.UI.ChartAxisBaseUnit.Years" /></summary>
            <param name="format">The date format.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Date()
            .Labels(labels =&gt; labels
            .DateFormats(formats =&gt; formats
            .Years("yyyy")
            )
            )
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder">
            <summary>
            Defines the fluent interface for configuring numeric axis.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.#ctor(Kendo.Mvc.UI.IChartDateAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder" /> class.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.BaseUnit(Kendo.Mvc.UI.ChartAxisBaseUnit)">
            <summary>
            Sets the date axis base unit.
            </summary>
            <param name="baseUnit">
            The date axis base unit
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.Min(System.DateTime)">
            <summary>
            Sets the start date of the axis.
            </summary>
            <param name="min">The start date of the axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .XAxis(a =&gt; a.Date().Min(DateTime.Parse("2012/01/01")))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.Max(System.DateTime)">
            <summary>
            Sets the end date of the axis.
            </summary>
            <param name="max">The end date of the axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .XAxis(a =&gt; a.Date().Max(DateTime.Parse("2012/01/01")))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.MajorUnit(System.Double)">
            <summary>
            Sets the interval between major divisions in base units.
            </summary>
            <param name="majorUnit">The interval between major divisions in base units.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .XAxis(a =&gt; a.Date().BaseUnit(ChartAxisBaseUnit.Months).MajorUnit(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.MinorUnit(System.Double)">
            <summary>
            Sets the interval between minor divisions in base units.
            It defaults to 1/5th of the majorUnit
            </summary>
            <param name="minorUnit">The interval between minor divisions in base units.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .XAxis(a =&gt; a.Date().BaseUnit(ChartAxisBaseUnit.Days).MajorUnit(4).MinorUnit(2))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.AxisCrossingValue(System.DateTime)">
            <summary>
            Sets value at which the first perpendicular axis crosses this axis.
            </summary>
            <param name="axisCrossingValue">The value at which the first perpendicular axis crosses this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .XAxis(axis =&gt; axis.Date().AxisCrossingValue(DateTime.Parse("2012/01/01")))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.AxisCrossingValue(System.DateTime[])">
            <summary>
            Sets value at which perpendicular axes cross this axis.
            </summary>
            <param name="axisCrossingValues">The values at which perpendicular axes cross this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Date().AxisCrossingValue(DateTime.Parse("2012/01/01"), DateTime.Parse("2012/01/10")))
            .ValueAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .ValueAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.AxisCrossingValue(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Sets value at which perpendicular axes cross this axis.
            </summary>
            <param name="axisCrossingValues">The values at which perpendicular axes cross this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Date().AxisCrossingValue(new DateTime[] {
            DateTime.Parse("2012/01/01"), DateTime.Parse("2012/01/10")
            }))
            .ValueAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .ValueAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDateAxisBuilder.Labels(System.Action{Kendo.Mvc.UI.Fluent.ChartDateAxisLabelsBuilder})">
            <summary>
            Configures the axis labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .XAxis(axis =&gt; axis
            .Date()
            .Labels(labels =&gt; labels
            .Culture(new CultureInfo("es-ES")
            .Visible(true)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartDonutSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring donut series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDonutSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartDonutSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartDonutSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartDonutSeriesBuilder`1.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDonutSeriesBuilder`1.Margin(System.Int32)">
            <summary>
            Sets the margin of the donut series.
            </summary>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Donut(s =&gt; s.Sales, s =&gt; s.DateString).Margin(10))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDonutSeriesBuilder`1.HoleSize(System.Int32)">
            <summary>
            Sets the the size of the donut hole.
            </summary>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Donut(s =&gt; s.Sales, s =&gt; s.DateString).HoleSize(40))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartDonutSeriesBuilder`1.Size(System.Int32)">
            <summary>
            Sets the size of the donut series.
            </summary>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Donut(s =&gt; s.Sales, s =&gt; s.DateString).Size(20))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring bubble series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartBubbleSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBubbleSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesBuilder`1.NegativeValues(System.Action{Kendo.Mvc.UI.Fluent.ChartNegativeValueSettingsBuilder})">
            <summary>
            Configures the bubble chart behavior for negative values.
            By default negative values are not visible.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bubble(s =&gt; s.x, s =&gt; s.y, s =&gt; s.size)
            .NegativeValues(n =&gt; n
            .Visible(true)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesBuilder`1.Border(System.Int32,System.String)">
            <summary>
            Sets the bubble border
            </summary>
            <param name="width">The bubble border width.</param>
            <param name="color">The bubble border color (CSS syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bubble(s =&gt; s.x, s =&gt; s.y, s =&gt; s.size)
            .Border(1, "Red");
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesBuilder`1.Markers(System.Action{Kendo.Mvc.UI.Fluent.ChartMarkersBuilder})">
            <summary>
            Not applicable to bubble series
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesBuilder`1.Markers(System.Boolean)">
            <summary>
            Not applicable to bubble series
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBubbleSeriesBuilder`1.Highlight(System.Action{Kendo.Mvc.UI.Fluent.ChartBubbleSeriesHighlightBuilder})">
            <summary>
            Configures the bubble highlight
            </summary>
            <param name="configurator">The configuration action.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartNegativeValueSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.ChartNegativeValueSettings" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNegativeValueSettingsBuilder.#ctor(Kendo.Mvc.UI.ChartNegativeValueSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartNegativeValueSettingsBuilder" /> class.
            </summary>
            <param name="negativeValues">The negative value settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNegativeValueSettingsBuilder.Color(System.String)">
            <summary>
            Sets the color for bubbles representing negative values
            </summary>
            <param name="color">The bubble color (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bubble(s =&gt; s.x, s =&gt; s.y, s =&gt; s.size)
            .NegativeValues(n =&gt; n
            .Visible(true)
            .Color("#ff0000")
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNegativeValueSettingsBuilder.Visible(System.Boolean)">
            <summary>
            Sets the visibility for bubbles representing negative values
            </summary>
            <param name="visible">The visibility for bubbles representing negative values.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bubble(s =&gt; s.x, s =&gt; s.y, s =&gt; s.size)
            .NegativeValues(n =&gt; n
            .Visible(true)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring bar series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartOHLCSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartOHLCSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.Aggregate(System.Nullable{Kendo.Mvc.UI.ChartSeriesAggregate},System.Nullable{Kendo.Mvc.UI.ChartSeriesAggregate},System.Nullable{Kendo.Mvc.UI.ChartSeriesAggregate},System.Nullable{Kendo.Mvc.UI.ChartSeriesAggregate})">
            <summary>
            Sets the aggregate function for date series.
            This function is used when a category (an year, month, etc.) contains two or more points.
            </summary>
            <param name="open">Open aggregate name.</param>
            <param name="high">High aggregate name.</param>
            <param name="low">Low aggregate name.</param>
            <param name="close">Close aggregate name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.OHLC(s =&gt; s.Sales).Aggregate(ChartSeriesAggregate.Avg))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.Gap(System.Double)">
            <summary>
            Set distance between category clusters.
            <param name="gap">
            A value of 1 means that there is a total of 1 point width between categories.
            The distance is distributed evenly on each side.
            The default value is 1
            </param></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.OHLC(s =&gt; s.Sales).Gap(1.5))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.Spacing(System.Double)">
            <summary>
            Sets a value indicating the distance between points in the same category.
            </summary>
            <param name="spacing">
            Value of 1 means that the distance between points in the same category.
            The default value is 0.3
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Spacing(s =&gt; s.Sales).Spacing(1))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the points border
            </summary>
            <param name="width">The points border width.</param>
            <param name="color">The points border color (CSS syntax).</param>
            <param name="dashType">The points border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.OHLC(s =&gt; s.Sales).Border("1", "#000", ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.Line(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Configures the ohlc chart lines.
            </summary>
            <param name="width">The lines width.</param>
            <param name="color">The lines color.</param>
            <param name="dashType">The lines dashType.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .OHLC(s =&gt; s.Sales)
            .Line(2, "red", ChartDashType.Dot)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.Line(System.Int32)">
            <summary>
            Configures the ohlc line width.
            </summary>
            <param name="width">The lines width.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.Line(System.Int32,System.String)">
            <summary>
            Configures the ohlc lines.
            </summary>
            <param name="width">The lines width.</param>
            <param name="color">The lines color.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.Line(System.Action{Kendo.Mvc.UI.Fluent.ChartAreaLineBuilder})">
            <summary>
            Configures the ohlc chart lines.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Area(s =&gt; s.Sales)
            .Line(line =&gt; line.Opacity(0.2))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartOHLCSeriesBuilder`1.Highlight(System.Action{Kendo.Mvc.UI.Fluent.ChartOHLCSeriesHighlightBuilder})">
            <summary>
            Configures the series highlight
            </summary>
            <param name="configurator">The configuration action.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring candlestick series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartCandlestickSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartCandlestickSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesBuilder`1.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesBuilder`1.Overlay(Kendo.Mvc.UI.ChartBarSeriesOverlay)">
            <summary>
            Sets the bar effects overlay
            </summary>
            <param name="overlay">The candlestick effects overlay. The default is ChartBarSeriesOverlay.Glass</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Candlestick(s =&gt; s.Sales).Overlay(ChartBarSeriesOverlay.None))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesBuilder`1.Highlight(System.Action{Kendo.Mvc.UI.Fluent.ChartCandlestickSeriesHighlightBuilder})">
            <summary>
            Configures the series highlight
            </summary>
            <param name="configurator">The configuration action.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartMarkers.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartMarkers" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartMarkers.Size">
            <summary>
            Gets or sets the markers size.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartMarkers.Background">
            <summary>
            Gets or sets the markers background.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartMarkers.Type">
            <summary>
            Gets or sets the markers type.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartMarkers.Visible">
            <summary>
            Gets or sets the markers visibility.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartMarkers.Border">
            <summary>
            Gets or sets the markers border.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring line series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartLineSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartLineSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.Stack(System.Boolean)">
            <summary>
            Sets a value indicating if the lines should be stacked.
            </summary>
            <param name="stacked">A value indicating if the lines should be stacked.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Line(s =&gt; s.Sales).Stack(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.Aggregate(Kendo.Mvc.UI.ChartSeriesAggregate)">
            <summary>
            Sets the aggregate function for date series.
            This function is used when a category (an year, month, etc.) contains two or more points.
            </summary>
            <param name="aggregate">Aggregate function name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Line(s =&gt; s.Sales).Aggregate())
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.Labels(System.Action{Kendo.Mvc.UI.Fluent.ChartPointLabelsBuilder})">
            <summary>
            Configures the line chart labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Position(ChartBarLabelsPosition.Above)
            .Visible(true)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.Labels(System.Boolean)">
            <summary>
            Sets the visibility of line chart labels.
            </summary>
            <param name="visible">The visibility. The default value is false.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Labels(true);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.Width(System.Double)">
            <summary>
            Sets the line chart line width.
            </summary>
            <param name="width">The line width.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Line(s =&gt; s.Sales).Width(2))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.DashType(Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the line chart line dash type.
            </summary>
            <param name="dashType">The line dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Line(s =&gt; s.Sales).DashType(ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.Markers(System.Action{Kendo.Mvc.UI.Fluent.ChartMarkersBuilder})">
            <summary>
            Configures the line chart markers.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Markers(markers =&gt; markers
            .Type(ChartMarkerShape.Triangle)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.Markers(System.Boolean)">
            <summary>
            Sets the visibility of line chart markers.
            </summary>
            <param name="visible">The visibility. The default value is true.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Markers(true);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineSeriesBuilder`1.MissingValues(Kendo.Mvc.UI.ChartLineMissingValues)">
            <summary>
            Configures the behavior for handling missing values in line series.
            </summary>
            <param name="missingValues">The missing values behavior. The default is to leave gaps.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .MissingValues(ChartLineMissingValues.Interpolate);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartPointLabelsBuilder">
            <summary>
            Defines the fluent interface for configuring the chart data labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPointLabelsBuilder.#ctor(Kendo.Mvc.UI.ChartPointLabels)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartPointLabelsBuilder" /> class.
            </summary>
            <param name="chartPointLabels">The data labels configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartPointLabelsBuilder.Position(Kendo.Mvc.UI.ChartPointLabelsPosition)">
            <summary>
            Sets the labels position
            </summary>
            <param name="position">The labels position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Position(ChartPointLabelsPosition.Above)
            .Visible(true)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartMarkersBuilder">
            <summary>
            Defines the fluent interface for configuring the chart data labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartMarkersBuilder.#ctor(Kendo.Mvc.UI.ChartMarkers)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartMarkersBuilder" /> class.
            </summary>
            <param name="chartLineMarkers">The line chart markers configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartMarkersBuilder.Type(Kendo.Mvc.UI.ChartMarkerShape)">
            <summary>
            Sets the markers shape type.
            </summary>
            <param name="type">The markers shape type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Markers(markers =&gt; markers
            .Type(ChartMarkerShape.Triangle)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartMarkersBuilder.Size(System.Int32)">
            <summary>
            Sets the markers size.
            </summary>
            <param name="size">The markers size.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Markers(markers =&gt; markers
            .Size(10)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartMarkersBuilder.Visible(System.Boolean)">
            <summary>
            Sets the markers visibility
            </summary>
            <param name="visible">The markers visibility.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Markers(markers =&gt; markers
            .Visible(true)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartMarkersBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the markers border
            </summary>
            <param name="width">The markers border width.</param>
            <param name="color">The markers border color (CSS syntax).</param>
            <param name="dashType">The markers border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Markers(markers =&gt; markers
            .Border(1, "Red", ChartDashType.Dot)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartMarkersBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the markers border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartMarkersBuilder.Background(System.String)">
            <summary>
            The background color of the current series markers.
            </summary>
            <param name="backgorund">The background color of the current series markers. The background color is series color.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Line(s =&gt; s.Sales)
            .Markers(markers =&gt; markers
            .Background("Red");
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.PlotAreaBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.PlotArea" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PlotAreaBuilder.#ctor(Kendo.Mvc.UI.PlotArea)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.PlotAreaBuilder" /> class.
            </summary>
            <param name="plotArea">The plot area.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PlotAreaBuilder.Background(System.String)">
            <summary>
            Sets the Plot area background color
            </summary>
            <param name="background">The background color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .PlotArea(plotArea =&gt; plotArea.Background("Red"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PlotAreaBuilder.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the Plot area margin
            </summary>
            <param name="top">The plot area top margin.</param>
            <param name="right">The plot area right margin.</param>
            <param name="bottom">The plot area bottom margin.</param>
            <param name="left">The plot area left margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .PlotArea(plotArea =&gt; plotArea.Margin(0, 5, 5, 0))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PlotAreaBuilder.Margin(System.Int32)">
            <summary>
            Sets the Plot area margin
            </summary>
            <param name="margin">The plot area margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .PlotArea(plotArea =&gt; plotArea.Margin(5))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PlotAreaBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the Plot area border
            </summary>
            <param name="width">The border width.</param>
            <param name="color">The border color (CSS syntax).</param>
            <param name="dashType">The border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .PlotArea(plotArea =&gt; plotArea.Border(1, "#000", ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PlotAreaBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the plot area border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.PlotArea.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.PlotArea" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.PlotArea.Background">
            <summary>
            Gets or sets the plot area background.
            </summary>
            <value>
            The plot area background.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.PlotArea.Border">
            <summary>
            Gets or sets the plot area border.
            </summary>
            <value>
            The plot area border.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.PlotArea.Margin">
            <summary>
            Gets or sets the plot area margin.
            </summary>
            <value>
            The plot area margin.
            </value>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1">
            <summary>
            Defines the fluent interface for configuring the chart labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.#ctor(Kendo.Mvc.UI.ChartLabels)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartLabelsBuilderBase{TBuilder}" /> class.
            </summary>
            <param name="chartLabels">The labels configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Font(System.String)">
            <summary>
            Sets the labels font
            </summary>
            <param name="font">The labels font (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Font("14px Arial,Helvetica,sans-serif")
            .Visible(true)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Visible(System.Boolean)">
            <summary>
            Sets the labels visibility
            </summary>
            <param name="visible">The labels visibility.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Visible(true)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Background(System.String)">
            <summary>
            Sets the labels background color
            </summary>
            <param name="background">The labels background color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Background("Red")
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Color(System.String)">
            <summary>
            Sets the labels text color
            </summary>
            <param name="color">The labels text color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Color("Red")
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the labels margin
            </summary>
            <param name="top">The labels top margin.</param>
            <param name="right">The labels right margin.</param>
            <param name="bottom">The labels bottom margin.</param>
            <param name="left">The labels left margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Margin(0, 5, 5, 0)
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Margin(System.Int32)">
            <summary>
            Sets the labels margin
            </summary>
            <param name="margin">The labels margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Margin(20)
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the labels padding
            </summary>
            <param name="top">The labels top padding.</param>
            <param name="right">The labels right padding.</param>
            <param name="bottom">The labels bottom padding.</param>
            <param name="left">The labels left padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Padding(0, 5, 5, 0)
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Padding(System.Int32)">
            <summary>
            Sets the labels padding
            </summary>
            <param name="padding">The labels padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Padding(20)
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the labels border
            </summary>
            <param name="width">The labels border width.</param>
            <param name="color">The labels border color (CSS syntax).</param>
            <param name="dashType">The labels border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Border(1, "Red", ChartDashType.Dot)
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the labels border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Format(System.String)">
            <summary>
            Sets the labels format.
            </summary>
            <param name="format">The labels format.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Format("{0:C}")
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Template(System.String)">
            <summary>
            Sets the labels template.
            </summary>
            <param name="template">The labels template.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Template("${TotalSales}")
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Opacity(System.Double)">
            <summary>
            Sets the labels opacity.
            </summary>
            <param name="opacity">
            The series opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Opacity(0.5)
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLabelsBuilderBase`1.Rotation(System.Int32)">
            <summary>
            Sets the labels text rotation
            </summary>
            <param name="rotation">The labels text rotation.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Rotation(45)
            .Visible(true);
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartBarLabelsBuilder">
            <summary>
            Defines the fluent interface for configuring the chart data labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarLabelsBuilder.#ctor(Kendo.Mvc.UI.ChartBarLabels)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartBarLabelsBuilder" /> class.
            </summary>
            <param name="chartBarLabels">The data labels configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarLabelsBuilder.Position(Kendo.Mvc.UI.ChartBarLabelsPosition)">
            <summary>
            Sets the labels position
            </summary>
            <param name="position">The labels position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Position(ChartBarLabelsPosition.InsideEnd)
            .Visible(true)
            );
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAreaBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.ChartArea" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaBuilder.#ctor(Kendo.Mvc.UI.ChartArea)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartAreaBuilder" /> class.
            </summary>
            <param name="chartArea">The chart area.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaBuilder.Background(System.String)">
            <summary>
            Sets the chart area background color.
            </summary>
            <param name="background">The background color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.Background("Red"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaBuilder.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the chart area margin.
            </summary>
            <param name="top">The chart area top margin.</param>
            <param name="right">The chart area right margin.</param>
            <param name="bottom">The chart area bottom margin.</param>
            <param name="left">The chart area left margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.Margin(0, 5, 5, 0))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaBuilder.Margin(System.Int32)">
            <summary>
            Sets the chart area margin.
            </summary>
            <param name="margin">The chart area margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.Margin(5))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the chart area border.
            </summary>
            <param name="width">The border width.</param>
            <param name="color">The border color (CSS syntax).</param>
            <param name="dashType">The border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.Border(1, "#000", ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAreaBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the plot area border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartLineBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.ChartLine" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineBuilder.#ctor(Kendo.Mvc.UI.ChartLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartLineBuilder" /> class.
            </summary>
            <param name="chartLine">The chart line.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLineBuilder.Visible(System.Boolean)">
            <summary>
            Sets the line visibility
            </summary>
            <param name="visible">The line visibility.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.MajorGridLines(lines =&gt; lines.Visible(true)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1">
            <summary>
            Defines the fluent API for configuring the chart series defaults.
            </summary>
            <typeparam name="TModel">
            </typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.Bar">
            <summary>
            Defines the default settings for bar series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.Column">
            <summary>
            Defines the default settings for column series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.Line">
            <summary>
            Defines the default settings for line series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.VerticalLine">
            <summary>
            Defines the default settings for vertical line series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.Area">
            <summary>
            Defines the default settings for area series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.VerticalArea">
            <summary>
            Defines the default settings for vertical area series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.Pie">
            <summary>
            Defines the default settings for pie series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.Donut">
            <summary>
            Defines the default settings for donut series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.Scatter">
            <summary>
            Defines the default settings for scatter series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.ScatterLine">
            <summary>
            Defines the default settings for scatter line series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder`1.OHLC">
            <summary>
            Defines the default settings for ohlc series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBarLabels.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartBarLabels" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarLabels.Position">
            <summary>
            Gets or sets the label position.
            </summary>
            <remarks>
            The default value is <see cref="F:Kendo.Mvc.UI.ChartBarLabelsPosition.OutsideEnd" /> for clustered series and
            <see cref="F:Kendo.Mvc.UI.ChartBarLabelsPosition.InsideEnd" /> for stacked series.
            </remarks>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartValueAxisFactory`1">
            <summary>
            Creates value axis for the <see cref="!:Chart{TModel}" />.
            </summary>
            <typeparam name="TModel">The type of the data item to which the chart is bound to</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartValueAxisFactory`1.#ctor(Kendo.Mvc.UI.Chart{`0},System.Collections.Generic.IList{Kendo.Mvc.UI.IChartValueAxis})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartValueAxisFactory{TModel}" /> class.
            </summary>
            <param name="container">The container.</param>
            <param name="axes">The chart axes.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartValueAxisFactory`1.Numeric">
            <summary>
            Defines a numeric value axis.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartValueAxisFactory`1.Numeric(System.String)">
            <summary>
            Defines a numeric value axis.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartValueAxisFactory`1.Date">
            <summary>
            Defines a date value axis.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartValueAxisFactory`1.Date(System.String)">
            <summary>
            Defines a date value axis.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3">
            <summary>
            Defines the fluent interface for configuring axes.
            </summary>
            <typeparam name="TAxis">
            </typeparam>
            <typeparam name="TValue">
            </typeparam>
            <typeparam name="TAxisBuilder">The type of the series builder.</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartAxisBuilderBase{TAxis, TValue, TAxisBuilder}" /> class.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Axis">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.MajorTicks(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisTicksBuilder})">
            <summary>
            Configures the major ticks.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(axis =&gt; axis
            .MajorTicks(ticks =&gt; ticks
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Crosshair(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisCrosshairBuilder})">
            <summary>
            Configures the major ticks.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(axis =&gt; axis
            .Crosshair(crosshair =&gt; crosshair
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Name(System.String)">
            <summary>
            Sets the axis name.
            </summary>
            <param name="name">The axis name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(axis =&gt; axis
            .Name("axisName")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.MinorTicks(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisTicksBuilder})">
            <summary>
            Configures the minor ticks.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(axis =&gt; axis
            .MinorTicks(ticks =&gt; ticks
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.MajorGridLines(System.Action{Kendo.Mvc.UI.Fluent.ChartLineBuilder})">
            <summary>
            Configures the major grid lines.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .MajorGridLines(lines =&gt; lines.Visible(true))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.MajorGridLines(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets color and width of the major grid lines and enables them.
            </summary>
            <param name="color">The major gridlines width</param>
            <param name="width">The major gridlines color (CSS syntax)</param>
            <param name="dashType">The major gridlines line dashType.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .MajorGridLines(2, "red", ChartDashType.Dot)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.MinorGridLines(System.Action{Kendo.Mvc.UI.Fluent.ChartLineBuilder})">
            <summary>
            Configures the minor grid lines.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .MinorGridLines(lines =&gt; lines.Visible(true))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.MinorGridLines(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets color and width of the minor grid lines and enables them.
            </summary>
            <param name="color">The minor gridlines width</param>
            <param name="width">The minor gridlines color (CSS syntax)</param>
            <param name="dashType">The minor grid lines dash type</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .MinorGridLines(2, "red", ChartDashType.Dot)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Line(System.Action{Kendo.Mvc.UI.Fluent.ChartLineBuilder})">
            <summary>
            Configures the axis line.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .Line(line =&gt; line.Color("#f00"))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Line(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets color and width of the lines and enables them.
            </summary>
            <param name="color">The axis line width</param>
            <param name="width">The axis line color (CSS syntax)</param>
            <param name="dashType">The axis line dashType.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .Line(2, "#f00", ChartDashType.Dot)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Labels(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisLabelsBuilder})">
            <summary>
            Configures the axis labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Labels(labels =&gt; labels
            .Color("Red")
            .Visible(true)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Labels(System.Boolean)">
            <summary>
            Sets the visibility of numeric axis chart labels.
            </summary>
            <param name="visible">The visibility. The default value is false.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.Labels(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.PlotBands(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisPlotBandsFactory{`0,`1}})">
            <summary>
            Defines the plot bands items.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .PlotBands.Add()
            .From(1)
            .To(2)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Title(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisTitleBuilder})">
            <summary>
            Configures the chart axis title.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .Title(title =&gt; title.Text("Axis"))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Title(System.String)">
            <summary>
            Sets the axis title.
            </summary>
            <param name="title">The axis title.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .Title("Axis")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Pane(System.String)">
            <summary>
            Renders the axis in the pane with the specified name.
            </summary>
            <param name="pane">The pane name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Panes(panes =&gt; {
            panes.Add().Title("Value");
            panes.Add("volumePane").Title("Volume");
            })
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .Pane("volumePane")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Color(System.String)">
            <summary>
            Sets the color for all axis elements. Can be overriden by individual settings.
            </summary>
            <param name="color">The axis color.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .Color("#ff0000")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Reverse(System.Boolean)">
            <summary>
            Sets the axis reverse option.
            </summary>
            <param name="reverse">A value indicating if the axis labels should be rendered in reverse.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .Reverse(true)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Reverse">
            <summary>
            Reverse the axis.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            .Reverse()
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.Visible(System.Boolean)">
            <summary>
            Sets the axis visibility
            </summary>
            <param name="visible">The axis visibility.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartAxisBuilderBase`3.NarrowRange(System.Boolean)">
            <summary>
            A value indicating if the automatic axis range should snap to 0.
            </summary>
            <param name="narrowRange">The narrowRange value.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder">
            <summary>
            Defines the fluent interface for configuring numeric axis.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder.#ctor(Kendo.Mvc.UI.IChartNumericAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder" /> class.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder.Min(System.Double)">
            <summary>
            Sets the axis minimum value.
            </summary>
            <param name="min">The axis minimum value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(a =&gt; a.Numeric().Min(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder.Max(System.Double)">
            <summary>
            Sets the axis maximum value.
            </summary>
            <param name="max">The axis maximum value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(a =&gt; a.Numeric().Max(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder.MajorUnit(System.Double)">
            <summary>
            Sets the interval between major divisions.
            </summary>
            <param name="majorUnit">The interval between major divisions.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(a =&gt; a.Numeric().MajorUnit(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder.MinorUnit(System.Double)">
            <summary>
            Sets the interval between minor divisions.
            It defaults to MajorUnit / 5.
            </summary>
            <param name="minorUnit">The interval between minor divisions.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(a =&gt; a.Numeric()
            .MajorUnit(4)
            .MinorUnit(2)
            .MinorTicks(mt =&gt; mt.Visible(true))
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder.AxisCrossingValue(System.Double)">
            <summary>
            Sets value at which the first perpendicular axis crosses this axis.
            </summary>
            <param name="axisCrossingValue">The value at which the first perpendicular axis crosses this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(axis =&gt; axis.AxisCrossingValue(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder.AxisCrossingValue(System.Double[])">
            <summary>
            Sets value at which perpendicular axes cross this axis.
            </summary>
            <param name="axisCrossingValues">The values at which perpendicular axes cross this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .XAxis(axis =&gt; axis.Numeric().AxisCrossingValue(0, 10))
            .YAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .YAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNumericAxisBuilder.AxisCrossingValue(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets value at which perpendicular axes cross this axis.
            </summary>
            <param name="axisCrossingValues">The values at which perpendicular axes cross this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .XAxis(axis =&gt; axis.Numeric().AxisCrossingValue(new double[] { 0, 10 }))
            .YAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .YAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartTitleBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.ChartTitle" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.#ctor(Kendo.Mvc.UI.ChartTitle)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartTitleBuilder" /> class.
            </summary>
            <param name="chartTitle">The chart title.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Text(System.String)">
            <summary>
            Sets the title text
            </summary>
            <param name="text">The text title.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Text("Chart"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Font(System.String)">
            <summary>
            Sets the title font
            </summary>
            <param name="font">The title font (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Font("16px Arial,Helvetica,sans-serif"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Color(System.String)">
            <summary>
            Sets the title color
            </summary>
            <param name="color">The title color (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Color("#ff0000").Text("Title"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Background(System.String)">
            <summary>
            Sets the title background color
            </summary>
            <param name="background">The background color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Background("red"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Position(Kendo.Mvc.UI.ChartTitlePosition)">
            <summary>
            Sets the title position
            </summary>
            <param name="position">The title position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Position(ChartTitlePosition.Bottom))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Align(Kendo.Mvc.UI.ChartTextAlignment)">
            <summary>
            Sets the title alignment
            </summary>
            <param name="align">The title alignment.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Align(ChartTextAlignment.Left))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Visible(System.Boolean)">
            <summary>
            Sets the title visibility
            </summary>
            <param name="visible">The title visibility.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Visible(false))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the title margin
            </summary>
            <param name="top">The title top margin.</param>
            <param name="right">The title right margin.</param>
            <param name="bottom">The title bottom margin.</param>
            <param name="left">The title left margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Margin(20))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Margin(System.Int32)">
            <summary>
            Sets the title margin
            </summary>
            <param name="margin">The title margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Margin(20))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the title padding
            </summary>
            <param name="top">The title top padding.</param>
            <param name="right">The title right padding.</param>
            <param name="bottom">The title bottom padding.</param>
            <param name="left">The title left padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Padding(20))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Padding(System.Int32)">
            <summary>
            Sets the title padding
            </summary>
            <param name="padding">The title padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Padding(20))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the title border
            </summary>
            <param name="width">The title border width.</param>
            <param name="color">The title border color.</param>
            <param name="dashType">The title dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Border(1, "#000", ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartTitleBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the plot area border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartLegendBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.ChartLegend" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.#ctor(Kendo.Mvc.UI.ChartLegend)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartLegendBuilder" /> class.
            </summary>
            <param name="chartLegend">The chart legend.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Font(System.String)">
            <summary>
            Sets the legend labels font
            </summary>
            <param name="font">The legend labels font (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Font("16px Arial,Helvetica,sans-serif"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Color(System.String)">
            <summary>
            Sets the legend labels color
            </summary>
            <param name="color">The labels color (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Color("red"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Background(System.String)">
            <summary>
            Sets the legend background color
            </summary>
            <param name="background">The background color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Background("red"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Position(Kendo.Mvc.UI.ChartLegendPosition)">
            <summary>
            Sets the legend position
            </summary>
            <param name="position">The legend position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Position(ChartLegendPosition.Bottom))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Visible(System.Boolean)">
            <summary>
            Sets the legend visibility
            </summary>
            <param name="visible">The legend visibility.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Visible(false))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Offset(System.Int32,System.Int32)">
            <summary>
            Sets the legend X and Y offset from its position
            </summary>
            <param name="offsetX">The legend X offset from its position.</param>
            <param name="offsetY">The legend Y offset from its position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Offset(10, 50))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the legend margin
            </summary>
            <param name="top">The legend top margin.</param>
            <param name="right">The legend right margin.</param>
            <param name="bottom">The legend bottom margin.</param>
            <param name="left">The legend top margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Margin(0, 5, 5, 0))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Margin(System.Int32)">
            <summary>
            Sets the legend margin
            </summary>
            <param name="margin">The legend margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Margin(20))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the legend padding
            </summary>
            <param name="top">The legend top padding.</param>
            <param name="right">The legend right padding.</param>
            <param name="bottom">The legend bottom padding.</param>
            <param name="left">The legend left padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Padding(0, 5, 5, 0))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Padding(System.Int32)">
            <summary>
            Sets the legend padding
            </summary>
            <param name="padding">The legend padding.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Padding(20))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the legend border
            </summary>
            <param name="width">The legend border width.</param>
            <param name="color">The legend border color (CSS syntax).</param>
            <param name="dashType">The legend border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Border(1, "#000", ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartLegendBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the legend border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="P:Kendo.Mvc.UI.IChart.UrlGenerator">
            <summary>
            The component UrlGenerator
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChart.ViewContext">
            <summary>
            The component view context
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartEventBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Fluent.ChartEventBuilder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ChartEventBuilder" /> class.
            </summary>
            <param name="events">The client events.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.DataBound(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the DataBound client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.DataBound(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.DataBound(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DataBound client-side event.
            </summary>
            <param name="onDataBoundHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.DataBound("onDataBound"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.DataBinding(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the DataBinding client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.DataBinding(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.DataBinding(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DataBinding client-side event.
            </summary>
            <param name="onDataBindingHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.DataBinding("onDataBinding"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.SeriesClick(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the SeriesClick client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.SeriesClick(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.SeriesClick(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the SeriesClick client-side event.
            </summary>
            <param name="onSeriesClickHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.SeriesClick("onSeriesClick"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.SeriesHover(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the SeriesHover client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.SeriesHover(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.SeriesHover(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the SeriesHover client-side event.
            </summary>
            <param name="onSeriesHoverHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.SeriesHover("onSeriesHover"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.AxisLabelClick(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the AxisLabelClick client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.AxisLabelClick(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.AxisLabelClick(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the AxisLabelClick client-side event.
            </summary>
            <param name="onAxisLabelClickHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.AxisLabelClick("onAxisLabelClick"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.DragStart(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DragStart client-side event.
            </summary>
            <param name="onDragStartHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.DragStart("onDragStart"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.DragStart(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the DragStart client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.DragStart(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.Drag(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Drag client-side event.
            </summary>
            <param name="onDragHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.Drag("onDrag"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.Drag(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Drag client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.Drag(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.DragEnd(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DragEnd client-side event.
            </summary>
            <param name="onDragEndHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.DragEnd("onDragEnd"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.DragEnd(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the DragEnd client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.DragEnd(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.PlotAreaClick(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the PlotAreaClick client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.PlotAreaClick(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.PlotAreaClick(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the PlotAreaClick client-side event.
            </summary>
            <param name="onPlotAreaClickHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.PlotAreaClick("onPlotAreaClick"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.ZoomStart(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ZoomStart client-side event.
            </summary>
            <param name="onZoomStartHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.ZoomStart("onZoomStart"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.ZoomStart(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the ZoomStart client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.ZoomStart(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.Zoom(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Zoom client-side event.
            </summary>
            <param name="onZoomHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.Zoom("onZoom"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.Zoom(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Zoom client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.Zoom(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.ZoomEnd(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ZoomEnd client-side event.
            </summary>
            <param name="onZoomEndHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.ZoomEnd("onZoomEnd"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.ZoomEnd(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the ZoomEnd client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.ZoomEnd(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.SelectStart(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the SelectStart client-side event.
            </summary>
            <param name="onSelectStartHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.SelectStart("onSelectStart"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.SelectStart(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the SelectStart client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.SelectStart(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.Select(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Select client-side event.
            </summary>
            <param name="onSelectHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.Select("onSelect"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.Select(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Select client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.Select(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.SelectEnd(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the SelectEnd client-side event.
            </summary>
            <param name="onSelectEndHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.SelectEnd("onSelectEnd"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartEventBuilder.SelectEnd(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the SelectEnd client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events.SelectEnd(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="!:Chart{T}" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.#ctor(Kendo.Mvc.UI.Chart{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBuilder{T}" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Events(System.Action{Kendo.Mvc.UI.Fluent.ChartEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="configurator">The client events configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Events(events =&gt; events
            .OnLoad("onLoad")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Theme(System.String)">
            <summary>
            Sets the theme of the chart.
            </summary>
            <param name="theme">The Chart theme.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Theme("Telerik")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.ChartArea(System.Action{Kendo.Mvc.UI.Fluent.ChartAreaBuilder})">
            <summary>
            Sets the Chart area.
            </summary>
            <param name="configurator">The Chart area.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.margin(20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.PlotArea(System.Action{Kendo.Mvc.UI.Fluent.PlotAreaBuilder})">
            <summary>
            Sets the Plot area.
            </summary>
            <param name="configurator">The Plot area.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .PlotArea(plotArea =&gt; plotArea.margin(20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Title(System.String)">
            <summary>
            Sets the title of the chart.
            </summary>
            <param name="title">The Chart title.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Title("Yearly sales")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Title(System.Action{Kendo.Mvc.UI.Fluent.ChartTitleBuilder})">
            <summary>
            Defines the title of the chart.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Title(title =&gt; title.Text("Yearly sales"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Legend(System.Boolean)">
            <summary>
            Sets the legend visibility.
            </summary>
            <param name="visible">A value indicating whether to show the legend.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Legend(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Legend(System.Action{Kendo.Mvc.UI.Fluent.ChartLegendBuilder})">
            <summary>
            Configures the legend.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Visible(true).Position(ChartLegendPosition.Bottom))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Series(System.Action{Kendo.Mvc.UI.Fluent.ChartSeriesFactory{`0}})">
            <summary>
            Defines the chart series.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt;
            {
            series.Bar(s =&gt; s.SalesAmount);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.SeriesDefaults(System.Action{Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder{`0}})">
            <summary>
            Defines the options for all chart series of the specified type.
            </summary>
            <param name="configurator">The configurator.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .SeriesDefaults(series =&gt; series.Bar().Stack(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Panes(System.Action{Kendo.Mvc.UI.Fluent.ChartPanesFactory})">
            <summary>
            Defines the chart panes.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Panes(panes =&gt;
            {
            panes.Add("volume");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.AxisDefaults(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisDefaultsBuilder{`0}})">
            <summary>
            Defines the options for all chart axes of the specified type.
            </summary>
            <param name="configurator">The configurator.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .AxisDefaults(axisDefaults =&gt; axisDefaults.MinorTickSize(5))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.CategoryAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder{`0}})">
            <summary>
            Configures the category axis
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.ValueAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartValueAxisFactory{`0}})">
            <summary>
            Defines value axis options
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .ValueAxis(a =&gt; a.Numeric().TickSize(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.XAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartValueAxisFactory{`0}})">
            <summary>
            Defines X-axis options for scatter charts
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .XAxis(a =&gt; a.Numeric().Max(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.YAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartValueAxisFactory{`0}})">
            <summary>
            Configures Y-axis options for scatter charts.
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .YAxis(a =&gt; a.Numeric().Max(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.DataSource(System.Action{Kendo.Mvc.UI.Fluent.ReadOnlyAjaxDataSourceBuilder{`0}})">
            <summary>
            Data Source configuration
            </summary>
            <param name="configurator">Use the configurator to set different data binding options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .DataSource(ds =&gt;
            {
            ds.Ajax().Read(r =&gt; r.Action("SalesData", "Chart"));
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.AutoBind(System.Boolean)">
            <summary>
            Enables or disables automatic binding.
            </summary>
            <param name="autoBind">
            Gets or sets a value indicating if the chart
            should be data bound during initialization.
            The default value is true.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .DataSource(ds =&gt;
            {
            ds.Ajax().Read(r =&gt; r.Action("SalesData", "Chart"));
            })
            .AutoBind(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.SeriesColors(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the series colors.
            </summary>
            <param name="colors">A list of the series colors.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .SeriesColors(new string[] { "#f00", "#0f0", "#00f" })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.SeriesColors(System.String[])">
            <summary>
            Sets the series colors.
            </summary>
            <param name="colors">The series colors.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .SeriesColors("#f00", "#0f0", "#00f")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Tooltip(System.Action{Kendo.Mvc.UI.Fluent.ChartTooltipBuilder})">
            <summary>
            Use it to configure the data point tooltip.
            </summary>
            <param name="configurator">Use the configurator to set data tooltip options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(tooltip =&gt;
            {
            tooltip.Visible(true).Format("{0:C}");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Tooltip(System.Boolean)">
            <summary>
            Sets the data point tooltip visibility.
            </summary>
            <param name="visible">
            A value indicating if the data point tooltip should be displayed.
            The tooltip is not visible by default.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Tooltip(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBuilder`1.Transitions(System.Boolean)">
            <summary>
            Enables or disabled animated transitions on initial load and refresh.
            </summary>
            <param name="transitions">
            A value indicating if transition animations should be played.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Transitions(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2">
            <summary>
            Defines the fluent interface for configuring series.
            </summary>
            <typeparam name="TSeries">
            </typeparam>
            <typeparam name="TSeriesBuilder">The type of the series builder.</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartSeriesBuilderBase{TSeries, TSeriesBuilder}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.Name(System.String)">
            <summary>
            Sets the series title displayed in the legend.
            </summary>
            <param name="text">The title.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Name("Sales"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.GroupNameTemplate(System.String)">
            <summary>
            Sets the name template for auto-generated series when binding to grouped data.
            </summary>
            <param name="groupNameTemplate">
            The name template for auto-generated series when binding to grouped data.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .DataSource(dataSource =&gt; dataSource
            .Read(read =&gt; read.Action("_StockData", "Scatter_Charts"))
            .Group(group =&gt; group.Add(model =&gt; model.Symbol)))
            )
            .Series(series =&gt; series.Bar(s =&gt; s.Sales)
            .Name("Sales")
            .GroupNameTemplate("#= series.name # for #= group.field # #= group.value #")
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.Opacity(System.Double)">
            <summary>
            Sets the series opacity.
            </summary>
            <param name="opacity">
            The series opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Opacity(0.5))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.Color(System.String)">
            <summary>
            Sets the bar fill color
            </summary>
            <param name="color">The bar fill color (CSS syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Color("Red"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.Tooltip(System.Action{Kendo.Mvc.UI.Fluent.ChartTooltipBuilder})">
            <summary>
            Configure the data point tooltip for the series.
            </summary>
            <param name="configurator">Use the configurator to set data tooltip options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales)
            .Tooltip(tooltip =&gt;
            {
            tooltip.Visible(true).Format("{0:C}");
            })
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.Tooltip(System.Boolean)">
            <summary>
            Sets the data point tooltip visibility.
            </summary>
            <param name="visible">
            A value indicating if the data point tooltip should be displayed.
            The tooltip is not visible by default.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Tooltip(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.Axis(System.String)">
            <summary>
            Sets the axis name to use for this series.
            </summary>
            <param name="axis">The axis name for this series.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Name("Sales").Axis("secondary"))
            .ValueAxis(axis =&gt; axis.Numeric())
            .ValueAxis(axis =&gt; axis.Numeric("secondary"))
            .CategoryAxis(axis =&gt; axis.AxisCrossingValue(0, 10))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.Highlight(System.Action{Kendo.Mvc.UI.Fluent.ChartSeriesHighlightBuilder})">
            <summary>
            Configures the series highlight
            </summary>
            <param name="configurator">The configuration action.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesBuilderBase`2.Highlight(System.Boolean)">
            <summary>
            Configures the highlight visibility
            </summary>
            <param name="configurator">The highlight visibility.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1">
            <summary>
            Creates series for the <see cref="!:Chart{TModel}" />.
            </summary>
            <typeparam name="TModel">The type of the data item to which the chart is bound to</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.#ctor(Kendo.Mvc.UI.ISeriesContainer)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartSeriesFactory{TModel}" /> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Container">
            <summary>
            The parent Chart
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bar``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="valueExpression">
            The expression used to extract the point value from the chart model
            </param>
            <param name="colorExpression">
            The expression used to extract the point color from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bar(System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="valueMemberName">
            The name of the value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bar(System.Type,System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="valueMemberName">
            The name of the value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bar(System.Collections.IEnumerable)">
            <summary>
            Defines bar series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Column``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Defines bound column series.
            </summary>
            <param name="valueExpression">
            The expression used to extract the point value from the chart model
            </param>
            <param name="colorExpression">
            The expression used to extract the point color from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Column(System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="valueMemberName">
            The name of the value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Column(System.Type,System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="valueMemberName">
            The name of the value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Column(System.Collections.IEnumerable)">
            <summary>
            Defines bar series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Line``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines bound line series.
            </summary>
            <param name="expression">
            The expression used to extract the series value from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Line(System.String)">
            <summary>
            Defines bound line series.
            </summary>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Line(System.Type,System.String)">
            <summary>
            Defines bound line series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Line(System.Collections.IEnumerable)">
            <summary>
            Defines line series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalLine``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines bound vertical line series.
            </summary>
            <param name="expression">
            The expression used to extract the series value from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalLine(System.String)">
            <summary>
            Defines bound vertical line series.
            </summary>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalLine(System.Type,System.String)">
            <summary>
            Defines bound vertical line series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalLine(System.Collections.IEnumerable)">
            <summary>
            Defines vertical line series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Area``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines bound area series.
            </summary>
            <param name="expression">
            The expression used to extract the series value from the chart model.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Area(System.String)">
            <summary>
            Defines bound area series.
            </summary>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Area(System.Type,System.String)">
            <summary>
            Defines bound area series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Area(System.Collections.IEnumerable)">
            <summary>
            Defines area series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalArea``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines bound vertical area series.
            </summary>
            <param name="expression">
            The expression used to extract the series value from the chart model.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalArea(System.String)">
            <summary>
            Defines bound vertical area series.
            </summary>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalArea(System.Type,System.String)">
            <summary>
            Defines bound vertical area series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalArea(System.Collections.IEnumerable)">
            <summary>
            Defines vertical area series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Scatter``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``1}})">
            <summary>
            Defines bound scatter series.
            </summary>
            <param name="xValueExpression">
            The expression used to extract the X value from the chart model
            </param>
            <param name="yValueExpression">
            The expression used to extract the Y value from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Scatter(System.String,System.String)">
            <summary>
            Defines bound scatter series.
            </summary>
            <param name="xMemberName">
            The name of the X value member.
            </param>
            <param name="yMemberName">
            The name of the Y value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Scatter(System.Type,System.String,System.String)">
            <summary>
            Defines bound scatter series.
            </summary>
            <param name="memberType">
            The type of the value members.
            </param>
            <param name="xMemberName">
            The name of the X value member.
            </param>
            <param name="yMemberName">
            The name of the Y value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Scatter(System.Collections.IEnumerable)">
            <summary>
            Defines scatter series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.ScatterLine``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``1}})">
            <summary>
            Defines bound scatter line series.
            </summary>
            <param name="xValueExpression">
            The expression used to extract the X value from the chart model
            </param>
            <param name="yValueExpression">
            The expression used to extract the Y value from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.ScatterLine(System.String,System.String)">
            <summary>
            Defines bound scatter line series.
            </summary>
            <param name="xMemberName">
            The name of the X value member.
            </param>
            <param name="yMemberName">
            The name of the Y value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.ScatterLine(System.Type,System.String,System.String)">
            <summary>
            Defines bound scatter line series.
            </summary>
            <param name="memberType">
            The type of the value members.
            </param>
            <param name="xMemberName">
            The name of the X value member.
            </param>
            <param name="yMemberName">
            The name of the Y value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.ScatterLine(System.Collections.IEnumerable)">
            <summary>
            Defines scatter line series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bubble``3(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``1}},System.Linq.Expressions.Expression{System.Func{`0,``2}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Defines bound bubble series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bubble(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound bubble series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bubble(System.Type,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound bubble series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bubble(System.Collections.IEnumerable)">
            <summary>
            Defines bubble series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Pie``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Defines bound pie series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Pie(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound pie series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Pie(System.Type,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound pie series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Pie(System.Collections.IEnumerable)">
            <summary>
            Defines pie series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Donut``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Defines bound pie series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Donut(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound donut series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Donut(System.Type,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound donut series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Donut(System.Collections.IEnumerable)">
            <summary>
            Defines donut series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.OHLC``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Defines bound ohlc series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.OHLC``1(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound ohlc series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.OHLC``1(System.Type,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound ohlc series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.OHLC``1(System.Collections.IEnumerable)">
            <summary>
            Defines ohlc series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Candlestick``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Defines bound candlestick series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Candlestick``1(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound candlestick series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Candlestick``1(System.Type,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound candlestick series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Candlestick``1(System.Collections.IEnumerable)">
            <summary>
            Defines candlestick series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bullet``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Defines bound bullet series.
            </summary>
            <param name="currentExpression">
            The expression used to extract the point current value from the chart model
            </param>
            <param name="targetExpression">
            The expression used to extract the point target value from the chart model
            </param>
            <param name="colorExpression">
            The expression used to extract the point color from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bullet(System.String,System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="currentMemberName">
            The name of the current value member.
            </param>
            <param name="targetMemberName">
            The name of the target value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bullet(System.Type,System.String,System.String,System.String)">
            <summary>
            Defines bound bullet series.
            </summary>
            <param name="currentMemberType">
            The type of the current value member.
            </param>
            <param name="targetMemberName">
            The name of the target value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.Bullet(System.Collections.IEnumerable)">
            <summary>
            Defines bar series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalBullet``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Defines bound verticalBullet series.
            </summary>
            <param name="currentExpression">
            The expression used to extract the point current value from the chart model
            </param>
            <param name="targetExpression">
            The expression used to extract the point target value from the chart model
            </param>
            <param name="colorExpression">
            The expression used to extract the point color from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalBullet(System.String,System.String,System.String)">
            <summary>
            Defines bound verticalBullet series.
            </summary>
            <param name="currentMemberName">
            The name of the current value member.
            </param>
            <param name="targetMemberName">
            The name of the target value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalBullet(System.Type,System.String,System.String,System.String)">
            <summary>
            Defines bound verticalBullet series.
            </summary>
            <param name="currentMemberType">
            The type of the current value member.
            </param>
            <param name="targetMemberName">
            The name of the target value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartSeriesFactory`1.VerticalBullet(System.Collections.IEnumerable)">
            <summary>
            Defines bar series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1">
            <summary>
            Defines the fluent interface for configuring bar series.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.#ctor(Kendo.Mvc.UI.IChartBarSeries)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBarSeriesBuilder{T}" /> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Stack(System.Boolean)">
            <summary>
            Sets a value indicating if the bars should be stacked.
            </summary>
            <param name="stacked">A value indicating if the bars should be stacked.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Stack(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Stack(System.String)">
            <summary>
            Sets the name of the stack that this series belongs to. Each unique name creates a new stack.
            </summary>
            <param name="stackName">The name of the stack.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Stack("Female"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Aggregate(Kendo.Mvc.UI.ChartSeriesAggregate)">
            <summary>
            Sets the aggregate function for date series.
            This function is used when a category (an year, month, etc.) contains two or more points.
            </summary>
            <param name="aggregate">Aggregate function name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Aggregate())
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Gap(System.Double)">
            <summary>
            Set distance between category clusters.
            <param name="gap">
            A value of 1 means that there is a total of 1 column width / bar height between categories.
            The distance is distributed evenly on each side.
            The default value is 1.5
            </param></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Gap(1))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Spacing(System.Double)">
            <summary>
            Sets a value indicating the distance between bars / categories.
            </summary>
            <param name="spacing">
            Value of 1 means that the distance between bars is equal to their width.
            The default value is 0
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .Series(series =&gt; series.Spacing(s =&gt; s.Sales).Spacing(1))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Labels(System.Action{Kendo.Mvc.UI.Fluent.ChartBarLabelsBuilder})">
            <summary>
            Configures the bar chart labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(labels =&gt; labels
            .Position(ChartBarLabelsPosition.InsideEnd)
            .Visible(true)
            );
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Labels(System.Boolean)">
            <summary>
            Sets the visibility of bar chart labels.
            </summary>
            <param name="visible">The visibility. The default value is false.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series
            .Bar(s =&gt; s.Sales)
            .Labels(true);
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the bars border
            </summary>
            <param name="width">The bars border width.</param>
            <param name="color">The bars border color (CSS syntax).</param>
            <param name="dashType">The bars border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Border("1", "#000", ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the bar border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.Overlay(Kendo.Mvc.UI.ChartBarSeriesOverlay)">
            <summary>
            Sets the bar effects overlay
            </summary>
            <param name="overlay">The bar effects overlay. The default is ChartBarSeriesOverlay.Glass</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).Overlay(ChartBarSeriesOverlay.None))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartBarSeriesBuilder`1.NegativeColor(System.String)">
            <summary>
            Sets the bar color for negative values
            </summary>
            <param name="color">The bar color for negative values(CSS syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; series.Bar(s =&gt; s.Sales).NegativeColor("Red"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1">
            <summary>
            Configures the category axis for the <see cref="!:Chart{TModel}" />.
            </summary>
            <typeparam name="TModel">The type of the data item to which the chart is bound to</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.#ctor(Kendo.Mvc.UI.Chart{`0},Kendo.Mvc.UI.IChartCategoryAxis)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartCategoryAxisBuilder{TModel}" /> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.Container">
            <summary>
            The parent Chart
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.Categories``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines bound categories.
            </summary>
            <param name="expression">
            The expression used to extract the categories value from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.Categories(System.Collections.IEnumerable)">
            <summary>
            Defines categories.
            </summary>
            <param name="categories">
            The list of categories
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.Categories(System.String[])">
            <summary>
            Defines categories.
            </summary>
            <param name="categories">
            The list of categories
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.AxisCrossingValue(System.Double)">
            <summary>
            Sets value at which the first perpendicular axis crosses this axis.
            </summary>
            <param name="axisCrossingValue">The value at which the first perpendicular axis crosses this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.AxisCrossingValue(4))
            .ValueAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .ValueAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.AxisCrossingValue(System.Double[])">
            <summary>
            Sets value at which perpendicular axes cross this axis.
            </summary>
            <param name="axisCrossingValues">The values at which perpendicular axes cross this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.AxisCrossingValue(0, 10))
            .ValueAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .ValueAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.AxisCrossingValue(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets value at which perpendicular axes cross this axis.
            </summary>
            <param name="axisCrossingValues">The values at which perpendicular axes cross this axis.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis.AxisCrossingValue(new double[] { 0, 10 }))
            .ValueAxis(axis =&gt; axis.Numeric().Title("Axis 1"))
            .ValueAxis(axis =&gt; axis.Numeric("secondary").Title("Axis 2"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.Justify(System.Boolean)">
            <summary>
            Positions categories and series points on major ticks. This removes the empty space before and after the series.
            This option will be ignored if either Bar, Column, OHLC or Candlestick series are plotted on the axis.
            </summary>
            <param name="justified">
            A boolean value that indicates if the empty space before and after the series should be removed.
            The default value is false.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.Justify">
            <summary>
            Positions categories and series points on major ticks. This removes the empty space before and after the series.
            This option will be ignored if either Bar, Column, OHLC or Candlestick series are plotted on the axis.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.Select(System.Double,System.Double)">
            <summary>
            Sets the selection range
            </summary>
            <param name="from">The selection range start.</param>
            <param name="to">The selection range end.
            *Note*: The category with the specified index is not included in the selected range
            unless the axis is justified. In order to select all categories specify
            a value larger than the last category index.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("StockChart")
            .CategoryAxis(axis =&gt; axis.Select(0, 3))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder`1.Select(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisSelectionBuilder})">
            <summary>
            Configures the selection
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("StockChart")
            .CategoryAxis(axis =&gt; axis.Select(select =&gt;
            select.Mousewheel(mw =&gt; mw.Reverse())
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.ChartHtmlBuilder`1.#ctor(Kendo.Mvc.UI.Chart{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartHtmlBuilder{T}" /> class.
            </summary>
            <param name="component">The Chart component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.ChartHtmlBuilder`1.CreateChart">
            <summary>
            Creates the chart top-level div.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.ChartHtmlBuilder`1.BuildCore">
            <summary>
            Builds the Chart component markup.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.IChartSerializer.Serialize">
            <summary>
            Serializes the current instance
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBarSeries`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBarSeries{TModel, TValue}" /> class.
            </summary>
            <param name="valueExpression">The expression used to extract the point value from the chart model.</param>
            <param name="colorExpression">The expression used to extract the point color from the chart model.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBarSeries`2.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBarSeries{TModel, TValue}" /> class.
            </summary>
            <param name="data">The data to bind to.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBarSeries`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBarSeries{TModel, TValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.Stacked">
            <summary>
            A value indicating if the bars should be stacked.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.Aggregate">
            <summary>
            Aggregate function for date series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.StackName">
            <summary>
            The stack name that this series belongs to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.Gap">
            <summary>
            The distance between category clusters.
            </summary>
            <value>
            A value of 1 means that there is a total of 1 column width / bar height between categories.
            The distance is distributed evenly on each side.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.Spacing">
            <summary>
            Space between bars.
            </summary>
            <value>
            Value of 1 means that the distance between bars is equal to their width.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.Orientation">
            <summary>
            The orientation of the bars.
            </summary>
            <value>
            Can be either <see cref="F:Kendo.Mvc.UI.ChartSeriesOrientation.Horizontal">horizontal</see> (bar chart)
            or <see cref="F:Kendo.Mvc.UI.ChartSeriesOrientation.Vertical">vertical</see> (column chart).
            The default value is horizontal.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.Labels">
            <summary>
            Gets the bar chart data labels configuration
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.Border">
            <summary>
            Gets or sets the bar border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.Overlay">
            <summary>
            Gets or sets the effects overlay
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.ColorMember">
            <summary>
            Gets the model color member name.
            </summary>
            <value>The model color member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBarSeries`2.NegativeColor">
            <summary>
            Gets or sets the series color for negative values
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartPieConnectors.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartPieConnectors" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieConnectors.Width">
            <summary>
            Defines the width of the line.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieConnectors.Color">
            <summary>
            Defines the color of the line.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieConnectors.Padding">
            <summary>
            Defines the padding of the line.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartPieLabels.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartPieLabels" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieLabels.Align">
            <summary>
            Defines the alignment of the pie labels.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieLabels.Distance">
            <summary>
            Defines the distance between the pie chart and labels.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieLabels.Position">
            <summary>
            Defines the position of the pie labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartPieSeries`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartPieSeries{TModel, TValue}" /> class.
            </summary>
            <param name="expressionValue">The value expression.</param>
            <param name="expressionCategory">The category expression.</param>
            <param name="expressionColor">The color expression.</param>
            <param name="expressionExplode">The explode expression.</param>
            <param name="expressionVisibleInLegend">The visibleInLegend expression.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartPieSeries`2.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartPieSeries{TModel, TValue}" /> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartPieSeries`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartPieSeries{TModel, TValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Type">
            <summary>
            Gets the series type.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Member">
            <summary>
            Gets the model data member name.
            </summary>
            <value>The model data member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.CategoryMember">
            <summary>
            Gets the model data category member name.
            </summary>
            <value>The model data category member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.ExplodeMember">
            <summary>
            Gets the model data explode member name.
            </summary>
            <value>The model data explode member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.ColorMember">
            <summary>
            Gets the model data color member name.
            </summary>
            <value>The model data color member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.VisibleInLegendMember">
            <summary>
            Gets the model data visibleInLegend member name.
            </summary>
            <value>The model data visibleInLegend member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Category">
            <summary>
            Gets a function which returns the category of the property to which the column is bound to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Explode">
            <summary>
            Gets a function which returns the explode of the property to which the column is bound to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.VisibleInLegend">
            <summary>
            Gets a function which returns the visibleInLegend of the property to which the column is bound to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Color">
            <summary>
            Gets a function which returns the color of the property to which the column is bound to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Labels">
            <summary>
            Gets the pie chart data labels configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Border">
            <summary>
            Gets or sets the pie border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Data">
            <summary>
            The pie chart data configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Overlay">
            <summary>
            Gets or sets the effects overlay.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Padding">
            <summary>
            Gets or sets the padding of the chart.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.StartAngle">
            <summary>
            Gets or sets the start angle of the first pie segment.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPieSeries`2.Connectors">
            <summary>
            Gets the pie chart connectors configuration
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartSeriesBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartSeriesBase{T}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesBase`1.Name">
            <summary>
            Gets or sets the title of the series.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesBase`1.Opacity">
            <summary>
            Gets or sets the series opacity.
            </summary>
            <value>A value between 0 (transparent) and 1 (opaque).</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesBase`1.Color">
            <summary>
            Gets or sets the series base color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesBase`1.Tooltip">
            <summary>
            Gets or sets the data point tooltip options
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesBase`1.Axis">
            <summary>
            Gets or sets the axis name to use for this series.
            </summary>
            <value>The axis name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesBase`1.GroupNameTemplate">
            <summary>
            Name template for auto-generated series when binding to grouped data.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesBase`1.Highlight">
            <summary>
            Gets or sets the series highlight options
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBoundSeries`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBoundSeries{TModel, TValue}" /> class.
            </summary>
            <param name="expression">The binding expression.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBoundSeries`2.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBoundSeries{TModel, TValue}" /> class.
            </summary>
            <param name="data">The series data.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBoundSeries`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBoundSeries{TModel, TValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBoundSeries`2.Data">
            <summary>
            The data used for binding.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBoundSeries`2.Member">
            <summary>
            Gets the model data member name.
            </summary>
            <value>The model data member name.</value>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartSeriesOrientation">
            <summary>
            Defines the possible series orientation.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartSeriesOrientation.Horizontal">
            <summary>
            The series are horizontal (bar chart, line chart, etc.)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartSeriesOrientation.Vertical">
            <summary>
            The series are vertical (column chart, vertical line chart, etc.)
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartLabels.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartLabels" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Font">
            <summary>
            Gets or sets the label font.
            </summary>
            <value>
            Specify a font in CSS format. For example "12px Arial,Helvetica,sans-serif".
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Visible">
            <summary>
            Gets or sets a value indicating if the label is visible
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Background">
            <summary>
            Gets or sets the label background.
            </summary>
            <value>
            The label background.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Border">
            <summary>
            Gets or sets the label border.
            </summary>
            <value>
            The label border.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Margin">
            <summary>
            Gets or sets the label margin.
            </summary>
            <value>
            The label margin.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Padding">
            <summary>
            Gets or sets the label padding.
            </summary>
            <value>
            The label padding.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Color">
            <summary>
            Gets or sets the label color.
            </summary>
            <value>
            The label color.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Format">
            <summary>
            Gets or sets the label format.
            </summary>
            <value>
            The label format.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Template">
            <summary>
            Gets or sets the label template.
            </summary>
            <value>
            The label template.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Opacity">
            <summary>
            Gets or sets the label opacity.
            </summary>
            <value>
            The label opacity.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLabels.Rotation">
            <summary>
            Gets or sets the label rotation.
            </summary>
            <value>
            The label opacity.
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartSeriesDefaults`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartSeriesDefaults{T}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.Bar">
            <summary>
            The default settings for all bar series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.Column">
            <summary>
            The default settings for all column series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.Area">
            <summary>
            The default settings for all area series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.VerticalArea">
            <summary>
            The default settings for all vertical area series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.Line">
            <summary>
            The default settings for all line series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.VerticalLine">
            <summary>
            The default settings for all vertical line series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.Pie">
            <summary>
            The default settings for all pie series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.Donut">
            <summary>
            The default settings for all donut series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.Scatter">
            <summary>
            The default settings for all scatter series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.ScatterLine">
            <summary>
            The default settings for all scatter line series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesDefaults`1.OHLC">
            <summary>
            The default settings for all ohlc series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartPointLabels.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartPointLabels" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartPointLabels.Position">
            <summary>
            Gets or sets the label position.
            </summary>
            <remarks>
            The default value is <see cref="F:Kendo.Mvc.UI.ChartPointLabelsPosition.Above" /> for clustered series and
            <see cref="F:Kendo.Mvc.UI.ChartPointLabelsPosition.Above" /> for stacked series.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartLineSeries`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBarSeries{TModel, TValue}" /> class.
            </summary>
            <param name="expression">The expression used to extract the series value from the chart model.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartLineSeries`2.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartLineSeries{TModel, TValue}" /> class.
            </summary>
            <param name="data">The data to bind to.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartLineSeries`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartLineSeries{TModel, TValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineSeries`2.Stacked">
            <summary>
            A value indicating if the lines should be stacked.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineSeries`2.Aggregate">
            <summary>
            Aggregate function for date series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineSeries`2.Labels">
            <summary>
            Gets the line chart data labels configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineSeries`2.Markers">
            <summary>
            The line chart markers configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineSeries`2.Width">
            <summary>
            The line chart line width.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineSeries`2.MissingValues">
            <summary>
            The behavior for handling missing values in line series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineSeries`2.DashType">
            <summary>
            The line chart line dashType.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartLineSeries`2.Orientation">
            <summary>
            The orientation of the line.
            </summary>
            <value>
            Can be either <see cref="F:Kendo.Mvc.UI.ChartSeriesOrientation.Horizontal">horizontal</see>
            or <see cref="F:Kendo.Mvc.UI.ChartSeriesOrientation.Vertical">vertical</see>.
            The default value is horizontal.
            </value>
        </member>
        <member name="T:Kendo.Mvc.UI.ChartBarSeriesOverlay">
            <summary>
            Defines the available bar series effects overlays
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartBarSeriesOverlay.None">
            <summary>
            The bars have no effect overlay
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ChartBarSeriesOverlay.Glass">
            <summary>
            The bars have glass effect overlay
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartScatterSeries`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`2}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartScatterSeries{TModel, TXValue, TYValue}" /> class.
            </summary>
            <param name="xValueExpression">The X expression.</param>
            <param name="yValueExpression">The Y expression.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartScatterSeries`3.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartScatterSeries{TModel, TXValue, TYValue}" /> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartScatterSeries`3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartScatterSeries{TModel, TXValue, TYValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterSeries`3.XMember">
            <summary>
            Gets the model X data member name.
            </summary>
            <value>The model X data member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterSeries`3.YMember">
            <summary>
            Gets the model Y data member name.
            </summary>
            <value>The model Y data member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterSeries`3.XAxis">
            <summary>
            Gets or sets the X axis name to use for this series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterSeries`3.YAxis">
            <summary>
            Gets or sets the Y axis name to use for this series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterSeries`3.Labels">
            <summary>
            Gets the scatter chart data labels configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterSeries`3.Markers">
            <summary>
            The line chart markers configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterSeries`3.Data">
            <summary>
            The scatter chart data source.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartScatterLineSeries`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`2}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartScatterLineSeries{TModel, TXValue, TYValue}" /> class.
            </summary>
            <param name="xValueExpression">The X expression.</param>
            <param name="yValueExpression">The Y expression.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartScatterLineSeries`3.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartScatterLineSeries{TModel, TXValue, TYValue}" /> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartScatterLineSeries`3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartScatterLineSeries{TModel, TXValue, TYValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterLineSeries`3.Width">
            <summary>
            The chart line width.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterLineSeries`3.DashType">
            <summary>
            The chart line dashType.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartScatterLineSeries`3.MissingValues">
            <summary>
            The behavior for handling missing values in scatter line series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAreaSeries`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartAreaSeries{TModel, TValue}" /> class.
            </summary>
            <param name="expression">The expression used to extract the series value from the chart model.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAreaSeries`2.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartAreaSeries{TModel, TValue}" /> class.
            </summary>
            <param name="data">The data to bind to.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartAreaSeries`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartAreaSeries{TModel, TValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAreaSeries`2.Stacked">
            <summary>
            A value indicating if the areas should be stacked.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAreaSeries`2.Aggregate">
            <summary>
            Aggregate function for date series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAreaSeries`2.Labels">
            <summary>
            Gets the area chart data labels configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAreaSeries`2.Markers">
            <summary>
            The area chart markers configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAreaSeries`2.MissingValues">
            <summary>
            The behavior for handling missing values in area series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAreaSeries`2.Line">
            <summary>
            The area chart line configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartAreaSeries`2.Orientation">
            <summary>
            The orientation of the area chart.
            </summary>
            <value>
            Can be either <see cref="F:Kendo.Mvc.UI.ChartSeriesOrientation.Horizontal">horizontal</see>
            or <see cref="F:Kendo.Mvc.UI.ChartSeriesOrientation.Vertical">vertical</see>.
            The default value is horizontal.
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartDonutSeries`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartDonutSeries{TModel, TValue}" /> class.
            </summary>
            <param name="expressionValue">The value expression.</param>
            <param name="expressionCategory">The category expression.</param>
            <param name="expressionColor">The color expression.</param>
            <param name="expressionExplode">The explode expression.</param>
            <param name="expressionVisibleInLegend">The visibleInLegend expression.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartDonutSeries`2.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartDonutSeries{TModel, TValue}" /> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartDonutSeries`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartDonutSeries{TModel, TValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDonutSeries`2.Margin">
            <summary>
            Gets or sets the margin of the donut series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDonutSeries`2.HoleSize">
            <summary>
            Gets or sets the the size of the donut hole.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDonutSeries`2.Size">
            <summary>
            Gets or sets the the size of the donut series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBubbleSeries`4.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`2}},System.Linq.Expressions.Expression{System.Func{`0,`3}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBubbleSeries{TModel, TXValue, TYValue, TSizeValue}" /> class.
            </summary>
            <param name="xValueExpression">The X expression.</param>
            <param name="yValueExpression">The Y expression.</param>
            <param name="sizeExpression">The Size expression.</param>
            <param name="categoryExpression">The Category expression.</param>
            <param name="colorExpression">The Color expression.</param>
            <param name="visibleInLegendExpression">The VisibleInLegend expression.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBubbleSeries`4.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBubbleSeries{TModel, TXValue, TYValue, TSizeValue}" /> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBubbleSeries`4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBubbleSeries{TModel, TXValue, TYValue, TSizeValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBubbleSeries`4.SizeMember">
            <summary>
            Gets the Size data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBubbleSeries`4.CategoryMember">
            <summary>
            Gets the Category data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBubbleSeries`4.ColorMember">
            <summary>
            Gets the Color data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBubbleSeries`4.VisibleInLegendMember">
            <summary>
            Gets the VisibleInLegend data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBubbleSeries`4.MinSize">
            <summary>
            Gets the minimum bubble size of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBubbleSeries`4.MaxSize">
            <summary>
            Gets the maximum bubble size of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBubbleSeries`4.NegativeValues">
            <summary>
            Gets the negative value bubbles options.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBubbleSeries`4.Border">
            <summary>
            Gets or sets the bubble border.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartNegativeValueSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartNegativeValueSettings" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNegativeValueSettings.Color">
            <summary>
            Gets or sets the negative value bubbles color.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNegativeValueSettings.Visible">
            <summary>
            Gets or sets the markers visibility.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartOHLCSeries`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartOHLCSeries{TModel, TValue}" /> class.
            </summary>
            <param name="openExpression">The open expression.</param>
            <param name="highExpression">The high expression.</param>
            <param name="lowExpression">The low expression.</param>
            <param name="closeExpression">The close expression.</param>
            <param name="colorExpression">The color expression.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartOHLCSeries`2.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartOHLCSeries{TModel, TValue}" /> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartOHLCSeries`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartOHLCSeries{TModel, TValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.Type">
            <summary>
            Gets the series type.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.OpenMember">
            <summary>
            Gets the model data open member name.
            </summary>
            <value>The model data open member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.HighMember">
            <summary>
            Gets the model data high member name.
            </summary>
            <value>The model data high member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.LowMember">
            <summary>
            Gets the model data low member name.
            </summary>
            <value>The model data low member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.CloseMember">
            <summary>
            Gets the model data close member name.
            </summary>
            <value>The model data close member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.ColorMember">
            <summary>
            Gets the model data color member name.
            </summary>
            <value>The model data color member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.Border">
            <summary>
            Gets or sets the point border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.Data">
            <summary>
            The ohlc chart data configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.Aggregates">
            <summary>
            Aggregates function for date series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.Gap">
            <summary>
            The distance between category clusters.
            </summary>
            <value>
            A value of 1 means that there is a total of 1 point width between categories.
            The distance is distributed evenly on each side.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.Spacing">
            <summary>
            Space between points.
            </summary>
            <value>
            Value of 1 means that the distance between points is equal to their width.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCSeries`2.Line">
            <summary>
            The ohlc chart line configuration.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartOHLCAggregates.#ctor(System.Nullable{Kendo.Mvc.UI.ChartSeriesAggregate},System.Nullable{Kendo.Mvc.UI.ChartSeriesAggregate},System.Nullable{Kendo.Mvc.UI.ChartSeriesAggregate},System.Nullable{Kendo.Mvc.UI.ChartSeriesAggregate})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartOHLCAggregates" /> class.
            </summary>
            <param name="open">The open aggregate.</param>
            <param name="high">The high aggregate.</param>
            <param name="low">The low aggregate.</param>
            <param name="close">The close aggregate.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartOHLCAggregates.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartOHLCAggregates" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCAggregates.Open">
            <summary>
            Gets or sets the open aggregate.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCAggregates.High">
            <summary>
            Gets or sets the high aggregate.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCAggregates.Low">
            <summary>
            Gets or sets the low aggregate.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartOHLCAggregates.Close">
            <summary>
            Gets or sets the close aggregate.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartCandlestickSeries`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartCandlestickSeries{TModel, TValue}" /> class.
            </summary>
            <param name="openExpression">The open expression.</param>
            <param name="highExpression">The high expression.</param>
            <param name="lowExpression">The low expression.</param>
            <param name="closeExpression">The close expression.</param>
            <param name="colorExpression">The color expression.</param>
            <param name="downColorExpression">The down color expression.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartCandlestickSeries`2.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartCandlestickSeries{TModel, TValue}" /> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartCandlestickSeries`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartCandlestickSeries{TModel, TValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCandlestickSeries`2.DownColorMember">
            <summary>
            Gets the model data down color member name.
            </summary>
            <value>The model data down color member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartCandlestickSeries`2.Overlay">
            <summary>
            Gets or sets the effects overlay
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartSeriesHighlight.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartSeriesHighlight" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesHighlight.Opacity">
            <summary>
            Gets or sets the highlight opacity
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesHighlight.Color">
            <summary>
            Gets or sets the highlight opacity
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesHighlight.Border">
            <summary>
            Gets or sets the highlight border.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesHighlight.Line">
            <summary>
            Gets or sets the highlight line configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartSeriesHighlight.Visible">
            <summary>
            Gets or sets a value indicating if the highlight is visible
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBulletSeries`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBulletSeries{TModel, TCurrent, TTarget}" /> class.
            </summary>
            <param name="targetExpression">The expression used to extract the point target from the chart model.</param>
            <param name="currentExpression">The expression used to extract the point current from the chart model.</param>
            <param name="colorExpression">The expression used to extract the point color from the chart model.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBulletSeries`2.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBulletSeries{TModel, TCurrent, TTarget}" /> class.
            </summary>
            <param name="data">The data to bind to.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBulletSeries`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBarSeries{TModel, TValue}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Opacity">
            <summary>
            Gets or sets the series opacity.
            </summary>
            <value>A value between 0 (transparent) and 1 (opaque).</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Color">
            <summary>
            Gets or sets the series base color.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Tooltip">
            <summary>
            Gets or sets the data point tooltip options.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Target">
            <summary>
            Gets or sets the data point target.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Axis">
            <summary>
            Gets or sets the axis name to use for this series.
            </summary>
            <value>The axis name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Name">
            <summary>
            Gets or sets the title of the series.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Gap">
            <summary>
            The distance between category clusters.
            </summary>
            <value>
            A value of 1 means that there is a total of 1 column width / bar height between categories.
            The distance is distributed evenly on each side.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Spacing">
            <summary>
            Space between bars.
            </summary>
            <value>
            Value of 1 means that the distance between bars is equal to their width.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Orientation">
            <summary>
            The orientation of the bullets.
            </summary>
            <value>
            Can be either <see cref="F:Kendo.Mvc.UI.ChartSeriesOrientation.Horizontal">horizontal</see>
            or <see cref="F:Kendo.Mvc.UI.ChartSeriesOrientation.Vertical">vertical</see>.
            The default value is horizontal.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Border">
            <summary>
            Gets or sets the bullet border.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Overlay">
            <summary>
            Gets or sets the effects overlay.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.ColorMember">
            <summary>
            Gets the model color member name.
            </summary>
            <value>The model color member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.TargetMember">
            <summary>
            Gets the model target member name.
            </summary>
            <value>The model target member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.CurrentMember">
            <summary>
            Gets the model current member name.
            </summary>
            <value>The model current member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Data">
            <summary>
            The data used for binding.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.GroupNameTemplate">
            <summary>
            Name template for auto-generated series when binding to grouped data.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletSeries`2.Highlight">
            <summary>
            Gets or sets the series highlight options
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartBulletTarget.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartBulletTarget" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletTarget.Width">
            <summary>
            Gets or sets the target width.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletTarget.Color">
            <summary>
            Gets or sets the markers color.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartBulletTarget.Border">
            <summary>
            Gets or sets the markers border.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.Data">
            <summary>
            The data used for binding.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.Gap">
            <summary>
            The distance between category clusters.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.Spacing">
            <summary>
            Space between bullets.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.Orientation">
            <summary>
            The orientation of the bullets.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.Border">
            <summary>
            Gets or sets the bullet's border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.Target">
            <summary>
            Gets or sets the bullet's target
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.Overlay">
            <summary>
            Gets or sets the effects overlay
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.ColorMember">
            <summary>
            Gets the model color member name.
            </summary>
            <value>The model color member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.CurrentMember">
            <summary>
            Gets the model current member name.
            </summary>
            <value>The model current member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBulletSeries.TargetMember">
            <summary>
            Gets the model target member name.
            </summary>
            <value>The model target member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCandlestickSeries.DownColorMember">
            <summary>
            Gets the model down color member name.
            </summary>
            <value>The model down color member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartCandlestickSeries.Overlay">
            <summary>
            Gets or sets the effects overlay.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.Aggregates">
            <summary>
            Aggregates function for date series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.Gap">
            <summary>
            The distance between category clusters.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.Data">
            <summary>
            The data used for binding.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.Line">
            <summary>
            The ohlc chart line configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.Type">
            <summary>
            The type of the chart.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.Spacing">
            <summary>
            Space between points.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.Border">
            <summary>
            Gets or sets the point border.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.ColorMember">
            <summary>
            Gets the model color member name.
            </summary>
            <value>The model color member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.OpenMember">
            <summary>
            Gets the model open member name.
            </summary>
            <value>The model open member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.HighMember">
            <summary>
            Gets the model high member name.
            </summary>
            <value>The model high member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.LowMember">
            <summary>
            Gets the model low member name.
            </summary>
            <value>The model low member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartOHLCSeries.CloseMember">
            <summary>
            Gets the model close member name.
            </summary>
            <value>The model close member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBubbleSeries.SizeMember">
            <summary>
            Gets the Size data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBubbleSeries.CategoryMember">
            <summary>
            Gets the Category data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBubbleSeries.ColorMember">
            <summary>
            Gets the Color data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBubbleSeries.VisibleInLegendMember">
            <summary>
            Gets the VisibleInLegend data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBubbleSeries.MinSize">
            <summary>
            Gets the minimum bubble size of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBubbleSeries.MaxSize">
            <summary>
            Gets the maximum bubble size of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBubbleSeries.NegativeValues">
            <summary>
            Gets the negative value bubbles options.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBubbleSeries.Border">
            <summary>
            Gets or sets the bubble border.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartDonutSeries.Margin">
            <summary>
            Gets or sets the margin of the donut series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartDonutSeries.HoleSize">
            <summary>
            Gets or sets the size of the donut hole.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartDonutSeries.Size">
            <summary>
            Gets or sets the size of the donut series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAreaSeries.Stacked">
            <summary>
            A value indicating if the areas should be stacked.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAreaSeries.Aggregate">
            <summary>
            Aggregate function for date series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAreaSeries.Labels">
            <summary>
            Gets the area chart data labels configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAreaSeries.Markers">
            <summary>
            The area chart markers configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAreaSeries.MissingValues">
            <summary>
            The behavior for handling missing values in area series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAreaSeries.Line">
            <summary>
            The area chart line configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartAreaSeries.Orientation">
            <summary>
            The orientation of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterLineSeries.Width">
            <summary>
            The line chart line width.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterLineSeries.DashType">
            <summary>
            The chart line dash type.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterLineSeries.MissingValues">
            <summary>
            The behavior for handling missing values in scatter line series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterSeries.XMember">
            <summary>
            Gets the X data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterSeries.YMember">
            <summary>
            Gets the Y data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterSeries.Labels">
            <summary>
            Gets the scatter chart data labels configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterSeries.Markers">
            <summary>
            The scatter chart markers configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterSeries.XAxis">
            <summary>
            Gets or sets the X axis name to use for this series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterSeries.YAxis">
            <summary>
            Gets or sets the Y axis name to use for this series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartScatterSeries.Data">
            <summary>
            The data used for binding.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Font">
            <summary>
            Gets or sets the label font.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Visible">
            <summary>
            Gets or sets a value indicating if the label is visible
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Background">
            <summary>
            Gets or sets the label background.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Border">
            <summary>
            Gets or sets the label border.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Margin">
            <summary>
            Gets or sets the label margin.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Padding">
            <summary>
            Gets or sets the label padding.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Color">
            <summary>
            Gets or sets the label color.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Format">
            <summary>
            Gets or sets the label format.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Template">
            <summary>
            Gets or sets the label template.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Opacity">
            <summary>
            Gets or sets the label opacity.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLabels.Rotation">
            <summary>
            Gets or sets the label rotation.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLineSeries.Stacked">
            <summary>
            A value indicating if the lines should be stacked.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLineSeries.Aggregate">
            <summary>
            Aggregate function for date series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLineSeries.Labels">
            <summary>
            Gets the line chart data labels configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLineSeries.Markers">
            <summary>
            The line chart markers configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLineSeries.Width">
            <summary>
            The line chart line width.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLineSeries.DashType">
            <summary>
            The line chart line dash type.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLineSeries.MissingValues">
            <summary>
            The behavior for handling missing values in line series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartLineSeries.Orientation">
            <summary>
            The orientation of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.Type">
            <summary>
            Gets the series type.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.CategoryMember">
            <summary>
            Gets the data category member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.ExplodeMember">
            <summary>
            Gets the data explode member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.VisibleInLegendMember">
            <summary>
            Gets the data visibleInLegend member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.ColorMember">
            <summary>
            Gets the data color member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.Labels">
            <summary>
            Gets the pie chart data labels configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.Border">
            <summary>
            Gets or sets the pie's border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.Overlay">
            <summary>
            Gets or sets the effects overlay
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.Padding">
            <summary>
            Gets or sets the padding of the pie chart
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.StartAngle">
            <summary>
            Gets or sets the start angle of the first pie segment
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartPieSeries.Connectors">
            <summary>
            Gets the pie chart connectors configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.Bar">
            <summary>
            The default settings for all bar series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.Column">
            <summary>
            The default settings for all column series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.Line">
            <summary>
            The default settings for all line series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.VerticalLine">
            <summary>
            The default settings for all vertical line series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.Area">
            <summary>
            The default settings for all area series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.VerticalArea">
            <summary>
            The default settings for all vertical area series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.Pie">
            <summary>
            The default settings for all pie series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.Donut">
            <summary>
            The default settings for all donut series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.Scatter">
            <summary>
            The default settings for all scatter series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.ScatterLine">
            <summary>
            The default settings for all scatter line series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeriesDefaults.OHLC">
            <summary>
            The default settings for all ohlc series
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBoundSeries.Member">
            <summary>
            Gets the data member of the series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBoundSeries.Data">
            <summary>
            The data used for binding.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.Stacked">
            <summary>
            A value indicating if the bars should be stacked.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.StackName">
            <summary>
            The stack name that this series belongs to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.Aggregate">
            <summary>
            Aggregate function for date series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.Gap">
            <summary>
            The distance between category clusters.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.Spacing">
            <summary>
            Space between bars.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.Orientation">
            <summary>
            The orientation of the bars.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.Labels">
            <summary>
            Gets the bar chart data labels configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.Border">
            <summary>
            Gets or sets the bar's border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.Overlay">
            <summary>
            Gets or sets the effects overlay
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.ColorMember">
            <summary>
            Gets the model color member name.
            </summary>
            <value>The model color member name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartBarSeries.NegativeColor">
            <summary>
            Gets or sets the series color for negative values
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeries.Name">
            <summary>
            The series name.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeries.Opacity">
            <summary>
            The series opacity
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeries.Color">
            <summary>
            The series base color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeries.Tooltip">
            <summary>
            Gets or sets the data point tooltip options
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeries.Axis">
            <summary>
            Gets or sets the axis name to use for this series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeries.GroupNameTemplate">
            <summary>
            Name template for auto-generated series when binding to grouped data.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IChartSeries.Highlight">
            <summary>
            Gets or sets the series highlight options
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DatePickerBase" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder.#ctor(Kendo.Mvc.UI.ColorPalette)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.SimpleColorPickerEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            .Events(events =&gt;
            events.Select("select").Change("change")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder.Value(System.String)">
            <summary>
            Sets the value of the picker input
            </summary>
            <param name="color">The initially selected color</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            .Value("#ff0000")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder.Columns(System.Int32)">
            <summary>
            Sets the amount of columns that should be shown
            </summary>
            <param name="columns">The initially selected color</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            .Columns(5)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder.TileSize(System.Int32)">
            <summary>
            Sets the size of the palette tiles
            </summary>
            <param name="tileSize">The tile size (for square tiles)</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            .TileSize(32)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder.TileSize(System.Action{Kendo.Mvc.UI.Fluent.PaletteSizeBuilder})">
            <summary>
            Sets the size of the palette tiles
            </summary>
            <param name="columns">The tile size (for square tiles)</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            .TileSize(s =&gt; s.Width(20).Height(10))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder.Palette(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the range of colors that the user can pick from.
            </summary>
            <param name="palette">A list of colors.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            .Palette(new List&lt;string&gt; { "#ff0000", "#00ff00", "#0000ff" })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPaletteBuilder.Palette(Kendo.Mvc.UI.ColorPickerPalette)">
            <summary>
            Sets the range of colors that the user can pick from.
            </summary>
            <param name="palette">One of the preset palettes of colors</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            .Palette(ColorPickerPalette.WebSafe)
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SimpleColorPickerEventBuilder">
            <summary>
            Defines the fluent interface for configuring ColorPicker client events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SimpleColorPickerEventBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder" /> class.
            </summary>
            <param name="events">The events bag.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SimpleColorPickerEventBuilder.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Change client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Change(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SimpleColorPickerEventBuilder.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Change("change"))
            )
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.PaletteSizeBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DatePickerBase" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PaletteSizeBuilder.#ctor(Kendo.Mvc.UI.ColorPaletteTileSize)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.PaletteSizeBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PaletteSizeBuilder.Width(System.Int32)">
            <summary>
            Set the width of the tiles
            </summary>
            <param name="width">The tile width.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PaletteSizeBuilder.Height(System.Int32)">
            <summary>
            Set the height of the tiles
            </summary>
            <param name="width">The tile height.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.ColorPickerPalette">
            <summary>
            Defines the palettes that can be used in the color picker
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ColorPickerPalette.None">
            <summary>
            Do not use a palette (allow selection of arbitrary colors)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ColorPickerPalette.Basic">
            <summary>
            Use a palette of basic colors
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.ColorPickerPalette.WebSafe">
            <summary>
            Use a palette of web-safe colors
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ColorPickerBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DatePickerBase" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.#ctor(Kendo.Mvc.UI.ColorPicker)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ColorPickerBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt;
            events.Select("select").Change("change")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.Value(System.String)">
            <summary>
            Sets the value of the picker input
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.Opacity(System.Boolean)">
            <summary>
            Indicates whether the picker will allow transparent colors to be picked.
            </summary>
            <param name="allowOpacity">Whether the user is allowed to change the color opacity.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Opacity(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.Palette(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the range of colors that the user can pick from.
            </summary>
            <param name="palette">A list of colors.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Palette(new List&lt;string&gt; { "#ff0000", "#00ff00", "#0000ff" })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.Palette(Kendo.Mvc.UI.ColorPickerPalette)">
            <summary>
            Sets the range of colors that the user can pick from.
            </summary>
            <param name="palette">One of the preset palettes of colors</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Palette(ColorPickerPalette.WebSafe)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.Enable(System.Boolean)">
            <summary>
            Enables or disables the picker.
            </summary>
            <param name="value">Whether the picker is enabled</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Enable(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.Buttons(System.Boolean)">
            <summary>
            Shows or hides the accept/cancel buttons.
            </summary>
            <param name="value">Whether the buttons should be shown</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Buttons(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.ToolIcon(System.String)">
            <summary>
            Shows a tool icon.
            </summary>
            <param name="cssClass">The CSS class that will be used for styling</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .ToolIcon("k-foreColor")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.TileSize(System.Int32)">
            <summary>
            Sets the size of the palette tiles
            </summary>
            <param name="tileSize">The tile size (for square tiles)</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            .TileSize(32)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerBuilder.TileSize(System.Action{Kendo.Mvc.UI.Fluent.PaletteSizeBuilder})">
            <summary>
            Sets the size of the palette tiles
            </summary>
            <param name="columns">The tile size (for square tiles)</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            .TileSize(s =&gt; s.Width(20).Height(10))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder">
            <summary>
            Defines the fluent interface for configuring ColorPicker client events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder" /> class.
            </summary>
            <param name="events">The events bag.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Change client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Change(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Change("change"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder.Select(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Select client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Select(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder.Select(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Select client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Select("change"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder.Open(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Open client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Open(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder.Open(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Open client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Open("open"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder.Close(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Close client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Close(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColorPickerEventBuilder.Close(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Close client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            .Events(events =&gt; events.Close("close"))
            )
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ComboBoxBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.ComboBox" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.#ctor(Kendo.Mvc.UI.ComboBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ComboBoxBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.AutoBind(System.Boolean)">
            <summary>
            Controls whether to bind the widget to the DataSource on initialization.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .AutoBind(false)
            %&gt;
            </code>
            </example>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.BindTo(System.Collections.Generic.IEnumerable{Kendo.Mvc.UI.DropDownListItem})-->
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.BindTo(System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})-->
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.DataValueField(System.String)">
            <summary>
            Sets the field of the data item that provides the value content of the list items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .DataTextField("Text")
            .DataValueField("Value")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.ComboBoxEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .Events(events =&gt;
            events.Change("change")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.Filter(System.String)">
            <summary>
            Use it to enable filtering of items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .Filter("startswith");
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.Filter(Kendo.Mvc.UI.FilterType)">
            <summary>
            Use it to enable filtering of items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .Filter(FilterType.Contains);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.DropDownListItemFactory})">
            <summary>
            Defines the items in the ComboBox
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().ComboBox()
            .Name("ComboBox")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.HighlightFirst(System.Boolean)">
            <summary>
            Use it to enable highlighting of first matched item.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .HighlightFirst(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.MinLength(System.Int32)">
            <summary>
            Specifies the minimum number of characters that should be typed before the widget queries the dataSource.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .MinLength(3)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.SelectedIndex(System.Int32)">
            <summary>
            Use it to set selected item index
            </summary>
            <param name="index">Item index.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .SelectedIndex(0);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.Suggest(System.Boolean)">
            <summary>
            Controls whether the ComboBox should automatically auto-type the rest of text.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .Suggest(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.Placeholder(System.String)">
            <summary>
            A string that appears in the textbox when it has no value.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .Placeholder("Select country...")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.CascadeFrom(System.String)">
            <summary>
            Use it to set the Id of the parent ComboBox.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().ComboBox()
            .Name("ComboBox2")
            .CascadeFrom("ComboBox1")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxBuilder.Text(System.String)">
            <summary>
            Define the text of the widget, when the autoBind is set to false.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().ComboBox()
            .Name("ComboBox")
            .Text("Chai")
            .AutoBind(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.ClientHandlerDescriptor">
            <summary>
            Represents a client-side event handler of a Kendo UI widget
            </summary>
        </member>
        <member name="P:Kendo.Mvc.ClientHandlerDescriptor.TemplateDelegate">
            <summary>
            A Razor template delegate.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.ClientHandlerDescriptor.HandlerName">
            <summary>
            The name of the JavaScript function which will be called as a handler.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxEventBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.ComboBoxEventBuilder" /> class.
            </summary>
            <param name="Events">The client events.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxEventBuilder.Cascade(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Cascade client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ComboBox()
            .Name("ComboBox")
            .Events(events =&gt; events.Cascade(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ComboBoxEventBuilder.Cascade(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Cascade client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().ComboBox()
            .Name("ComboBox")
            .Events(events =&gt; events.Cascade("cascade"))
            )
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DataSource" /> AJAX create/update/destroy operation bindings.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Update(System.Action{Kendo.Mvc.UI.Fluent.CrudOperationBuilder})">
            <summary>
            Configures the URL for Update operation.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Update(System.String,System.String)">
            <summary>
            Sets controller and action for Update operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Update(System.String,System.String,System.Object)">
            <summary>
            Sets controller, action and routeValues for Update operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Create(System.Action{Kendo.Mvc.UI.Fluent.CrudOperationBuilder})">
            <summary>
            Configures the URL for Create operation.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Create(System.String,System.String)">
            <summary>
            Sets controller and action for Create operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Create(System.String,System.String,System.Object)">
            <summary>
            Sets controller, action and routeValues for Create operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Destroy(System.Action{Kendo.Mvc.UI.Fluent.CrudOperationBuilder})">
            <summary>
            Configures the URL for Destroy operation.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Destroy(System.String,System.String)">
            <summary>
            Sets controller and action for Destroy operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Destroy(System.String,System.String,System.Object)">
            <summary>
            Sets controller, action and routeValues for Destroy operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilder`1.Batch(System.Boolean)">
            <summary>
            Determines if modifications will be sent to the server in batches or as individually requests.
            </summary>
            <param name="enabled">If true changes will be batched, otherwise false.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DataSource" /> options.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Events(System.Action{Kendo.Mvc.UI.Fluent.DataSourceEventBuilder})">
            <summary>
            Configures the client-side events
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Read(System.Action{Kendo.Mvc.UI.Fluent.CrudOperationBuilder})">
            <summary>
            Configures the URL for Read operation.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Read(System.String,System.String,System.Object)">
            <summary>
            Sets controller and action for Read operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Read(System.String,System.String)">
            <summary>
            Sets controller, action and routeValues for Read operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Total(System.Int32)">
            <summary>
            Sets the total number of records in the data source. Required during Custom binding.
            </summary>
            <param name="total">Number of records</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.PageSize(System.Int32)">
            <summary>
            Sets the number of records displayed on a single page.
            </summary>
            <param name="pageSize">
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.ServerOperation(System.Boolean)">
            <summary>
            Sets the operation mode of the DataSource.
            By default the DataSource will make a request to the server when data for paging, sorting,
            filtering or grouping is needed. If set to false all data will be requested through single request.
            Any other paging, sorting, filtering or grouping will be performed client-side.
            </summary>
            <param name="enabled">True(default) if server operation mode is enabled, otherwise false.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Sort(System.Action{Kendo.Mvc.UI.Fluent.DataSourceSortDescriptorFactory{`0}})">
            <summary>
            Configures the initial sorting.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Group(System.Action{Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory{`0}})">
            <summary>
            Configures the initial grouping.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Aggregates(System.Action{Kendo.Mvc.UI.Fluent.DataSourceAggregateDescriptorFactory{`0}})">
            <summary>
            Configures the initial aggregates.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Filter(System.Action{Kendo.Mvc.UI.Fluent.DataSourceFilterDescriptorFactory{`0}})">
            <summary>
            Configures the initial filter.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.AjaxDataSourceBuilderBase`2.Model(System.Action{Kendo.Mvc.UI.Fluent.DataSourceModelDescriptorFactory{`0}})">
            <summary>
            Configures Model properties
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ReadOnlyAjaxDataSourceBuilder`1">
            <summary>
            Defines the fluent API for configuring a readon-only AJAX data source.
            </summary>
            <typeparam name="TModel">
            </typeparam>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.CrudOperation" /> options for server binding.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder.Route(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route values for the operation.
            </summary>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder.Action(System.String,System.String,System.Object)">
            <summary>
            Sets the action, contoller and route values for the operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action, contoller and route values for the operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder.Action(System.String,System.String)">
            <summary>
            Sets the action and contoller values for the operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder.Route(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route name and values for the operation.
            </summary>
            <param name="routeName">Route name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder.Route(System.String,System.Object)">
            <summary>
            Sets the route name and values for the operation.
            </summary>
            <param name="routeName">Route name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder.Route(System.String)">
            <summary>
            Sets the route name for the operation.
            </summary>
            <param name="routeName">
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Read(System.Action{Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder})">
            <summary>
            Configures the URL for Read operation.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Read(System.String,System.String,System.Object)">
            <summary>
            Sets controller and action for Read operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Read(System.String,System.String)">
            <summary>
            Sets controller, action and routeValues for Read operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Total(System.Int32)">
            <summary>
            Sets the total number of records in the data source. Required during Custom binding.
            </summary>
            <param name="total">Number of records</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Update(System.Action{Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder})">
            <summary>
            Configures the URL for Update operation.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Update(System.String,System.String,System.Object)">
            <summary>
            Sets controller and action for Update operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Update(System.String,System.String)">
            <summary>
            Sets controller, action and routeValues for Update operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Create(System.Action{Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder})">
            <summary>
            Configures the URL for Create operation.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Create(System.String,System.String,System.Object)">
            <summary>
            Sets controller and action for Create operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Create(System.String,System.String)">
            <summary>
            Sets controller, action and routeValues for Create operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Destroy(System.Action{Kendo.Mvc.UI.Fluent.ServerCrudOperationBuilder})">
            <summary>
            Configures the URL for Destroy operation.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Destroy(System.String,System.String,System.Object)">
            <summary>
            Sets controller and action for Destroy operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Destroy(System.String,System.String)">
            <summary>
            Sets controller, action and routeValues for Destroy operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.PageSize(System.Int32)">
            <summary>
            Sets the number of records displayed on a single page.
            </summary>
            <param name="pageSize">
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Sort(System.Action{Kendo.Mvc.UI.Fluent.DataSourceSortDescriptorFactory{`0}})">
            <summary>
            Configures the initial sorting.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Group(System.Action{Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory{`0}})">
            <summary>
            Configures the initial grouping.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Aggregates(System.Action{Kendo.Mvc.UI.Fluent.DataSourceAggregateDescriptorFactory{`0}})">
            <summary>
            Configures the initial aggregates.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Filter(System.Action{Kendo.Mvc.UI.Fluent.DataSourceFilterDescriptorFactory{`0}})">
            <summary>
            Configures the initial filter.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ServerDataSourceBuilder`1.Model(System.Action{Kendo.Mvc.UI.Fluent.DataSourceModelDescriptorFactory{`0}})">
            <summary>
            Configures Model properties
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DataSource" /> component client-side events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Change client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.Sync(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the Sync client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.Sync(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Sync client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.RequestStart(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the RequestStart client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.RequestStart(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the RequestStart client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.RequestEnd(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the RequestEnd client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.RequestEnd(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the RequestEnd client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.Error(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the Error client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceEventBuilder.Error(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Error client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceModelFieldDescriptorBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.ModelFieldDescriptor" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceModelFieldDescriptorBuilder`1.DefaultValue(`0)">
            <summary>
            Sets the value which will be used to populate the field when new non-existing model is created.
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceModelFieldDescriptorBuilder`1.DefaultValue(System.Object)">
            <summary>
            Sets the value which will be used to populate the field when new non-existing model is created.
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceModelFieldDescriptorBuilder`1.Editable">
            <summary>
            Specifies if the field should be editable.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceModelFieldDescriptorBuilder`1.Editable(System.Boolean)">
            <summary>
            Specifies if the field should be editable.
            </summary>
            <param name="enabled">True is the field should be editable, otherwise false</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceModelDescriptorFactory`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DataSource" /> Model definition.
            </summary>
            <typeparam name="TModel">Type of the model</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceModelDescriptorFactory`1.Id``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Specify the member used to identify an unique Model instance.
            </summary>
            <typeparam name="TValue">Type of the field</typeparam>
            <param name="expression">Member access expression which describes the member</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceModelDescriptorFactory`1.Id(System.String)">
            <summary>
            Specify the member used to identify an unique Model instance.
            </summary>
            <param name="fieldName">The member name.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceModelDescriptorFactory`1.Field``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Describes a Model field
            </summary>
            <typeparam name="TValue">Field type</typeparam>
            <param name="expression">Member access expression which describes the field</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceModelDescriptorFactory`1.Field(System.String,System.Type)">
            <summary>
            Describes a Model field
            </summary>
            <param name="memberName">Field name</param>
            <param name="memberType">Field type</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceModelDescriptorFactory`1.Field``1(System.String)">
            <summary>
            Describes a Model field
            </summary>
            <typeparam name="TValue">Field type</typeparam>
            <param name="memberName">Member name</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceAggregateDescriptorFactory`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.AggregateDescriptor" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceAggregateDescriptorFactory`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Specifies member on which aggregates to be calculated.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceAggregateDescriptorFactory`1.Add(System.String,System.Type)">
            <summary>
            Specifies member on which aggregates to be calculated.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.CrudOperationBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.CrudOperation" /> options.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Route(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route values for the operation.
            </summary>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Action(System.String,System.String,System.Object)">
            <summary>
            Sets the action, contoller and route values for the operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action, contoller and route values for the operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Action(System.String,System.String)">
            <summary>
            Sets the action and contoller values for the operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Route(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route name and values for the operation.
            </summary>
            <param name="routeName">Route name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Route(System.String,System.Object)">
            <summary>
            Sets the route name and values for the operation.
            </summary>
            <param name="routeName">Route name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Route(System.String)">
            <summary>
            Sets the route name for the operation.
            </summary>
            <param name="routeName">
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Data(System.Func{System.Object,System.Object})">
            <summary>
            Sets JavaScript function which to return additional parameters which to be sent the server.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Data(System.String)">
            <summary>
            Sets JavaScript function which to return additional parameters which to be sent the server.
            </summary>
            <param name="handler">JavaScript function name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Url(System.String)">
            <summary>
            Specifies an absolute or relative URL for the operation.
            </summary>
            <param name="url">Absolute or relative URL for the operation</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CrudOperationBuilder.Type(System.Web.Mvc.HttpVerbs)">
            <summary>
            Specifies the HTTP verb of the request.
            </summary>
            <param name="verb">The HTTP verb</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ReadOnlyDataSourceBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DataSource" /> when in read-only mode.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ReadOnlyDataSourceBuilder.Read(System.Action{Kendo.Mvc.UI.Fluent.CrudOperationBuilder})">
            <summary>
            Configures the URL for Read operation.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ReadOnlyDataSourceBuilder.Read(System.String,System.String,System.Object)">
            <summary>
            Sets controller and action for Read operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
            <param name="routeValues">Route values</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ReadOnlyDataSourceBuilder.Read(System.String,System.String)">
            <summary>
            Sets controller, action and routeValues for Read operation.
            </summary>
            <param name="actionName">Action name</param>
            <param name="controllerName">Controller Name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ReadOnlyDataSourceBuilder.ServerFiltering">
            <summary>
            Specifies if filtering should be handled by the server.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ReadOnlyDataSourceBuilder.ServerFiltering(System.Boolean)">
            <summary>
            Specifies if filtering should be handled by the server.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ReadOnlyDataSourceBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.DataSourceEventBuilder})">
            <summary>
            Configures the client-side events
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DataSource" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceBuilder`1.Ajax">
            <summary>
            Use it to configure Ajax binding.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceBuilder`1.Server">
            <summary>
            Use it to configure Server binding.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.CalendarView">
            <summary>
            Represents available types of calendar views.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.CalendarView.Month">
            <summary>
            Shows the days of the current month
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.CalendarView.Year">
            <summary>
            Shows the months of the current year
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.CalendarView.Decade">
            <summary>
            Shows the years of the current decade
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.CalendarView.Century">
            <summary>
            Shows the decades of the current century
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListBuilderBase`2.Animation(System.Boolean)">
            <summary>
            Use to enable or disable animation of the popup element.
            </summary>
            <param name="enable">The boolean value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            	           .Name("DropDownList")
            	           .Animation(false) //toggle effect
            	%&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListBuilderBase`2.Animation(System.Action{Kendo.Mvc.UI.Fluent.PopupAnimationBuilder})">
            <summary>
            Configures the animation effects of the widget.
            </summary>
            <param name="animationAction">The action which configures the animation effects.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            	           .Name("DropDownList")
            	           .Animation(animation =&gt;
            	           {
            		            animation.Open(open =&gt;
            		            {
            		                open.SlideIn(SlideDirection.Down);
            		            }
            	           })
            	%&gt;
            </code>
            </example>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.ListBuilderBase`2.BindTo(System.Collections.IEnumerable)-->
        <member name="M:Kendo.Mvc.UI.Fluent.ListBuilderBase`2.DataTextField(System.String)">
            <summary>
            Sets the field of the data item that provides the text content of the list items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .DataTextField("Text")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListBuilderBase`2.DataSource(System.Action{Kendo.Mvc.UI.Fluent.ReadOnlyDataSourceBuilder})">
            <summary>
            Configures the DataSource options.
            </summary>
            <param name="configurator">The DataSource configurator action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .DataSource(source =&gt;
            {
            source.Read(read =&gt;
            {
            read.Action("GetProducts", "Home");
            }
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListBuilderBase`2.Delay(System.Int32)">
            <summary>
            Specifies the delay in ms after which the widget will start filtering the dataSource.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Delay(300)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListBuilderBase`2.Enable(System.Boolean)">
            <summary>
            Enables or disables the combobox.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListBuilderBase`2.IgnoreCase(System.Boolean)">
            <summary>
            Use it to enable case insensitive bahavior of the combobox. If true the combobox will select the first matching item ignoring its casing.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .IgnoreCase(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListBuilderBase`2.Height(System.Int32)">
            <summary>
            Sets the height of the drop-down list in pixels.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Height(300)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilderBase`2.Template(System.String)">
            <summary>
            Template to be used for rendering the items in the list.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Template("#= data #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilderBase`2.TemplateId(System.String)">
            <summary>
            TemplateId to be used for rendering the items in the list.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .TemplateId("widgetTemplateId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilderBase`2.Value(System.String)">
            <summary>
            Sets the value of the widget.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Value("1")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.DropDownListEventBuilder" /> class.
            </summary>
            <param name="Events">The client events.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilder.Cascade(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Cascade client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Cascade(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilder.Cascade(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Cascade client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Cascade("cascade"))
            )
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.EditorStyleSheetBuilder">
            <summary>
            Defines the fluent interface for configuring the Editor stylesheets.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.EditorImageBrowserController.ContentPath">
            <summary>
            Gets the base path from which content will be served.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.EditorImageBrowserController.Filter">
            <summary>
            Gets the valid file extensions by which served files will be filtered.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.EditorImageBrowserController.AuthorizeRead(System.String)">
            <summary>
            Determines if content of a given path can be browsed.
            </summary>
            <param name="path">The path which will be browsed.</param>
            <returns>true if browsing is allowed, otherwise false.</returns>
        </member>
        <member name="M:Kendo.Mvc.UI.EditorImageBrowserController.Thumbnail(System.String)">
            <summary>
            Serves an image's thumbnail by given path.
            </summary>
            <param name="path">The path to the image.</param>
            <returns>Thumbnail of an image.</returns>
            <exception cref="T:System.Web.HttpException">Throws 403 Forbidden if the <paramref name="path" /> is outside of the valid paths.</exception>
            <exception cref="T:System.Web.HttpException">Throws 404 File Not Found if the <paramref name="path" /> refers to a non existant image.</exception>
        </member>
        <member name="M:Kendo.Mvc.UI.EditorImageBrowserController.Destroy(System.String,Kendo.Mvc.UI.ImageBrowserEntry)">
            <summary>
            Deletes a entry.
            </summary>
            <param name="path">The path to the entry.</param>
            <param name="entry">The entry.</param>
            <returns>An empty <see cref="T:System.Web.Mvc.ContentResult" />.</returns>
            <exception cref="T:System.Web.HttpException">Forbidden</exception>
        </member>
        <member name="M:Kendo.Mvc.UI.EditorImageBrowserController.AuthorizeDeleteFile(System.String)">
            <summary>
            Determines if a file can be deleted.
            </summary>
            <param name="path">The path to the file.</param>
            <returns>true if file can be deleted, otherwise false.</returns>
        </member>
        <member name="M:Kendo.Mvc.UI.EditorImageBrowserController.AuthorizeDeleteDirectory(System.String)">
            <summary>
            Determines if a folder can be deleted.
            </summary>
            <param name="path">The path to the folder.</param>
            <returns>true if folder can be deleted, otherwise false.</returns>
        </member>
        <member name="M:Kendo.Mvc.UI.EditorImageBrowserController.AuthorizeCreateDirectory(System.String,System.String)">
            <summary>
            Determines if a folder can be created.
            </summary>
            <param name="path">The path to the parent folder in which the folder should be created.</param>
            <param name="name">Name of the folder.</param>
            <returns>true if folder can be created, otherwise false.</returns>
        </member>
        <member name="M:Kendo.Mvc.UI.EditorImageBrowserController.Create(System.String,Kendo.Mvc.UI.ImageBrowserEntry)">
            <summary>
            Creates a folder with a given entry.
            </summary>
            <param name="path">The path to the parent folder in which the folder should be created.</param>
            <param name="entry">The entry.</param>
            <returns>An empty <see cref="T:System.Web.Mvc.ContentResult" />.</returns>
            <exception cref="T:System.Web.HttpException">Forbidden</exception>
        </member>
        <member name="M:Kendo.Mvc.UI.EditorImageBrowserController.AuthorizeUpload(System.String,System.Web.HttpPostedFileBase)">
            <summary>
            Determines if a file can be uploaded to a given path.
            </summary>
            <param name="path">The path to which the file should be uploaded.</param>
            <param name="file">The file which should be uploaded.</param>
            <returns>true if the upload is allowed, otherwise false.</returns>
        </member>
        <member name="M:Kendo.Mvc.UI.EditorImageBrowserController.Upload(System.String,System.Web.HttpPostedFileBase)">
            <summary>
            Uploads a file to a given path.
            </summary>
            <param name="path">The path to which the file should be uploaded.</param>
            <param name="file">The file which should be uploaded.</param>
            <returns>A <see cref="T:System.Web.Mvc.JsonResult" /> containing the uploaded file's size and name.</returns>
            <exception cref="T:System.Web.HttpException">Forbidden</exception>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ExpandableAnimationBuilder">
            <summary>
            Defines the fluent API for configuring the <see cref="T:Kendo.Mvc.UI.ExpandableAnimation" /> object.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.PopupAnimationBuilder">
            <summary>
            Defines the fluent API for configuring the <see cref="T:Kendo.Mvc.UI.PopupAnimation" /> object.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.FlatColorPickerBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DatePickerBase" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FlatColorPickerBuilder.#ctor(Kendo.Mvc.UI.FlatColorPicker)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.FlatColorPickerBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FlatColorPickerBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.SimpleColorPickerEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().FlatColorPicker()
            .Name("FlatColorPicker")
            .Events(events =&gt;
            events.Select("select").Change("change")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FlatColorPickerBuilder.Value(System.String)">
            <summary>
            Sets the value of the picker input
            </summary>
            <param name="color">The initially selected color</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().FlatColorPicker()
            .Name("FlatColorPicker")
            .Value("#ff0000")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FlatColorPickerBuilder.Opacity(System.Boolean)">
            <summary>
            Indicates whether the picker will allow transparent colors to be picked.
            </summary>
            <param name="allowOpacity">Whether the user is allowed to change the color opacity.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().FlatColorPicker()
            .Name("FlatColorPicker")
            .Opacity(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FlatColorPickerBuilder.Input(System.Boolean)">
            <summary>
            Indicates whether the picker will show an input for entering colors.
            </summary>
            <param name="showInput">Whether the input field should be shown.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().FlatColorPicker()
            .Name("FlatColorPicker")
            .Input(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FlatColorPickerBuilder.Preview(System.Boolean)">
            <summary>
            Indicates whether the picker will show a preview of the selected color.
            </summary>
            <param name="showPreview">Whether the preview area should be shown.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().FlatColorPicker()
            .Name("FlatColorPicker")
            .Preview(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FlatColorPickerBuilder.Buttons(System.Boolean)">
            <summary>
            Indicates whether the picker will show apply / cancel buttons.
            </summary>
            <param name="showButtons">Whether the buttons should be shown.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().FlatColorPicker()
            .Name("FlatColorPicker")
            .Buttons(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.GaugeRadialScaleLabelsPosition">
            <summary>
            Defines the position of the radial gauge labels.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.GaugeRadialScaleLabelsPosition.Inside">
            <summary>
            The labels are positioned inside.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.GaugeRadialScaleLabelsPosition.Outside">
            <summary>
            The labels are positioned outside.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeLineBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:GaugeLine" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLineBuilder.#ctor(Kendo.Mvc.UI.ChartLine)">
            <summary>
            Initializes a new instance of the <see cref="!:GugeLineBuilder" /> class.
            </summary>
            <param name="gaugeLine">The chart line.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLineBuilder.Visible(System.Boolean)">
            <summary>
            Sets the line visibility
            </summary>
            <param name="visible">The line visibility.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale.Line(line =&gt; line.Color("#f00")))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeLinearScaleLabelsBuilder">
            <summary>
            Defines the fluent interface for configuring the linear gauge labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearScaleLabelsBuilder.#ctor(Kendo.Mvc.UI.GaugeLinearScaleLabels)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeLinearScaleLabelsBuilder" /> class.
            </summary>
            <param name="scaleLabels">The labels configuration.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeRadialScaleLabelsBuilder">
            <summary>
            Defines the fluent interface for configuring the radial gauge labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialScaleLabelsBuilder.#ctor(Kendo.Mvc.UI.GaugeRadialScaleLabels)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeRadialScaleLabelsBuilder" /> class.
            </summary>
            <param name="scaleLabels">The labels configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialScaleLabelsBuilder.Position(Kendo.Mvc.UI.GaugeRadialScaleLabelsPosition)">
            <summary>
            Sets the labels position
            </summary>
            <param name="position">The labels position.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Position(GaugeRadialScaleLabelsPosition.Inside)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.LinearGaugeBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.LinearGauge" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.LinearGaugeBuilder.#ctor(Kendo.Mvc.UI.LinearGauge)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.LinearGaugeBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.LinearGaugeBuilder.Theme(System.String)">
            <summary>
            Sets the theme of the linear gauge.
            </summary>
            <param name="theme">The linear gauge theme.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Theme("Black")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.LinearGaugeBuilder.GaugeArea(System.Action{Kendo.Mvc.UI.Fluent.GaugeAreaBuilder})">
            <summary>
            Sets the linear gauge area.
            </summary>
            <param name="configurator">The linear gauge area.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .ChartArea(chartArea =&gt; chartArea.margin(20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.LinearGaugeBuilder.Scale(System.Action{Kendo.Mvc.UI.Fluent.GaugeLinearScaleBuilder})">
            <summary>
            Configures the scale
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Scale(scale =&gt; scale
            .Min(10)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.LinearGaugeBuilder.Pointer(System.Action{Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder})">
            <summary>
            Configures the pointer
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Pointer(pointer =&gt; pointer
            .Value(10)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.LinearGaugeBuilder.Transitions(System.Boolean)">
            <summary>
            Enables or disabled animated transitions on initial load and refresh.
            </summary>
            <param name="transitions">
            A value indicating if transition animations should be played.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialScale")
            .Transitions(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.RadialGaugeBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.RadialGauge" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RadialGaugeBuilder.#ctor(Kendo.Mvc.UI.RadialGauge)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.RadialGaugeBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RadialGaugeBuilder.Theme(System.String)">
            <summary>
            Sets the theme of the radial gauge.
            </summary>
            <param name="theme">The radial gauge theme.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Theme("Black")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RadialGaugeBuilder.GaugeArea(System.Action{Kendo.Mvc.UI.Fluent.GaugeAreaBuilder})">
            <summary>
            Sets the radial gauge area.
            </summary>
            <param name="configurator">The radial gauge area.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .ChartArea(chartArea =&gt; chartArea.margin(20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RadialGaugeBuilder.Scale(System.Action{Kendo.Mvc.UI.Fluent.GaugeRadialScaleBuilder})">
            <summary>
            Configures the scale
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Scale(scale =&gt; scale
            .Min(10)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RadialGaugeBuilder.Pointer(System.Action{Kendo.Mvc.UI.Fluent.GaugeRadialPointerBuilder})">
            <summary>
            Configures the pointer
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Pointer(pointer =&gt; pointer
            .Value(10)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RadialGaugeBuilder.Transitions(System.Boolean)">
            <summary>
            Enables or disabled animated transitions on initial load and refresh.
            </summary>
            <param name="transitions">
            A value indicating if transition animations should be played.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialScale")
            .Transitions(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeLinearScaleBuilder">
            <summary>
            Defines the fluent interface for configuring the gauge scale.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearScaleBuilder.#ctor(Kendo.Mvc.UI.LinearGauge)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeLinearScaleBuilder" /> class.
            </summary>
            <param name="gauge">The gauge component.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.GaugeLinearScaleBuilder.linearGauge">
            <summary>
            The parent Guage
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearScaleBuilder.Mirror(System.Boolean)">
            <summary>
            Sets the mirror of the gauge
            </summary>
            <param name="mirror">The mirror.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("LinearGauge")
            .Scale(scale =&gt; scale
            .Mirror(true)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearScaleBuilder.Vertical(System.Boolean)">
            <summary>
            Sets the orientation of the gauge
            </summary>
            <param name="vertical">The vertical.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("LinearGauge")
            .Scale(scale =&gt; scale
            .Vertical(false)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearScaleBuilder.Labels(System.Action{Kendo.Mvc.UI.Fluent.GaugeLinearScaleLabelsBuilder})">
            <summary>
            Configures the labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeRadialScaleBuilder">
            <summary>
            Defines the fluent interface for configuring the gauge scale.
            </summary>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.GaugeRadialScaleBuilder.#ctor(Kendo.Mvc.UI.RadialGauge)-->
        <member name="P:Kendo.Mvc.UI.Fluent.GaugeRadialScaleBuilder.radialGauge">
            <summary>
            The parent Guage
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialScaleBuilder.EndAngle(System.Double)">
            <summary>
            Sets the end angle of the gauge
            </summary>
            <param name="endAngle">The end angle.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Scale(scale =&gt; scale
            .EndAngle(10)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialScaleBuilder.StartAngle(System.Double)">
            <summary>
            Sets the start angle of the gauge
            </summary>
            <param name="startAngle">The start Angle.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Scale(scale =&gt; scale
            .StartAngle(220)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialScaleBuilder.Labels(System.Action{Kendo.Mvc.UI.Fluent.GaugeRadialScaleLabelsBuilder})">
            <summary>
            Configures the labels.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeRadialScaleLabels.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeRadialScaleLabels" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialScaleLabels.Position">
            <summary>
            The radila scale lables position.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeLinearScaleLabels.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeLinearScaleLabels" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IRadialScale.EndAngle">
            <summary>
            The scale end angle.s
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IRadialScale.StartAngle">
            <summary>
            The scale start angle.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IRadialScale.Labels">
            <summary>
            The scale labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeLinearScale.#ctor(Kendo.Mvc.UI.LinearGauge)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeLinearScale" /> class.
            </summary>
            <value>The linear gauge.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearScale.lienarGauge">
            <summary>
            Gets or sets the linear gauge.
            </summary>
            <value>The linear gauge.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearScale.Mirror">
            <summary>
            The scale mirror.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearScale.Vertical">
            <summary>
            The scale orientation.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearScale.Labels">
            <summary>
            The scale labels.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ILinearScale.Mirror">
            <summary>
            The scale mirror.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ILinearScale.Vertical">
            <summary>
            The scale vertical.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ILinearScale.Labels">
            <summary>
            The scale labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeRadialScale.#ctor(Kendo.Mvc.UI.RadialGauge)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeRadialScale" /> class.
            </summary>
            <value>The radial gauge.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialScale.radialGauge">
            <summary>
            Gets or sets the radial gauge.
            </summary>
            <value>The radial gauge.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialScale.EndAngle">
            <summary>
            The scale end angle.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialScale.StartAngle">
            <summary>
            The scale start angle.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialScale.Labels">
            <summary>
            The scale labels.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DatePickerBase" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:DatePickerBuilderBase{TPicker, TPickerBuilder}" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Animation(System.Boolean)">
            <summary>
            Use to enable or disable animation of the popup element.
            </summary>
            <param name="enable">The boolean value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            	           .Name("DatePicker")
            	           .Animation(false) //toggle effect
            	%&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Animation(System.Action{Kendo.Mvc.UI.Fluent.PopupAnimationBuilder})">
            <summary>
            Configures the animation effects of the widget.
            </summary>
            <param name="animationAction">The action which configures the animation effects.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            	           .Name("DatePicker")
            	           .Animation(animation =&gt;
            	           {
            		            animation.Open(open =&gt;
            		            {
            		                open.SlideIn(SlideDirection.Down);
            		            }
            	           })
            	%&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Culture(System.String)">
            <summary>
            Specifies the culture info used by the widget.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Culture("de-DE")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Events(System.Action{Kendo.Mvc.UI.Fluent.DatePickerEventBuilderBase})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Events(events =&gt;
            events.Open("open").Change("change")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Format(System.String)">
            <summary>
            Sets the date format, which will be used to parse and format the machine date.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.ParseFormats(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Specifies the formats, which are used to parse the value set with value() method or by direct input.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Enable(System.Boolean)">
            <summary>
            Enables or disables the picker.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Min(System.DateTime)">
            <summary>
            Sets the minimal date, which can be selected in picker.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Max(System.DateTime)">
            <summary>
            Sets the maximal date, which can be selected in picker.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Value(System.Nullable{System.DateTime})">
            <summary>
            Sets the value of the picker input
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilderBase`2.Value(System.String)">
            <summary>
            Sets the value of the picker input
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DatePickerEventBuilderBase">
            <summary>
            Defines the fluent interface for configuring datepicker client events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerEventBuilderBase.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Change client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Events(events =&gt; events.Change(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerEventBuilderBase.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Events(events =&gt; events.Change("change"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerEventBuilderBase.Open(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Open client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Events(events =&gt; events.Open(
            @&lt;text&gt;
            %&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerEventBuilderBase.Open(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the Open client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Events(events =&gt; events.Open("open"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerEventBuilderBase.Close(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Close client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Events(events =&gt; events.Close(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerEventBuilderBase.Close(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the Close client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Events(events =&gt; events.Close("close"))
            )
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.TimePicker" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.#ctor(Kendo.Mvc.UI.DateTimePicker)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TimePickerBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.Interval(System.Int32)">
            <summary>
            Sets the interval between hours.
            </summary>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.BindTo(System.Collections.Generic.IList{System.DateTime})-->
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.Footer(System.String)">
            <summary>
            Footer template to be used for rendering the footer of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePicker()
            .Name("DateTimePicker")
            .Footer("#= kendo.toString(data, "G") #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.FooterId(System.String)">
            <summary>
            FooterId to be used for rendering the footer of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePicker()
            .Name("DateTimePicker")
            .FooterId("widgetFooterId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.Depth(Kendo.Mvc.UI.CalendarView)">
            <summary>
            Specifies the navigation depth.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePicker()
            .Name("DateTimePicker")
            .Depth(CalendarView.Month)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.Start(Kendo.Mvc.UI.CalendarView)">
            <summary>
            Specifies the start view.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePicker()
            .Name("DateTimePicker")
            .Start(CalendarView.Month)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.MonthTemplateId(System.String)">
            <summary>
            MonthTemplateId to be used for rendering the cells of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePicker()
            .Name("DateTimePicker")
            .MonthTemplateId("widgetMonthTemplateId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.MonthTemplate(System.String)">
            <summary>
            Templates for the cells rendered in the "month" view.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePicker()
            .Name("DateTimePicker")
            .MonthTemplate("#= data.value #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.MonthTemplate(System.Action{Kendo.Mvc.UI.Fluent.MonthTemplateBuilder})">
            <summary>
            Configures the content of cells of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePicker()
            .Name("DateTimePicker")
            .MonthTemplate(month =&gt; month.Content("#= data.value #"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.Min(System.String)">
            <summary>
            Sets the minimal date, which can be selected in DatePicker.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.Max(System.String)">
            <summary>
            Sets the maximal date, which can be selected in DatePicker.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateTimePickerBuilder.TimeFormat(System.String)">
            <summary>
            Specifies the format, which is used to format the values in the time drop-down list.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DropDownListBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DropDownList" /> component.
            </summary>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.DropDownListBuilder.BindTo(System.Collections.Generic.IEnumerable{Kendo.Mvc.UI.DropDownListItem})-->
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.DropDownListBuilder.BindTo(System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})-->
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilder.DataValueField(System.String)">
            <summary>
            Sets the field of the data item that provides the value content of the list items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .DataTextField("Text")
            .DataValueField("Value")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.DropDownListEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt;
            events.Change("change")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.DropDownListItemFactory})">
            <summary>
            Defines the items in the DropDownList
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().DropDownList()
            .Name("DropDownList")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilder.OptionLabel(System.String)">
            <summary>
            Define the text of the default empty item. If the value is an object, then the widget will use it directly.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .OptionLabel("Select country...")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilder.SelectedIndex(System.Int32)">
            <summary>
            Use it to set selected item index
            </summary>
            <param name="index">Item index.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .SelectedIndex(0);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilder.CascadeFrom(System.String)">
            <summary>
            Use it to set the Id of the parent DropDownList.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().DropDownList()
            .Name("DropDownList2")
            .CascadeFrom("DropDownList1")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListBuilder.Text(System.String)">
            <summary>
            Define the text of the widget, when the autoBind is set to false.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().DropDownList()
            .Name("DropDownList")
            .Text("Chai")
            .AutoBind(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="!:DropDownListEventBuilderBase" /> class.
            </summary>
            <param name="Events">The client events.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.Select(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Select client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Select(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.Select(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Select client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Select("select"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Change client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Change(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Change("change"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.DataBound(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the DataBound client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.DataBound(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.DataBound(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DataBound client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.DataBound("dataBound"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.Open(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Open client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Open("open"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.Open(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Open client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Open(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.Close(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Close client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Close(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListEventBuilderBase`1.Close(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Close client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Events(events =&gt; events.Close("close"))
            )
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DropDownListItemBuilder">
            <summary>
            Defines the fluent interface for configuring child DropDonwList items.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListItemBuilder.#ctor(Kendo.Mvc.UI.DropDownListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.DropDownListItemBuilder" /> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListItemBuilder.Text(System.String)">
            <summary>
            Sets the value for the item.
            </summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Items(items =&gt; items.Add().Text("First item."))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListItemBuilder.Value(System.String)">
            <summary>
            Sets the value for the item.
            </summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Items(items =&gt; items.Add().Value("1"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListItemBuilder.Selected(System.Boolean)">
            <summary>
            Define when the item will be expanded on intial render.
            </summary>
            <param name="value">If true the item will be selected.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Items(items =&gt;
            {
            items.Add().Text("First Item").Selected(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DropDownListItemFactory">
            <summary>
            Creates items for the <see cref="T:Kendo.Mvc.UI.DropDownListItem" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListItemFactory.#ctor(System.Collections.Generic.IList{Kendo.Mvc.UI.DropDownListItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.DropDownListItemFactory" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DropDownListItemFactory.Add">
            <summary>
            Defines a item.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.EditorEventBuilder">
            <summary>
            Defines the fluent interface for configuring the Editor events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.EditorBuilder.Value(System.Action)">
            <summary>
            Sets the HTML content that will show initially in the editor.
            </summary>
            <param name="value">The action which renders the HTML content.</param>
            <code lang="CS">
            &lt;% Html.Kendo().Editor()
            .Name("Editor")
            .Value(() =&gt; { %&gt;
            &lt;blockquote&gt;
            According to Deep Thought, the answer to the ultimate question of
            life, the universe and everything is &lt;strong&gt;42&lt;/strong&gt;.
            &lt;/blockquote&gt;
            &lt;% })
            .Render();
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.EditorBuilder.Value(System.String)">
            <summary>
            Sets the HTML content which the item should display as a string.
            </summary>
            <param name="value">An HTML string.</param>
            <code lang="CS">
            &lt;%= Html.Kendo().Editor()
            .Name("Editor")
            .Value("&lt;blockquote&gt;A towel has &lt;strong&gt;immense&lt;/strong&gt; psychological value&lt;/blockquote&gt;")
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.EditorBuilder.Encode(System.Boolean)">
            <summary>
            Encode HTML content.
            </summary>
            <code lang="CS">
            &lt;%= Html.Kendo().Editor()
            .Name("Editor")
            .Value("&lt;blockquote&gt;A towel has &lt;strong&gt;immense&lt;/strong&gt; psychological value&lt;/blockquote&gt;")
            .Encode(true)
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.EditorBuilder.StyleSheets(System.Action{Kendo.Mvc.UI.Fluent.EditorStyleSheetBuilder})">
            <summary>
            Sets the CSS files that will be registered in the Editor's iframe
            </summary>
            <code lang="CS">
            &lt;%= Html.Kendo().Editor()
            .Name("Editor")
            .StyleSheets(styleSheets =&gt; styleSheets.Add("editorStyles.css"))
            %&gt;
            </code>
        </member>
        <member name="T:Kendo.Mvc.UI.GaugeLinearPointerShape">
            <summary>
            Defines the shape of the liner gauge pointer.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.GaugeLinearPointerShape.BarIndicator">
            <summary>
            Specifies a filling bar indicator.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.GaugeLinearPointerShape.Arrow">
            <summary>
            Specifies a arrow shape.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeScaleRangesFactory`1">
            <summary>
            Creates scale ranges for the <see cref="!:GaugeScaleRangesFactory{TScale}" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleRangesFactory`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:GaugeScaleRangesFactory{TScale}" /> class.
            </summary>
            <param name="scale">The scale.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.GaugeScaleRangesFactory`1.Scale">
            <summary>
            The gauge scale
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleRangesFactory`1.Add">
            <summary>
            Defines a item.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleRangesFactory`1.Add(System.Double,System.Double,System.String)">
            <summary>
            Defines a item.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeScaleRangesBuilder">
            <summary>
            Defines the fluent interface for configuring ranges.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleRangesBuilder.#ctor(Kendo.Mvc.UI.GaugeScaleRanges)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeScaleRangesBuilder" /> class.
            </summary>
            <param name="item">The scale ranges.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleRangesBuilder.From(System.Double)">
            <summary>
            Sets the ranges start position.
            </summary>
            <param name="from">The ranges start position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Ranges(ranges =&gt; ranges
            .Add().From(1).Color("Red");
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleRangesBuilder.To(System.Double)">
            <summary>
            Sets the ranges end position.
            </summary>
            <param name="to">The ranges end position.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Ranges(ranges =&gt; ranges
            .Add().To(2).Color("Red");
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleRangesBuilder.Color(System.String)">
            <summary>
            Sets the ranges color
            </summary>
            <param name="color">The ranges color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Ranges(ranges =&gt; ranges
            .Add().Color("Red");
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleRangesBuilder.Opacity(System.Double)">
            <summary>
            Sets the ranges opacity
            </summary>
            <param name="opacity">The ranges opacity.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Ranges(ranges =&gt; ranges
            .Add().Opacity(0.5);
            )
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1">
            <summary>
            Defines the fluent interface for configuring the gauge labels.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.#ctor(Kendo.Mvc.UI.GaugeScaleLabelsBase)">
            <summary>
            Initializes a new instance of the <see cref="!:GaugeLabelsBuilder{TBuilder}" /> class.
            </summary>
            <param name="scaleLabels">The labels configuration.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Font(System.String)">
            <summary>
            Sets the labels font
            </summary>
            <param name="font">The labels font (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Font("14px Arial,Helvetica,sans-serif")
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Visible(System.Boolean)">
            <summary>
            Sets the labels visibility
            </summary>
            <param name="visible">The labels visibility.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Background(System.String)">
            <summary>
            Sets the labels background color
            </summary>
            <param name="background">The labels background color.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Background("Red")
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Color(System.String)">
            <summary>
            Sets the labels text color
            </summary>
            <param name="color">The labels text color.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Color("Red")
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the labels margin
            </summary>
            <param name="top">The labels top margin.</param>
            <param name="right">The labels right margin.</param>
            <param name="bottom">The labels bottom margin.</param>
            <param name="left">The labels left margin.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Margin(0, 5, 5, 0)
            )
            )
            %&gt;els
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Margin(System.Int32)">
            <summary>
            Sets the labels margin
            </summary>
            <param name="margin">The labels margin.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Margin(20)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the labels padding
            </summary>
            <param name="top">The labels top padding.</param>
            <param name="right">The labels right padding.</param>
            <param name="bottom">The labels bottom padding.</param>
            <param name="left">The labels left padding.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Padding(0, 5, 5, 0)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Padding(System.Int32)">
            <summary>
            Sets the labels padding
            </summary>
            <param name="padding">The labels padding.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Padding(20)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the labels border
            </summary>
            <param name="width">The labels border width.</param>
            <param name="color">The labels border color (CSS syntax).</param>
            <param name="dashType">The labels border dash type.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Border(1, "Red", ChartDashType.Dot)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the label border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Format(System.String)">
            <summary>
            Sets the labels format.
            </summary>
            <param name="format">The labels format.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Format("{0:C}")
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Template(System.String)">
            <summary>
            Sets the labels template.
            </summary>
            <param name="template">The labels template.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Template("#= value #")
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLabelsBuilder`1.Opacity(System.Double)">
            <summary>
            Sets the labels opacity.
            </summary>
            <param name="opacity">
            The series opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Labels(labels =&gt; labels
            .Opacity(0.5)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2">
            <summary>
            Defines the fluent interface for configuring scale.
            </summary>
            <typeparam name="TScale">
            </typeparam>
            <typeparam name="TScaleBuilder">The type of the series builder.</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:GaugeScaleBuilderBase{TScale, TScaleBuilder}" /> class.
            </summary>
            <param name="scale">The scale.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.MinorTicks(System.Action{Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder})">
            <summary>
            Configures the minor ticks.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .MinorTicks(ticks =&gt; ticks
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.MajorTicks(System.Action{Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder})">
            <summary>
            Configures the major ticks.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .MajorTicks(ticks =&gt; ticks
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.Ranges(System.Action{Kendo.Mvc.UI.Fluent.GaugeScaleRangesFactory{`0}})">
            <summary>
            Defines the ranges items.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Ranges.Add()
            .From(1)
            .To(2)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.MajorUnit(System.Double)">
            <summary>
            Sets the scale major unit.
            </summary>
            <param name="majorUnit">The major unit.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; sclae.MajorUnit(5))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.MinorUnit(System.Double)">
            <summary>
            Sets the scale minor unit.
            </summary>
            <param name="minorUnit">The minor unit.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; sclae.MinorUnit(5))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.Min(System.Double)">
            <summary>
            Sets the scale min value.
            </summary>
            <param name="min">The min.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; sclae.Min(-20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.Max(System.Double)">
            <summary>
            Sets the scale max value.
            </summary>
            <param name="max">The max.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; sclae.Max(20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.Reverse(System.Boolean)">
            <summary>
            Sets the scale reverse.
            </summary>
            <param name="reverse">The scale reverse.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; sclae.reverse(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleBuilderBase`2.Line(System.Action{Kendo.Mvc.UI.Fluent.GaugeLineBuilder})">
            <summary>
            Configures the major ticks.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale
            .Line(line =&gt; line
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeAreaBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.GaugeArea" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeAreaBuilder.#ctor(Kendo.Mvc.UI.GaugeArea)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeAreaBuilder" /> class.
            </summary>
            <param name="gaugeArea">The gauge area.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeAreaBuilder.Background(System.String)">
            <summary>
            Sets the chart area background color.
            </summary>
            <param name="background">The background color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .GaugeArea(gaugeArea =&gt; gaugeArea.Background("red"))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeAreaBuilder.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the gauge area margin.
            </summary>
            <param name="top">The gauge area top margin.</param>
            <param name="right">The gauge area right margin.</param>
            <param name="bottom">The gauge area bottom margin.</param>
            <param name="left">The gauge area left margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .GaugeArea(gaugeArea =&gt; gaugeArea.Margin(0, 5, 5, 0))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeAreaBuilder.Margin(System.Int32)">
            <summary>
            Sets the gauge area margin.
            </summary>
            <param name="margin">The gauge area margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .GaugeArea(gaugeArea =&gt; gaugeArea.Margin(5))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeAreaBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the gauge area border.
            </summary>
            <param name="width">The border width.</param>
            <param name="color">The border color (CSS syntax).</param>
            <param name="dashType">The border dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .GaugeArea(gaugeArea =&gt; gaugeArea.Border(1, "#000", ChartDashType.Dot))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeAreaBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the gauge area border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeLinearTrackBuilder">
            <summary>
            Defines the fluent interface for configuring the linear gauge track.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearTrackBuilder.#ctor(Kendo.Mvc.UI.GaugeLinearTrack)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeLinearTrackBuilder" /> class.
            </summary>
            <param name="linearTrack">The linear gauge track.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearTrackBuilder.Color(System.String)">
            <summary>
            Sets the track color.
            </summary>
            <param name="color">The track color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Track(track =&gt; track.Color("red"))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearTrackBuilder.Size(System.Double)">
            <summary>
            Sets the track size.
            </summary>
            <param name="size">The track size.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Track(track =&gt; track.Size(8))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearTrackBuilder.Visible(System.Boolean)">
            <summary>
            Sets the track visibility.
            </summary>
            <param name="visible">The track visibility.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Track(track =&gt; track.Visible(true))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearTrackBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the track border.
            </summary>
            <param name="width">The pointer border width.</param>
            <param name="color">The pointer border color.</param>
            <param name="dashType">The pointer dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Track(track =&gt; track.Border(1, "#000", ChartDashType.Dot))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearTrackBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the track border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.#ctor(Kendo.Mvc.UI.GaugeLinearPointer)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder" /> class.
            </summary>
            <param name="pointer">The gauge pointer.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Color(System.String)">
            <summary>
            Sets the pointer color.
            </summary>
            <param name="color">The pointer color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Color("red")
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Shape(Kendo.Mvc.UI.GaugeLinearPointerShape)">
            <summary>
            Sets the pointer shape.
            </summary>
            <param name="shape">The pointer shape.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Shape(LinearGaugePointerShape.Arrow)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the pointer margin.
            </summary>
            <param name="top">The pointer top margin.</param>
            <param name="right">The pointer right margin.</param>
            <param name="bottom">The pointer bottom margin.</param>
            <param name="left">The pointer left margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Margin(20, 20, 20, 20)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Margin(System.Int32)">
            <summary>
            Sets the pointer margin.
            </summary>
            <param name="margin">The pointer margin.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Margin(20)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Border(System.Int32,System.String,Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the pointer border
            </summary>
            <param name="width">The pointer border width.</param>
            <param name="color">The pointer border color.</param>
            <param name="dashType">The pointer dash type.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Border(1, "#000", ChartDashType.Dot)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Border(System.Action{Kendo.Mvc.UI.Fluent.ChartBorderBuilder})">
            <summary>
            Configures the pointer border
            </summary>
            <param name="configurator">The border configuration action</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Opacity(System.Double)">
            <summary>
            Sets the pointer opacity.
            </summary>
            <param name="opacity">
            The pointer opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Opacity(0.5)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Size(System.Double)">
            <summary>
            Sets the pointer size.
            </summary>
            <param name="size">The pointer size.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Size(8)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Value(System.Double)">
            <summary>
            Sets the pointer value.
            </summary>
            <param name="value">The pointer value.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Value(25)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeLinearPointerBuilder.Track(System.Action{Kendo.Mvc.UI.Fluent.GaugeLinearTrackBuilder})">
            <summary>
            Configures the pointer track.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Pointer(pointer =&gt; pointer
            .Track(track =&gt; track.Visible(true))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeRadialCapBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeRadialCapBuilder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialCapBuilder.#ctor(Kendo.Mvc.UI.GaugeRadialCap)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeRadialCapBuilder" /> class.
            </summary>
            <param name="cap">The gauge cap.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialCapBuilder.Color(System.String)">
            <summary>
            Sets the cap color.
            </summary>
            <param name="color">The cap color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Pointer(pointer =&gt; pointer
            .Cap(cap =&gt; cap.Color("red"))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialCapBuilder.Opacity(System.Double)">
            <summary>
            Sets the cap opacity.
            </summary>
            <param name="opacity">
            The cap opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Pointer(pointer =&gt; pointer
            .Cap(cap =&gt; cap.Opacity(0.5))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialCapBuilder.Size(System.Double)">
            <summary>
            Sets the cap size in percents.
            </summary>
            <param name="size">The cap size in percents.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Pointer(pointer =&gt; pointer
            .Cap(cap =&gt; cap.Size(8))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeRadialPointerBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeRadialPointerBuilder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialPointerBuilder.#ctor(Kendo.Mvc.UI.GaugeRadialPointer)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeRadialPointerBuilder" /> class.
            </summary>
            <param name="pointer">The gauge pointer.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialPointerBuilder.Color(System.String)">
            <summary>
            Sets the pointer color.
            </summary>
            <param name="color">The pointer color.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Pointer(pointer =&gt; pointer
            .Color("red")
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialPointerBuilder.Opacity(System.Double)">
            <summary>
            Sets the pointer opacity.
            </summary>
            <param name="opacity">
            The pointer opacity in the range from 0 (transparent) to 1 (opaque).
            The default value is 1.
            </param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Pointer(pointer =&gt; pointer
            .Opacity(0.5)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialPointerBuilder.Value(System.Double)">
            <summary>
            Sets the pointer value.
            </summary>
            <param name="value">The pointer value.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Pointer(pointer =&gt; pointer
            .Value(25)
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeRadialPointerBuilder.Cap(System.Action{Kendo.Mvc.UI.Fluent.GaugeRadialCapBuilder})">
            <summary>
            Configures the pointer cap.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().RadialGauge()
            .Name("radialGauge")
            .Pointer(pointer =&gt; pointer
            .Cap(cap =&gt; cap.Color("red"))
            )
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeRadialCap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeRadialCap" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialCap.Color">
            <summary>
            Gets or sets cap color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialCap.Opacity">
            <summary>
            Gets or sets the cap opacity
            </summary>
            <value>
            The cap opacity
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialCap.Size">
            <summary>
            Gets or sets the cap size in percents
            </summary>
            <value>
            The cap size in percents
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeRadialPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeRadialPointer" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialPointer.Color">
            <summary>
            Gets or sets pointer color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialPointer.Opacity">
            <summary>
            Gets or sets the pointer opacity
            </summary>
            <value>
            The pointer opacity
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialPointer.Value">
            <summary>
            Gets or sets the pointer value
            </summary>
            <value>
            The pointer value
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeRadialPointer.Cap">
            <summary>
            Gets or sets the pointer value
            </summary>
            <value>
            The pointer value
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeLinearTrack.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeLinearTrack" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearTrack.Color">
            <summary>
            Gets or sets track color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearTrack.Border">
            <summary>
            Gets or sets the track border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearTrack.Size">
            <summary>
            Gets or sets the track size
            </summary>
            <value>
            The track size
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearTrack.Visible">
            <summary>
            Gets or sets the visibility of the track
            </summary>
            <value>
            The track visibility
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearTrack.Opacity">
            <summary>
            Gets or sets the track opacity
            </summary>
            <value>
            The track opacity
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeLinearPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeLinearPointer" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearPointer.Margin">
            <summary>
            Gets or sets the pointer margin
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearPointer.Color">
            <summary>
            Gets or sets pointer color
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearPointer.Border">
            <summary>
            Gets or sets the pointer border
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearPointer.Opacity">
            <summary>
            Gets or sets the pointer opacity
            </summary>
            <value>
            The pointer opacity
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearPointer.Shape">
            <summary>
            Gets or sets the pointer shape
            </summary>
            <value>
            The pointer shape
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearPointer.Size">
            <summary>
            Gets or sets the pointer size
            </summary>
            <value>
            The pointer size
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearPointer.Value">
            <summary>
            Gets or sets the pointer value
            </summary>
            <value>
            The pointer value
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeLinearPointer.Track">
            <summary>
            Gets or sets the pointer position
            </summary>
            <value>
            The pointer position
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.RadialGauge.#ctor(System.Web.Mvc.ViewContext,Kendo.Mvc.Infrastructure.IJavaScriptInitializer,Kendo.Mvc.IUrlGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.LinearGauge" /> class.
            </summary>
            <param name="viewContext">The view context.</param>
            <param name="initializer">The javascript initializer.</param>
            <param name="urlGenerator">The URL Generator.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.RadialGauge.Scale">
            <summary>
            Configuration for the default scale (if any)
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.RadialGauge.Pointer">
            <summary>
            Configuration for the default pointer (if any)
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.LinearGauge.#ctor(System.Web.Mvc.ViewContext,Kendo.Mvc.Infrastructure.IJavaScriptInitializer,Kendo.Mvc.IUrlGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.LinearGauge" /> class.
            </summary>
            <param name="viewContext">The view context.</param>
            <param name="initializer">The javascript initializer.</param>
            <param name="urlGenerator">The URL Generator.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.LinearGauge.Scale">
            <summary>
            Configuration for the default scale (if any)
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.LinearGauge.Pointer">
            <summary>
            Configuration for the default pointer (if any)
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeArea.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeArea" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeArea.Background">
            <summary>
            Gets or sets the gauge area background.
            </summary>
            <value>
            The gauge area background.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeArea.Border">
            <summary>
            Gets or sets the gauge area border.
            </summary>
            <value>
            The gauge area border.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeArea.Margin">
            <summary>
            Gets or sets the gauge area margin.
            </summary>
            <value>
            The gauge area margin.
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeArea.CreateSerializer">
            <summary>
            Creates a serializer
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.GaugeHtmlBuilder.#ctor(Kendo.Mvc.UI.Gauge)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Html.GaugeHtmlBuilder" /> class.
            </summary>
            <param name="component">The Gauge component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.GaugeHtmlBuilder.CreateGauge">
            <summary>
            Creates the chart top-level div.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.GaugeHtmlBuilder.BuildCore">
            <summary>
            Builds the Gauge component markup.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Gauge.#ctor(System.Web.Mvc.ViewContext,Kendo.Mvc.Infrastructure.IJavaScriptInitializer,Kendo.Mvc.IUrlGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Gauge" /> class.
            </summary>
            <param name="viewContext">The view context.</param>
            <param name="initializer">The javascript initializer.</param>
            <param name="urlGenerator">The URL Generator.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Gauge.UrlGenerator">
            <summary>
            Gets or sets the URL generator.
            </summary>
            <value>The URL generator.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.Gauge.GaugeArea">
            <summary>
            Gets or sets the Gauge area.
            </summary>
            <value>
            The Gauge area.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Gauge.Transitions">
            <summary>
            Gets or sets the Gauge transitions.
            </summary>
            <value>
            The Gauge Transitions.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Gauge.Theme">
            <summary>
            Gets or sets the Gauge theme.
            </summary>
            <value>
            The Gauge theme.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.IGauge.UrlGenerator">
            <summary>
            The component UrlGenerator
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGauge.ViewContext">
            <summary>
            The component view context
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.GaugeScaleTicks" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder.#ctor(Kendo.Mvc.UI.GaugeScaleTicks)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder" /> class.
            </summary>
            <param name="gaugeTicks">The gauge scale ticks.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder.Color(System.String)">
            <summary>
            Sets the ticks color
            </summary>
            <param name="color">The ticks color (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale.MajorTicks(ticks =&gt; ticks.Color("#f00")))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder.Width(System.Int32)">
            <summary>
            Sets the ticks width
            </summary>
            <param name="width">The ticks width.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale.MajorTicks(ticks =&gt; ticks.Width(2)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder.Size(System.Int32)">
            <summary>
            Sets the ticks size
            </summary>
            <param name="size">The ticks size.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale.MajorTicks(ticks =&gt; ticks.Size(2)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder.DashType(Kendo.Mvc.UI.ChartDashType)">
            <summary>
            Sets the ticks dashType
            </summary>
            <param name="dashType">The ticks dashType.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale.MajorTicks(ticks =&gt; ticks.DashType(ChartDashType.Dot)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GaugeScaleTicksBuilder.Visible(System.Boolean)">
            <summary>
            Sets the ticks visibility
            </summary>
            <param name="visible">The ticks visibility.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().LinearGauge()
            .Name("linearGauge")
            .Scale(scale =&gt; scale.MajorTicks(ticks =&gt; ticks.Visible(false)))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeScaleLabelsBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeScaleLabelsBase" /> class.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeScaleTicks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeScaleTicks" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleTicks.Size">
            <summary>
            Gets or sets the ticks size.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleTicks.Width">
            <summary>
            Gets or sets the ticks width.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleTicks.Color">
            <summary>
            Gets or sets the ticks color.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleTicks.DashType">
            <summary>
            Gets or sets the ticks dash type.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleTicks.Visible">
            <summary>
            Gets or sets the ticks visibility.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeScaleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeScaleBase" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleBase.MajorTicks">
            <summary>
            The scale major ticks configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleBase.MinorTicks">
            <summary>
            The scale minor ticks configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleBase.Ranges">
            <summary>
            The scale ranges.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleBase.MajorUnit">
            <summary>
            The scale major unit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleBase.MinorUnit">
            <summary>
            The scale minor unit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleBase.Min">
            <summary>
            The scale min value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleBase.Max">
            <summary>
            The scale max value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleBase.Reverse">
            <summary>
            The scale reverse.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GaugeScaleBase.Line">
            <summary>
            The line reverse.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.GaugeScaleRanges.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GaugeScaleRanges" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGaugeScale.Ranges">
            <summary>
            The scale ranges.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGaugeScale.MajorUnit">
            <summary>
            The scale major unit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGaugeScale.MinorUnit">
            <summary>
            The scale major unit.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGaugeScale.MajorTicks">
            <summary>
            The scale major ticks configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGaugeScale.MinorTicks">
            <summary>
            The scale minor ticks configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGaugeScale.Min">
            <summary>
            The scale min value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGaugeScale.Max">
            <summary>
            The scale max value.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGaugeScale.Reverse">
            <summary>
            The scale reverse.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IGaugeScale.Line">
            <summary>
            The line.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridBoundColumnFilterableBuilder">
            <summary>
            Defines the fluent interface for configuring bound columns filterable options
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnFilterableBuilder.#ctor(Kendo.Mvc.UI.GridBoundColumnFilterableSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GridBoundColumnFilterableBuilder" /> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnFilterableBuilder.UI(Kendo.Mvc.UI.GridFilterUIRole)">
            <summary>
            Sets the type of the input element of the filter menu
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderDate).Filterable(filterable =&gt; filterable.UI(GridFilterUIRole.DatePicker))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnFilterableBuilder.UI(System.Func{System.Object,System.Object})">
            <summary>
            Sets JavaScript function which to return additional parameters which to be sent the server.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderDate).Filterable(filterable =&gt; filterable.UI(GridFilterUIRole.DatePicker))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnFilterableBuilder.UI(System.String)">
            <summary>
            Sets JavaScript function which to return additional parameters which to be sent the server.
            </summary>
            <param name="handler">JavaScript function name</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ColumnMenuMessagesBuilder">
            <summary>
            Defines the fluent interface for configuring the column menu messages.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColumnMenuMessagesBuilder.Filter(System.String)">
            <summary>
            Sets the text displayed for filter menu option.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColumnMenuMessagesBuilder.Columns(System.String)">
            <summary>
            Sets the text displayed for columns menu option.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColumnMenuMessagesBuilder.SortAscending(System.String)">
            <summary>
            Sets the text displayed for sort ascending menu option.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ColumnMenuMessagesBuilder.SortDescending(System.String)">
            <summary>
            Sets the text displayed for sort descending menu option.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridColumnMenuSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:Grid{T}.ColumnMenu" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnMenuSettingsBuilder.#ctor(Kendo.Mvc.UI.GridColumnMenuSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GridColumnMenuSettings" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnMenuSettingsBuilder.Enabled(System.Boolean)">
            <summary>
            Enables/disables header column menu.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .ColumnMenu(menu =&gt; menu.Enabled((bool)ViewData["enableColumnMenu"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable column menu based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnMenuSettingsBuilder.Sortable(System.Boolean)">
            <summary>
            Enables/disables sort section in header column menu.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .ColumnMenu(menu =&gt; menu.Sortable((bool)ViewData["enableSort"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable/disable sort section in column menu based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnMenuSettingsBuilder.Filterable(System.Boolean)">
            <summary>
            Enables/disables filter section in header column menu.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .ColumnMenu(menu =&gt; menu.Filterable((bool)ViewData["enableFilter"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable/disable filter section in column menu based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnMenuSettingsBuilder.Columns(System.Boolean)">
            <summary>
            Enables/disables columns section in header column menu.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .ColumnMenu(menu =&gt; menu.Columns((bool)ViewData["enableColumns"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable/disable columns section in column menu based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnMenuSettingsBuilder.Messages(System.Action{Kendo.Mvc.UI.Fluent.ColumnMenuMessagesBuilder})">
            <summary>
            Enables you to define custom messages in grid column menu.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .ColumnMenu(menu =&gt; menu.Messages(msg =&gt; msg.Filter("Custom filter message"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.EnumOperatorsBuilder">
            <summary>
            Defines the fluent interface for configuring the Filter menu <see cref="T:Kendo.Mvc.UI.EnumOperators" /> DropDownList options.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.EnumOperatorsBuilder.Clear">
            <summary>
            Clears the options. Supported only in conjunction with custom messages.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.EnumOperatorsBuilder.IsEqualTo(System.String)">
            <summary>
            Sets the text for IsEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.EnumOperatorsBuilder.IsNotEqualTo(System.String)">
            <summary>
            Sets the text for IsNotEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DateOperatorsBuilder">
            <summary>
            Defines the fluent interface for configuring the Filter menu <see cref="T:Kendo.Mvc.UI.DateOperators" /> DropDownList options.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateOperatorsBuilder.Clear">
            <summary>
            Clears the options.
            </summary>
            <remarks>Supported only in conjunction with custom messages.</remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateOperatorsBuilder.IsEqualTo(System.String)">
            <summary>
            Sets the text for IsEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateOperatorsBuilder.IsNotEqualTo(System.String)">
            <summary>
            Sets the text for IsNotEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateOperatorsBuilder.IsGreaterThanOrEqualTo(System.String)">
            <summary>
            Sets the text for IsGreaterThanOrEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateOperatorsBuilder.IsGreaterThan(System.String)">
            <summary>
            Sets the text for IsGreaterThan operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateOperatorsBuilder.IsLessThanOrEqualTo(System.String)">
            <summary>
            Sets the text for IsLessThanOrEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DateOperatorsBuilder.IsLessThan(System.String)">
            <summary>
            Sets the text for IsLessThan operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.NumberOperatorsBuilder">
            <summary>
            Defines the fluent interface for configuring the Filter menu <see cref="T:Kendo.Mvc.UI.NumberOperators" /> DropDownList options.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumberOperatorsBuilder.Clear">
            <summary>
            Clears the options.
            </summary>
            <remarks>Supported only in conjunction with custom messages.</remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumberOperatorsBuilder.IsEqualTo(System.String)">
            <summary>
            Sets the text for IsEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumberOperatorsBuilder.IsNotEqualTo(System.String)">
            <summary>
            Sets the text for IsNotEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumberOperatorsBuilder.IsGreaterThanOrEqualTo(System.String)">
            <summary>
            Sets the text for IsGreaterThanOrEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumberOperatorsBuilder.IsGreaterThan(System.String)">
            <summary>
            Sets the text for IsGreaterThan operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumberOperatorsBuilder.IsLessThanOrEqualTo(System.String)">
            <summary>
            Sets the text for IsLessThanOrEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumberOperatorsBuilder.IsLessThan(System.String)">
            <summary>
            Sets the text for IsLessThan operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.FilterableMessagesBuilder">
            <summary>
            Defines the fluent interface for configuring the Filter menu options.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableMessagesBuilder.Info(System.String)">
            <summary>
            Sets the info part of the filter menu
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableMessagesBuilder.And(System.String)">
            <summary>
            Sets the text for And option.
            </summary>
            <param name="message">The text</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableMessagesBuilder.Or(System.String)">
            <summary>
            Sets the text for Or option.
            </summary>
            <param name="message">The text</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableMessagesBuilder.IsTrue(System.String)">
            <summary>
            Sets the text for Boolean IsTrue option value.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableMessagesBuilder.IsFalse(System.String)">
            <summary>
            Sets the text for Boolean IsFalse option value.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableMessagesBuilder.Filter(System.String)">
            <summary>
            Sets the text for Filter button.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableMessagesBuilder.SelectValue(System.String)">
            <summary>
            Sets the text for SelectValue option.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.FilterableOperatorsBuilder">
            <summary>
            Defines the fluent interface for configuring the Filter menu <see cref="T:Kendo.Mvc.UI.FilterableOperators" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableOperatorsBuilder.ForString(System.Action{Kendo.Mvc.UI.Fluent.StringOperatorsBuilder})">
            <summary>
            Configures messages for string operators.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableOperatorsBuilder.ForNumber(System.Action{Kendo.Mvc.UI.Fluent.NumberOperatorsBuilder})">
            <summary>
            Configures messages for number operators.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableOperatorsBuilder.ForDate(System.Action{Kendo.Mvc.UI.Fluent.DateOperatorsBuilder})">
            <summary>
            Configures messages for date operators.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.FilterableOperatorsBuilder.ForEnums(System.Action{Kendo.Mvc.UI.Fluent.EnumOperatorsBuilder})">
            <summary>
            Configures messages for enums operators.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.StringOperatorsBuilder">
            <summary>
            Defines the fluent interface for configuring the Filter menu <see cref="T:Kendo.Mvc.UI.StringOperators" /> DropDownList options.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StringOperatorsBuilder.Clear">
            <summary>
            Clears the options.
            </summary>
            <remarks>Supported only in conjunction with custom messages.</remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StringOperatorsBuilder.IsEqualTo(System.String)">
            <summary>
            Sets the text for IsEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StringOperatorsBuilder.IsNotEqualTo(System.String)">
            <summary>
            Sets the text for IsNotEqualTo operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StringOperatorsBuilder.StartsWith(System.String)">
            <summary>
            Sets the text for StartsWith operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StringOperatorsBuilder.EndsWith(System.String)">
            <summary>
            Sets the text for EndsWith operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StringOperatorsBuilder.Contains(System.String)">
            <summary>
            Sets the text for Contains operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StringOperatorsBuilder.DoesNotContain(System.String)">
            <summary>
            Sets the text for DoesNotContain operator filter menu item.
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridNavigatableSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:Grid{T}.Navigatable" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridNavigatableSettingsBuilder.#ctor(Kendo.Mvc.UI.GridNavigatableSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GridNavigatableSettingsBuilder" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridNavigatableSettingsBuilder.Enabled(System.Boolean)">
            <summary>
            Enables or disables keyboard navigation.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Navigatable(setting =&gt; setting.Enabled((bool)ViewData["enableKeyBoardNavigation"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable keyboard navigation based on certain conditions.
            </remarks>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridToolBarSaveCommandBuilder`1">
            <summary>
            Defines the fluent interface for configuring toolbar save command.
            </summary>
            <typeparam name="T">The type of the model</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarSaveCommandBuilder`1.SaveText(System.String)">
            <summary>
            Sets the text displayed by the "save changes" button. If not set a default value is used.
            </summary>
            <param name="text">The text which should be displayed</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarSaveCommandBuilder`1.CancelText(System.String)">
            <summary>
            Sets the text displayed by the "cancel changes" button. If not set a default value is used.
            </summary>
            <param name="text">The text which should be displayed</param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GroupingMessagesBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.GridGroupableSettings" /> messages.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GroupingMessagesBuilder.Empty(System.String)">
            <summary>
            Sets the text of the group panel when grid is not grouped.
            </summary>
            <param name="message">The message</param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.GridAggregateResult">
            <summary>
            Represents an aggregate result.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceAggregatesFactory">
            <summary>
            Defines the fluent interface for configuring aggregates for a given field.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceAggregatesFactory.Min">
            <summary>
            Applies the Min aggregate function.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceAggregatesFactory.Max">
            <summary>
            Applies the Max aggregate function.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceAggregatesFactory.Count">
            <summary>
            Applies the Count aggregate function.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceAggregatesFactory.Average">
            <summary>
            Applies the Average aggregate function.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceAggregatesFactory.Sum">
            <summary>
            Applies the Sum aggregate function.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.GridGroupAggregateResult">
            <summary>
            Represents the aggregate result when grouping is enabled
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.GridSelectionMode">
            <summary>
            Represents the selection modes supported by Kendo UI Grid for ASP.NET MVC
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.GridSelectionType">
            <summary>
            Represents the selection types supported by Kendo UI Grid for ASP.NET MVC
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectEventBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.MultiSelectEventBuilder" /> class.
            </summary>
            <param name="Events">The client events.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.MultiSelectBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.MultiSelect" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.#ctor(Kendo.Mvc.UI.MultiSelect)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.MultiSelectBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.AutoBind(System.Boolean)">
            <summary>
            Controls whether to bind the widget to the DataSource on initialization.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .AutoBind(false)
            %&gt;
            </code>
            </example>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.BindTo(System.Collections.Generic.IEnumerable{Kendo.Mvc.UI.DropDownListItem})-->
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.BindTo(System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})-->
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.DataValueField(System.String)">
            <summary>
            Sets the field of the data item that provides the value content of the list items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .DataTextField("Text")
            .DataValueField("Value")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.MultiSelectEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .Events(events =&gt;
            events.Change("change")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.Filter(System.String)">
            <summary>
            Use it to enable filtering of items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .Filter("startswith");
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.Filter(Kendo.Mvc.UI.FilterType)">
            <summary>
            Use it to enable filtering of items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .Filter(FilterType.Contains);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.DropDownListItemFactory})">
            <summary>
            Defines the items in the MultiSelect
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().MultiSelect()
            .Name("MultiSelect")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.HighlightFirst(System.Boolean)">
            <summary>
            Use it to enable highlighting of first matched item.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .HighlightFirst(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.MinLength(System.Int32)">
            <summary>
            Specifies the minimum number of characters that should be typed before the widget queries the dataSource.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .MinLength(3)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.Placeholder(System.String)">
            <summary>
            A string that appears in the textbox when it has no value.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .Placeholder("Select country...")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.ItemTemplate(System.String)">
            <summary>
            Template to be used for rendering the items in the list.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .ItemTemplate("#= data #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.ItemTemplateId(System.String)">
            <summary>
            TemplateId to be used for rendering the items in the list.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .ItemTemplateId("widgetTemplateId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.TagTemplate(System.String)">
            <summary>
            Template to be used for rendering the tags of the selected items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .TagTemplate("#= data #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.TagTemplateId(System.String)">
            <summary>
            TemplateId to be used for rendering the tags of the selected items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .TagTemplateId("widgetTemplateId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MultiSelectBuilder.Value(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the value of the widget.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .Value(new string[] { "1" })
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Html.GridLinkButtonBuilder">
            <summary>
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.IGridCustomGroupingWrapper">
            <exclude />
            <excludetoc />
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridReorderingSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:Grid{T}.Reorderable" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridReorderingSettingsBuilder.Columns(System.Boolean)">
            <summary>
            Enables or disables column reordering.
            </summary>
            <param name="value">True to enable column reordering, otherwise false</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceFilterComparisonDescriptorBuilderBase`2">
            <summary>
            Defines the fluent interface for configuring filter operator.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterComparisonDescriptorBuilderBase`2.IsLessThan(`0)">
            <summary>
            Includes only values which are less then the given value.
            </summary>
            <param name="value">The value which the result should be less then</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterComparisonDescriptorBuilderBase`2.IsLessThanOrEqualTo(`0)">
            <summary>
            Includes only values which are less or equal to the given value.
            </summary>
            <param name="value">The value which the result should be less or equal to</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterComparisonDescriptorBuilderBase`2.IsGreaterThanOrEqualTo(`0)">
            <summary>
            Includes only values which are greater then or equal to the given value.
            </summary>
            <param name="value">The value which the result should be greater then or equal to</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterComparisonDescriptorBuilderBase`2.IsGreaterThan(`0)">
            <summary>
            Includes only values which are greater then the given value.
            </summary>
            <param name="value">The value which the result should be greater then</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceFilterDescriptorFactory`1">
            <summary>
            Defines the fluent interface for configuring filter.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterDescriptorFactory`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Specifies the member on which the filter should be applied.
            </summary>
            <param name="expression">Member access expression which describes the member</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterDescriptorFactory`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Boolean}}})">
            <summary>
            Specifies the member on which the filter should be applied.
            </summary>
            <param name="expression">Member access expression which describes the member</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterDescriptorFactory`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Specifies the member on which the filter should be applied.
            </summary>
            <typeparam name="TValue">Member type</typeparam>
            <param name="expression">Member access expression which describes the member</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterDescriptorFactory`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Specifies the member on which the filter should be applied.
            </summary>
            <param name="expression">Member access expression which describes the member</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceFilterStringDescriptorBuilder">
            <summary>
            Defines the fluent interface for configuring filter string operator.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterStringDescriptorBuilder.StartsWith(System.String)">
            <summary>
            Includes only values which are starting with the given string.
            </summary>
            <param name="value">The string with which the result should start</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterStringDescriptorBuilder.EndsWith(System.String)">
            <summary>
            Includes only values which end with the given string.
            </summary>
            <param name="value">The string with which the result should end</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterStringDescriptorBuilder.Contains(System.String)">
            <summary>
            Includes only values which contain the given string.
            </summary>
            <param name="value">The string which the result should contain</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceFilterStringDescriptorBuilder.DoesNotContain(System.String)">
            <summary>
            Includes only values which does not contain the given string.
            </summary>
            <param name="value">The string which the result should not contain</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridEditingSettingsBuilder`1">
            <summary>
            Defines the fluent interface for configuring grid editing.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEditingSettingsBuilder`1.#ctor(Kendo.Mvc.UI.GridEditableSettings{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:GridEditingSettingsBuilder{T}" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEditingSettingsBuilder`1.Enabled(System.Boolean)">
            <summary>
            Enables or disables grid editing.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid&lt;Order&gt;()
            .Name("Orders")
            .Editable(settings =&gt; settings.Enabled(true))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable grid editing on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEditingSettingsBuilder`1.TemplateName(System.String)">
            <summary>
            Specify an editor template which to be used for InForm or PopUp modes
            </summary>
            <param name="templateName">name of the editor template</param>
            <remarks>This settings is applicable only when Mode is
            <see cref="F:Kendo.Mvc.UI.GridEditMode.PopUp" /></remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEditingSettingsBuilder`1.AdditionalViewData(System.Object)">
            <summary>
            Provides additional view data in the editor template.
            </summary>
            <remarks>
            The additional view data will be provided if the editing mode is set to in-form or popup. For other editing modes
            use <see cref="!:GridBoundColumnBuilder{T}.EditorViewData" /></remarks>
            <param name="additionalViewData">An anonymous object which contains the additional data</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Editable(editing =&gt; editing.AdditionalViewData(new { customers = Model.Customers }))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEditingSettingsBuilder`1.DisplayDeleteConfirmation(System.Boolean)">
            <summary>
            Enables or disables delete confirmation.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid&lt;Order&gt;()
            .Name("Orders")
            .Editable(settings =&gt; settings.DisplayDeleteConfirmation(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEditingSettingsBuilder`1.CreateAt(Kendo.Mvc.UI.GridInsertRowPosition)">
            <summary>
            Sets insert row position.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid&lt;Order&gt;()
            .Name("Orders")
            .Editable(settings =&gt; settings.CreateAt(GridInsertRowPosition.Bottom))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridResizingSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:Grid{T}.Resizable" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridResizingSettingsBuilder.Columns(System.Boolean)">
            <summary>
            Enables or disables column resizing.
            </summary>
            <param name="value">True to enable column resizing, otherwise false</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridTemplateColumnBuilder`1">
            <summary>
            Defines the fluent interface for configuring template columns
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.GridEditMode">
            <summary>
            Represents the editing modes supported by Kendo UI Grid for ASP.NET MVC
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1">
            <summary>
            Defines the fluent interface for configuring toolbar custom command.
            </summary>
            <typeparam name="T">The type of the model</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1.Route(System.String)">
            <summary>
            Sets command route.
            </summary>
            <param name="routeName">The route name</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1.Route(System.String,System.Object)">
            <summary>
            Sets command route and route values.
            </summary>
            <param name="routeName">The route name</param>
            <param name="routeValues">The route values</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1.Route(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets command route and route values.
            </summary>
            <param name="routeName">The route name</param>
            <param name="routeValues">The route values</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1.Action(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets command action.
            </summary>
            <param name="routeValues">The route values</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1.Action(System.String,System.String)">
            <summary>
            Sets command action and controller.
            </summary>
            <param name="actionName">The action name</param>
            <param name="controllerName">The controller name</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1.Action(System.String,System.String,System.Object)">
            <summary>
            Sets command action and controller.
            </summary>
            <param name="actionName">The action name</param>
            <param name="controllerName">The controller name</param>
            <param name="routeValues">The route values</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets command action and controller.
            </summary>
            <param name="actionName">The action name</param>
            <param name="controllerName">The controller name</param>
            <param name="routeValues">The route values</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1.Url(System.String)">
            <summary>
            Sets command absolute URL.
            </summary>
            <param name="value">The URL</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCustomCommandBuilder`1.Name(System.String)">
            <summary>
            Sets the command name.
            </summary>
            <param name="name">The name of the command</param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory`1">
            <summary>
            Defines the fluent interface for configuring group.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Specifies the member by which the data should be grouped.
            </summary>
            <param name="expression">Member access expression which describes the member</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory`1.Add``1(System.String)">
            <summary>
            Specifies the member by which the data should be grouped.
            </summary>
            <typeparam name="TValue">Member type</typeparam>
            <param name="memberName">Member name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory`1.Add(System.String,System.Type)">
            <summary>
            Specifies the member by which the data should be grouped.
            </summary>
            <param name="memberName">Member name</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory`1.Add(System.String,System.Type,System.ComponentModel.ListSortDirection)">
            <summary>
            Specifies the member by which the data should be grouped.
            </summary>
            <param name="memberName">Member name</param>
            <param name="memberType">Member type</param>
            <param name="sortDirection">Sort order</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory`1.Add``1(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Specifies the member by which the data should be grouped.
            </summary>
            <typeparam name="TValue">Member type</typeparam>
            <param name="memberName">Member type</param>
            <param name="sortDirection">Sort order</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory`1.AddDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Specifies the member by which the data should be sorted in descending order and grouped.
            </summary>
            <typeparam name="TValue">Member type</typeparam>
            <param name="expression">Member access expression which describes the member</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory`1.AddDescending``1(System.String)">
            <summary>
            Specifies the member by which the data should be sorted in descending order and grouped.
            </summary>
            <typeparam name="TValue">Member type</typeparam>
            <param name="memberName">Member name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DataSourceGroupDescriptorFactory`1.AddDescending(System.String,System.Type)">
            <summary>
            Specifies the member by which the data should be sorted in descending order and grouped.
            </summary>
            <param name="memberName">Member name</param>
            /// <param name="memberType">Member type</param></member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridGroupingSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="T:Kendo.Mvc.UI.GridGroupableSettings" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridGroupingSettingsBuilder.Messages(System.Action{Kendo.Mvc.UI.Fluent.GroupingMessagesBuilder})">
            <summary>
            Configures messages.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridGroupingSettingsBuilder.Enabled(System.Boolean)">
            <summary>
            Enables or disables filtering
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridToolBarCommandBuilderBase`3">
            <summary>
            Defines the fluent interface for configuring toolbar command.
            </summary>
            <typeparam name="TModel">The type of the model</typeparam>
            <typeparam name="TCommand">The type of the command.</typeparam>
            <typeparam name="TBuilder">The type of the builder.</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCommandBuilderBase`3.HtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCommandBuilderBase`3.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridToolBarCommandFactory`1">
            <summary>
            Defines the fluent interface for configuring toolbar command.
            </summary>
            <typeparam name="T">The type of the model</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCommandFactory`1.Create">
            <summary>
            Defines a create command.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCommandFactory`1.Save">
            <summary>
            Defines a save command.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCommandFactory`1.Custom">
            <summary>
            Defines a custom command.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCommandFactory`1.Template(System.Action)">
            <summary>
            Sets toolbar template.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCommandFactory`1.Template(System.String)">
            <summary>
            Sets toolbar template.
            </summary>
            <param name="template">The template</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCommandFactory`1.Template(System.Action{Kendo.Mvc.UI.Grid{`0}})">
            <summary>
            Sets the toolbar template.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridToolBarCommandFactory`1.Template(System.Func{Kendo.Mvc.UI.Grid{`0},System.Object})">
            <summary>
            Sets the toolbar template.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Implementation.Expressions.ExpressionBuilderOptions.LiftMemberAccessToNull">
            <summary>
            Gets or sets a value indicating whether member access expression used
            by this builder should be lifted to null. The default value is true;
            </summary>
            <value>
                <c>true</c> if member access should be lifted to null; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.ExpressionFactory.LiftStringExpressionToEmpty(System.Linq.Expressions.Expression)">
            <exception cref="T:System.ArgumentException">Provided expression should have string type</exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.FilterDescriptorExpressionBuilder.CreateBodyExpression">
            <exception cref="T:System.ArgumentException">
                <c>ArgumentException</c>.</exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.FilterExpressionBuilder.CreateFilterExpression">
            <exception cref="T:System.ArgumentException">
                <c>ArgumentException</c>.</exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.AggregateFunctionExpressionBuilderBase.#ctor(System.Linq.Expressions.Expression,Kendo.Mvc.AggregateFunction)">
            <exception cref="T:System.ArgumentException">
            Provided <paramref name="enumerableExpression" />'s <see cref="P:System.Linq.Expressions.Expression.Type" /> is not <see cref="!:IEnumerable{T}" /></exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.AggregateFunctionExpressionBuilderBase.ExtractItemTypeFromEnumerableType(System.Type)">
            <exception cref="T:System.ArgumentException">Provided type is not <see cref="!:IEnumerable{T}" /></exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.EnumerableAggregateFunctionExpressionBuilder.#ctor(System.Linq.Expressions.Expression,Kendo.Mvc.EnumerableAggregateFunction)">
            <exception cref="T:System.ArgumentException">
            Provided <paramref name="enumerableExpression" />'s <see cref="P:System.Linq.Expressions.Expression.Type" /> is not <see cref="!:IEnumerable{T}" /></exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.EnumerableSelectorAggregateFunctionExpressionBuilder.#ctor(System.Linq.Expressions.Expression,Kendo.Mvc.EnumerableSelectorAggregateFunction)">
            <exception cref="T:System.ArgumentException">
            Provided <paramref name="enumerableExpression" />'s <see cref="P:System.Linq.Expressions.Expression.Type" /> is not <see cref="!:IEnumerable{T}" /></exception>
        </member>
        <member name="T:Kendo.Mvc.Infrastructure.Implementation.Expressions.CustomTypeDescriptorExtensions">
            <exclude />
            <excludeToc />
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.CustomTypeDescriptorExtensions.Property``1(System.ComponentModel.ICustomTypeDescriptor,System.String)">
            <exception cref="T:System.ArgumentException">
                <c>ArgumentException</c>.</exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.CustomTypeDescriptorPropertyAccessExpressionBuilder.#ctor(System.Type,System.Type,System.String)">
            <exception cref="T:System.ArgumentException">
                <paramref name="elementType" /> did not implement <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.MemberAccessTokenExtensions.CreateMemberAccessExpression(Kendo.Mvc.Infrastructure.Implementation.Expressions.IMemberAccessToken,System.Linq.Expressions.Expression)">
            <exception cref="T:System.ArgumentException">
            Invalid name for property or field; or indexer with the specified arguments.
            </exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.MemberAccessTokenExtensions.GetMemberInfoForType(Kendo.Mvc.Infrastructure.Implementation.Expressions.IMemberAccessToken,System.Type)">
            <exception cref="T:System.InvalidOperationException">
                <c>InvalidOperationException</c>.</exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.UnboxT`1.ValueField(System.Object)">
            <exception cref="T:System.InvalidCastException">
                <c>InvalidCastException</c>.</exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.XmlNodeExtensions.ChildElementInnerText(System.Xml.XmlNode,System.String)">
            <exception cref="T:System.ArgumentException">
            Child element with name specified by <paramref name="childName" /> does not exists.
            </exception>
        </member>
        <member name="T:Kendo.Mvc.CompositeFilterDescriptor">
            <summary>
            Represents a filtering descriptor which serves as a container for one or more child filtering descriptors.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.CompositeFilterDescriptor.LogicalOperator">
            <summary>
            Gets or sets the logical operator used for composing of <see cref="P:Kendo.Mvc.CompositeFilterDescriptor.FilterDescriptors" />.
            </summary>
            <value>The logical operator used for composition.</value>
        </member>
        <member name="P:Kendo.Mvc.CompositeFilterDescriptor.FilterDescriptors">
            <summary>
            Gets or sets the filter descriptors that will be used for composition.
            </summary>
            <value>The filter descriptors used for composition.</value>
        </member>
        <member name="M:Kendo.Mvc.CompositeFilterDescriptor.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression combining <see cref="P:Kendo.Mvc.CompositeFilterDescriptor.FilterDescriptors" />
            expressions with <see cref="P:Kendo.Mvc.CompositeFilterDescriptor.LogicalOperator" />.
            </summary>
            <param name="parameterExpression">The parameter expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="T:Kendo.Mvc.FilterCompositionLogicalOperator">
            <summary>
            Logical operator used for filter descriptor composition.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterCompositionLogicalOperator.And">
            <summary>
            Combines filters with logical AND.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterCompositionLogicalOperator.Or">
            <summary>
            Combines filters with logical OR.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Implementation.FilterDescription.IsActive">
            <summary>
            If false <see cref="M:Kendo.Mvc.Infrastructure.Implementation.FilterDescription.SatisfiesFilter(System.Object)" /> will not execute.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.FilterDescription.SatisfiesFilter(System.Object)">
            <summary>
            The method checks whether the passed parameter satisfies filter criteria.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.FilterDescription.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression that calls <see cref="M:Kendo.Mvc.Infrastructure.Implementation.FilterDescription.SatisfiesFilter(System.Object)" />.
            </summary>
            <param name="parameterExpression">The parameter expression, which parameter
            will be passed to <see cref="M:Kendo.Mvc.Infrastructure.Implementation.FilterDescription.SatisfiesFilter(System.Object)" /> method.</param>
        </member>
        <member name="T:Kendo.Mvc.FilterDescriptor">
            <summary>
            Represents declarative filtering.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.FilterDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.FilterDescriptor" /> class.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.FilterDescriptor.#ctor(System.String,Kendo.Mvc.FilterOperator,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.FilterDescriptor" /> class.
            </summary>
            <param name="member">The member.</param>
            <param name="filterOperator">The filter operator.</param>
            <param name="filterValue">The filter value.</param>
        </member>
        <member name="P:Kendo.Mvc.FilterDescriptor.Member">
            <summary>
            Gets or sets the member name which will be used for filtering.
            </summary>
            <filterValue>The member that will be used for filtering.</filterValue>
        </member>
        <member name="P:Kendo.Mvc.FilterDescriptor.MemberType">
            <summary>
            Gets or sets the type of the member that is used for filtering.
            Set this property if the member type cannot be resolved automatically.
            Such cases are: items with ICustomTypeDescriptor, XmlNode or DataRow.
            Changing this property did not raise
            </summary>
            <value>The type of the member used for filtering.</value>
        </member>
        <member name="P:Kendo.Mvc.FilterDescriptor.Operator">
            <summary>
            Gets or sets the filter operator.
            </summary>
            <filterValue>The filter operator.</filterValue>
        </member>
        <member name="P:Kendo.Mvc.FilterDescriptor.Value">
            <summary>
            Gets or sets the target filter value.
            </summary>
            <filterValue>The filter value.</filterValue>
        </member>
        <member name="M:Kendo.Mvc.FilterDescriptor.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression.
            </summary>
            <param name="parameterExpression">The parameter expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="M:Kendo.Mvc.FilterDescriptor.Equals(Kendo.Mvc.FilterDescriptor)">
            <summary>
            Determines whether the specified <paramref name="other" /> descriptor
            is equal to the current one.
            </summary>
            <param name="other">The other filter descriptor.</param>
            <returns>
            True if all members of the current descriptor are
            equal to the ones of <paramref name="other" />, otherwise false.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.FilterDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified <paramref name="obj" />
            is equal to the current descriptor.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.FilterDescriptor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current filter descriptor.
            </returns>
        </member>
        <member name="T:Kendo.Mvc.FilterDescriptorBase">
            <summary>
            Base class for all <see cref="T:Kendo.Mvc.IFilterDescriptor" /> used for
            handling the logic for property changed notifications.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.FilterDescriptorBase.CreateFilterExpression(System.Linq.Expressions.Expression)">
            <summary>
            Creates a filter expression by delegating its creation to
            <see cref="M:Kendo.Mvc.FilterDescriptorBase.CreateFilterExpression(System.Linq.Expressions.Expression)" />, if
            <paramref name="instance" /> is <see cref="T:System.Linq.Expressions.ParameterExpression" />, otherwise throws <see cref="T:System.ArgumentException" /></summary>
            <param name="instance">The instance expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
            <exception cref="T:System.ArgumentException">Parameter should be of type <see cref="T:System.Linq.Expressions.ParameterExpression" /></exception>
        </member>
        <member name="M:Kendo.Mvc.FilterDescriptorBase.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression used for collection filtering.
            </summary>
            <param name="parameterExpression">The parameter expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="T:Kendo.Mvc.Infrastructure.Implementation.FilterDescriptorCollection">
            <summary>
            Represents collection of <see cref="T:Kendo.Mvc.IFilterDescriptor" />.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.FilterOperator">
            <summary>
            Operator used in <see cref="T:Kendo.Mvc.FilterDescriptor" /></summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.IsLessThan">
            <summary>
            Left operand must be smaller than the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.IsLessThanOrEqualTo">
            <summary>
            Left operand must be smaller than or equal to the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.IsEqualTo">
            <summary>
            Left operand must be equal to the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.IsNotEqualTo">
            <summary>
            Left operand must be different from the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.IsGreaterThanOrEqualTo">
            <summary>
            Left operand must be larger than the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.IsGreaterThan">
            <summary>
            Left operand must be larger than or equal to the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.StartsWith">
            <summary>
            Left operand must start with the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.EndsWith">
            <summary>
            Left operand must end with the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.Contains">
            <summary>
            Left operand must contain the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.IsContainedIn">
            <summary>
            Left operand must be contained in the right one.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.FilterOperator.DoesNotContain">
            <summary>
            Left operand must not contain the right one.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.Expressions.FilterOperatorExtensions.CreateExpression(Kendo.Mvc.FilterOperator,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean)">
            <exception cref="T:System.InvalidOperationException">
                <c>InvalidOperationException</c>.</exception>
        </member>
        <member name="T:Kendo.Mvc.IFilterDescriptor">
            <summary>
            Represents a filtering abstraction that knows how to create predicate filtering expression.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.IFilterDescriptor.CreateFilterExpression(System.Linq.Expressions.Expression)">
            <summary>
            Creates a predicate filter expression used for collection filtering.
            </summary>
            <param name="instance">The instance expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ListViewEditingSettingsBuilder`1">
            <summary>
            Defines the fluent interface for configuring ListView editing.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewEditingSettingsBuilder`1.#ctor(Kendo.Mvc.UI.ListViewEditingSettings{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ListViewEditingSettingsBuilder{T}" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewEditingSettingsBuilder`1.TemplateName(System.String)">
            <summary>
            Specify an editor template which to be used.
            </summary>
            <param name="templateName">name of the editor template</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ListViewEventBuilder">
            <summary>
            Defines the fluent API for configuring the Kendo ListView for ASP.NET MVC events.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ListViewSelectionSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:ListView{T}.Selectable" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewSelectionSettingsBuilder.Enabled(System.Boolean)">
            <summary>
            Enables or disables selection.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView(Model)
            .Name("ListView")
            .Selectable(selection =&gt; selection.Enabled((bool)ViewData["enableSelection"]))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewSelectionSettingsBuilder.Mode(Kendo.Mvc.UI.ListViewSelectionMode)">
            <summary>
            Specifies whether multiple or single selection is allowed.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView(Model)
            .Name("ListView")
            .Selectable(selection =&gt; selection.Mode((bool)ViewData["selectionMode"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Mode method is useful to switch between different selection modes.
            </remarks>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ListViewBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="!:ListView{T}" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.#ctor(Kendo.Mvc.UI.ListView{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ListView{T}" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.BindTo(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Binds the ListView to a list of objects
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView&lt;Order&gt;()
            .Name("Orders")
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"]);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.BindTo(System.Collections.IEnumerable)">
            <summary>
            Binds the ListView to a list of objects
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView&lt;Order&gt;()
            .Name("Orders")
            .BindTo((IEnumerable)ViewData["Orders"]);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.ClientTemplateId(System.String)">
            <summary>
            Specifies ListView item template.
            </summary>
            <param name="templateId">The Id of the element which contains the template.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView&lt;Order&gt;()
            .Name("Orders")
            .ClientTemplateId("listViewTemplate");
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.Pageable">
            <summary>
            Allows paging of the data.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView()
            .Name("ListView")
            .Ajax(ajax =&gt; ajax.Action("Orders", "ListView"))
            .Pageable();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.Pageable(System.Action{Kendo.Mvc.UI.Fluent.PageableBuilder})">
            <summary>
            Allows paging of the data.
            </summary>
            <param name="pagerAction">Use builder to define paging settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView()
            .Name("Grid")
            .Ajax(ajax =&gt; ajax.Action("Orders", "ListView"))
            .Pageable(paging =&gt; paging.Enabled(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.Navigatable">
            <summary>
            Enables keyboard navigation.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView()
            .Name("ListView")
            .Ajax(ajax =&gt; ajax.Action("Orders", "ListView"))
            .Navigatable();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.Selectable">
            <summary>
            Enables single item selection.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView()
            .Name("ListView")
            .Selectable()
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.Selectable(System.Action{Kendo.Mvc.UI.Fluent.ListViewSelectionSettingsBuilder})">
            <summary>
            Enables item selection.
            </summary>
            <param name="selectionAction">Use builder to define the selection mode.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView()
            .Name("ListView")
            .Selectable(selection =&gt; {
            selection.Enabled(true);
            selection.Mode(ListViewSelectionMode.Multiple);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.AutoBind(System.Boolean)">
            <summary>
            Specifies if the ListView should be automatically bound on initial load.
            This is only possible if AJAX binding is used, and widget is not initialy populated on the server.
            </summary>
            <param name="value">If true ListView will be automatically data bound, otherwise false</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.TagName(System.String)">
            <summary>
            Specifies ListView wrapper element tag name.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView()
            .Name("ListView")
            .TagName("div")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.Editable(System.Action{Kendo.Mvc.UI.Fluent.ListViewEditingSettingsBuilder{`0}})">
            <summary>
            Configures the ListView editing settings.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView()
            .Name("ListView")
            .Editable(settings =&gt; settings.Enabled(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.Editable">
            <summary>
            Enables ListView editing.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView()
            .Name("ListView")
            .Editable()
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ListViewBuilder`1.Events(System.Action{Kendo.Mvc.UI.Fluent.ListViewEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="configurator">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView()
            .Name("ListView")
            .Events(events =&gt; events
            .DataBound("onDataBound")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.ListViewSelectionMode">
            <summary>
            Represents the selection modes supported by Kendo UI ListView for ASP.NET MVC
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ListViewHtmlBuilder`1.#ctor(Kendo.Mvc.UI.ListView{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ListViewHtmlBuilder{T}" /> class.
            </summary>
            <param name="component">The ListView component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.ListViewHtmlBuilder`1.Build">
            <summary>
            Builds the ListView component markup.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.AggregateFunctionsGroup.AggregateFunctionsProjection">
            <summary>
            Gets or sets the aggregate functions projection for this group.
            This projection is used to generate aggregate functions results for this group.
            </summary>
            <value>The aggregate functions projection.</value>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.AggregateFunctionsGroup.GetAggregateResults(System.Collections.Generic.IEnumerable{Kendo.Mvc.AggregateFunction})">
            <summary>
            Gets the aggregate results generated for the given aggregate functions.
            </summary>
            <value>The aggregate results for the provided aggregate functions.</value>
            <exception cref="T:System.ArgumentNullException">
                <c>functions</c> is null.</exception>
        </member>
        <member name="P:Kendo.Mvc.AggregateFunction.Caption">
            <summary>
            Gets or sets the informative message to display as an illustration of the aggregate function.
            </summary>
            <value>The caption to display as an illustration of the aggregate function.</value>
        </member>
        <member name="P:Kendo.Mvc.AggregateFunction.SourceField">
            <summary>
            Gets or sets the name of the field, of the item from the set of items, which value is used as the argument of the aggregate function.
            </summary>
            <value>The name of the field to get the argument value from.</value>
        </member>
        <member name="P:Kendo.Mvc.AggregateFunction.FunctionName">
            <summary>
            Gets or sets the name of the aggregate function, which appears as a property of the group record on which records the function works.
            </summary>
            <value>The name of the function as visible from the group record.</value>
        </member>
        <member name="P:Kendo.Mvc.AggregateFunction.ResultFormatString">
            <summary>
            Gets or sets a string that is used to format the result value.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="M:Kendo.Mvc.AggregateFunction.CreateAggregateExpression(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Creates the aggregate expression that is used for constructing expression
            tree that will calculate the aggregate result.
            </summary>
            <param name="enumerableExpression">The grouping expression.</param>
            <param name="liftMemberAccessToNull">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.AggregateFunction.GenerateFunctionName">
            <summary>
            Generates default name for this function using this type's name.
            </summary>
            <returns>
            Function name generated with the following pattern:
            {<see cref="M:System.Object.GetType" />.<see cref="P:System.Reflection.MemberInfo.Name" />}_{<see cref="M:System.Object.GetHashCode" />}
            </returns>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Implementation.AggregateFunctionCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Kendo.Mvc.AggregateFunction" /> with the specified function name.
            </summary>
            <value>
            First <see cref="T:Kendo.Mvc.AggregateFunction" /> with the specified function name
            if any, otherwise null.
            </value>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.AggregateResult.#ctor(System.Object,System.Int32,Kendo.Mvc.AggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.Infrastructure.AggregateResult" /> class.
            </summary>
            <param name="value">The value of the result.</param>
            <param name="count">The number of arguments used for the calculation of the result.</param>
            <param name="function">Function that generated the result.</param>
            <exception cref="T:System.ArgumentNullException">
                <c>function</c> is null.</exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.AggregateResult.#ctor(Kendo.Mvc.AggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.Infrastructure.AggregateResult" /> class.
            </summary>
            <param name="function">
                <see cref="T:Kendo.Mvc.AggregateFunction" /> that generated the result.</param>
            <exception cref="T:System.ArgumentNullException">
                <c>function</c> is null.</exception>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.AggregateResult.#ctor(System.Object,Kendo.Mvc.AggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.Infrastructure.AggregateResult" /> class.
            </summary>
            <param name="value">The value of the result.</param>
            <param name="function">
                <see cref="T:Kendo.Mvc.AggregateFunction" /> that generated the result.</param>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.AggregateResult.Value">
            <summary>
            Gets or sets the value of the result.
            </summary>
            <value>The value of the result.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.AggregateResult.FormattedValue">
            <summary>
            Gets the formatted value of the result.
            </summary>
            <value>The formatted value of the result.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.AggregateResult.ItemCount">
            <summary>
            Gets or sets the number of arguments used for the calulation of the result.
            </summary>
            <value>The number of arguments used for the calulation of the result.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.AggregateResult.Caption">
            <summary>
            Gets or sets the text which serves as a caption for the result in a user interface..
            </summary>
            <value>The text which serves as a caption for the result in a user interface.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.AggregateResult.FunctionName">
            <summary>
            Gets the name of the function.
            </summary>
            <value>The name of the function.</value>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.AggregateResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.AggregateResultCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:Kendo.Mvc.Infrastructure.AggregateResult" /> which
            <see cref="P:Kendo.Mvc.Infrastructure.AggregateResult.FunctionName" /> is equal to <paramref name="functionName" />.
            </summary>
            <value>
            The <see cref="T:Kendo.Mvc.Infrastructure.AggregateResult" /> for the specified function if any, otherwise null.
            </value>
        </member>
        <member name="M:Kendo.Mvc.AverageFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.AverageFunction" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.AverageFunction.AggregateMethodName">
            <summary>
            Gets the the Average method name.
            </summary>
            <value>
                <c>Average</c>.</value>
        </member>
        <member name="M:Kendo.Mvc.CountFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.CountFunction" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.CountFunction.AggregateMethodName">
            <summary>
            Gets the the Count method name.
            </summary>
            <value>
                <c>Count</c>.</value>
        </member>
        <member name="M:Kendo.Mvc.EnumerableAggregateFunction.CreateAggregateExpression(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Creates the aggregate expression using <see cref="T:Kendo.Mvc.Infrastructure.Implementation.Expressions.EnumerableAggregateFunctionExpressionBuilder" />.
            </summary>
            <param name="enumerableExpression">The grouping expression.</param>
            <param name="liftMemberAccessToNull">
            </param>
            <returns>
            </returns>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Implementation.EnumerableAggregateFunctionBase.ExtensionMethodsType">
            <summary>
            Gets the type of the extension methods that holds the extension methods for
            aggregation. For example <see cref="T:System.Linq.Enumerable" /> or <see cref="T:System.Linq.Queryable" />.
            </summary>
            <value>
            The type of that holds the extension methods. The default value is <see cref="T:System.Linq.Enumerable" />.
            </value>
        </member>
        <member name="M:Kendo.Mvc.EnumerableSelectorAggregateFunction.CreateAggregateExpression(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Creates the aggregate expression using <see cref="T:Kendo.Mvc.Infrastructure.Implementation.Expressions.EnumerableSelectorAggregateFunctionExpressionBuilder" />.
            </summary>
            <param name="enumerableExpression">The grouping expression.</param>
            <param name="liftMemberAccessToNull">
            </param>
            <returns>
            </returns>
        </member>
        <member name="P:Kendo.Mvc.FirstFunction.AggregateMethodName">
            <summary>
            Gets the the First method name.
            </summary>
            <value>
                <c>First</c>.</value>
        </member>
        <member name="M:Kendo.Mvc.LastFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.LastFunction" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.LastFunction.AggregateMethodName">
            <summary>
            Gets the the Last method name.
            </summary>
            <value>
                <c>Last</c>.</value>
        </member>
        <member name="M:Kendo.Mvc.MaxFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.MaxFunction" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.MaxFunction.AggregateMethodName">
            <summary>
            Gets the the Max method name.
            </summary>
            <value>
                <c>Max</c>.</value>
        </member>
        <member name="M:Kendo.Mvc.MinFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.MinFunction" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.MinFunction.AggregateMethodName">
            <summary>
            Gets the the Min method name.
            </summary>
            <value>
                <c>Min</c>.</value>
        </member>
        <member name="M:Kendo.Mvc.SumFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.SumFunction" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.SumFunction.AggregateMethodName">
            <summary>
            Gets the the Min method name.
            </summary>
            <value>
                <c>Min</c>.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Group.HasSubgroups">
            <summary>
            Gets a value indicating whether this instance has any sub groups.
            </summary>
            <value>
                <c>true</c> if this instance has sub groups; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Group.ItemCount">
            <summary>
            Gets the number of items in this group.
            </summary>
            <value>The items count.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Group.Subgroups">
            <summary>
            Gets the subgroups, if <see cref="P:Kendo.Mvc.Infrastructure.Group.HasSubgroups" /> is true, otherwise empty collection.
            </summary>
            <value>The subgroups.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Group.Items">
            <summary>
            Gets the items in this groups.
            </summary>
            <value>The items in this group.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.Group.Key">
            <summary>
            Gets the key for this group.
            </summary>
            <value>The key for this group.</value>
        </member>
        <member name="T:Kendo.Mvc.GroupDescriptor">
            <summary>
            Represents grouping criteria.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.GroupDescriptor.MemberType">
            <summary>
            Gets or sets the type of the member that is used for grouping.
            Set this property if the member type cannot be resolved automatically.
            Such cases are: items with ICustomTypeDescriptor, XmlNode or DataRow.
            </summary>
            <value>The type of the member used for grouping.</value>
        </member>
        <member name="P:Kendo.Mvc.GroupDescriptor.DisplayContent">
            <summary>
            Gets or sets the content which will be used from UI.
            </summary>
            <filterValue>The content that will be used from UI.</filterValue>
        </member>
        <member name="P:Kendo.Mvc.GroupDescriptor.AggregateFunctions">
            <summary>
            Gets or sets the aggregate functions used when grouping is executed.
            </summary>
            <value>The aggregate functions that will be used in grouping.</value>
        </member>
        <member name="M:Kendo.Mvc.GroupDescriptor.CycleSortDirection">
            <summary>
            Changes the <see cref="T:Kendo.Mvc.SortDescriptor" /> to the next logical value.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.GroupExtensions.GetGroupSequenceUniqueKey(System.Collections.Generic.IEnumerable{Kendo.Mvc.Infrastructure.IGroup})">
            <summary>
            Calculates unique int for given group in a group sequence,
            taking into account groups order, each group key and groups' count.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.IGroup.Key">
            <summary>
            Gets the key for this group.
            </summary>
            <value>The key for this group.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.IGroup.Items">
            <summary>
            Gets the items in this groups.
            </summary>
            <value>The items in this group.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.IGroup.HasSubgroups">
            <summary>
            Gets a value indicating whether this instance has sub groups.
            </summary>
            <value>
                <c>true</c> if this instance has sub groups; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.IGroup.ItemCount">
            <summary>
            Gets the <see cref="P:Kendo.Mvc.Infrastructure.IGroup.Items" /> count.
            </summary>
            <value>The <see cref="P:Kendo.Mvc.Infrastructure.IGroup.Items" /> count.</value>
        </member>
        <member name="P:Kendo.Mvc.Infrastructure.IGroup.Subgroups">
            <summary>
            Gets the subgroups, if <see cref="P:Kendo.Mvc.Infrastructure.IGroup.HasSubgroups" /> is true, otherwise empty collection.
            </summary>
            <value>The subgroups.</value>
        </member>
        <member name="T:Kendo.Mvc.UI.SecurityTrimmingBuilder">
            <summary>
            Defines the fluent interface for configuring the SecurityTrimming info.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.SecurityTrimmingBuilder.Enabled(System.Boolean)">
            <summary>
            Enables or disables security trimming
            </summary>
            <remarks>
            The Enabled method is useful when you need to enable security trimming based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.SecurityTrimmingBuilder.HideParent(System.Boolean)">
            <summary>
            Enables or disables whether to hide parent item which does not have accessible childrens
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SliderTooltipBuilder">
            <summary>
            Defines the fluent API for configuring the Kendo Slider for ASP.NET MVC tooltip
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderTooltipBuilder.Format(System.String)">
            <summary>Gets or sets the format for displaying the value in the tooltip.</summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            .Tooltip(tooltip =&gt; tooltip.Format("{0:P"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderTooltipBuilder.Enabled(System.Boolean)">
            <summary>Display tooltip while drag.</summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            .Tooltip(tooltip =&gt; tooltip.Enable(false))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderTooltipBuilder.Tempalte(System.String)">
            <summary>Gets or sets the template for displaying the value in the tooltip.</summary>
            <param name="template">The template.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            .Tooltip(tooltip =&gt; tooltip.template("${value}"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.RangeSliderEventBuilder">
            <summary>Defines the fluent interface for configuring the <see cref="P:Kendo.Mvc.UI.Fluent.EventBuilder.Events" />.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderEventBuilder.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Change client-side event
            </summary>
            <param name="handlerName">The action defining the inline handler.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().RangeSlider()
            .Name("RangeSlider")
            .Events(events =&gt; events.Change(() =&gt;
            {
            %&gt;
            function(e) {
            //event handling code
            }
            &lt;%
            }))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderEventBuilder.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Kendo client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RangeSlider()
            .Name("RangeSlider")
            .Events(events =&gt; events.Change("change"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderEventBuilder.Slide(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Slide client-side event.
            </summary>
            <param name="handlerName">The action defining the inline handler.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().RangeSlider()
            .Name("RangeSlider")
            .Events(events =&gt; events.Slide(() =&gt;
            {
            %&gt;
            function(e) {
            //event handling code
            }
            &lt;%
            }))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderEventBuilder.Slide(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Slide client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RangeSlider()
            .Name("RangeSlider")
            .Events(events =&gt; events.Slide("slide"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SliderEventBuilder">
            <summary>Defines the fluent interface for configuring the <see cref="P:Kendo.Mvc.UI.Fluent.EventBuilder.Events" />.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderEventBuilder.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Change client-side event
            </summary>
            <param name="handlerName">The action defining the inline handler.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Slider()
            .Name("Slider")
            .Events(events =&gt; events.Change(() =&gt;
            {
            %&gt;
            function(e) {
            //event handling code
            }
            &lt;%
            }))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderEventBuilder.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            .Events(events =&gt; events.Change("change"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderEventBuilder.Slide(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Slide client-side event.
            </summary>
            <param name="handlerName">The action defining the inline handler.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Slider()
            .Name("Slider")
            .Events(events =&gt; events.Slide(() =&gt;
            {
            %&gt;
            function(e) {
            //event handling code
            }
            &lt;%
            }))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderEventBuilder.Slide(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Slide client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            .Events(events =&gt; events.Slide("slide"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1">
            <summary>Defines the fluent interface for configuring the <see cref="!:RangeSlider{T}" />component.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.#ctor(Kendo.Mvc.UI.RangeSlider{`0})">
            <summary>Initializes a new instance of the <see cref="!:RangeSliderBuilder{T}" />class.</summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.Values(System.Nullable{`0},System.Nullable{`0})">
            <summary>Sets the value of the range slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.Values(`0[])">
            <summary>Sets the value of the range slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.Orientation(Kendo.Mvc.UI.SliderOrientation)">
            <summary>Sets orientation of the range slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.TickPlacement(Kendo.Mvc.UI.SliderTickPlacement)">
            <summary>Sets a value indicating how to display the tick marks on the range slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.Min(`0)">
            <summary>Sets the minimum value of the range slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.Max(`0)">
            <summary>Sets the maximum value of the range slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.SmallStep(`0)">
            <summary>Sets the step with which the range slider value will change.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.LargeStep(`0)">
            <summary>Sets the delta with which the value will change when user click on the track.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.Tooltip(System.Boolean)">
            <summary>Display tooltip while drag.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.Tooltip(System.Action{Kendo.Mvc.UI.Fluent.SliderTooltipBuilder})">
            <summary>
            Use it to configure tooltip while drag.
            </summary>
            <param name="action">Use builder to set different tooltip options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            .Tooltip(tooltip =&gt; tooltip
            .Enable(true)
            .Format("{0:P}")
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.Events(System.Action{Kendo.Mvc.UI.Fluent.RangeSliderEventBuilder})">
            <summary>Configures the client-side events.</summary>
            <param name="events">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RangeSlider()
            .Name("RangeSlider")
            .Events(events =&gt;
            events.OnChange("onChange"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.LeftDragHandleTitle(System.String)">
            <summary>Sets the title of the slider draghandle.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.RangeSliderBuilder`1.RightDragHandleTitle(System.String)">
            <summary>Sets the title of the slider draghandle.</summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SliderBuilder`1">
            <summary>Defines the fluent interface for configuring the <see cref="!:Slider{T}" />component.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.#ctor(Kendo.Mvc.UI.Slider{`0})">
            <summary>Initializes a new instance of the <see cref="!:SliderBuilder{T}" />class.</summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.Value(System.Nullable{`0})">
            <summary>Sets the value of the slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.DragHandleTitle(System.String)">
            <summary>Sets the title of the slider draghandle.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.IncreaseButtonTitle(System.String)">
            <summary>Sets the title of the slider increase button.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.ShowButtons(System.Nullable{System.Boolean})">
            <summary>Sets whether slider to be rendered with increase/decrease button.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.DecreaseButtonTitle(System.String)">
            <summary>Sets the title of the slider decrease button.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.Orientation(Kendo.Mvc.UI.SliderOrientation)">
            <summary>Sets orientation of the slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.TickPlacement(Kendo.Mvc.UI.SliderTickPlacement)">
            <summary>Sets a value indicating how to display the tick marks on the slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.Min(`0)">
            <summary>Sets the minimum value of the slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.Max(`0)">
            <summary>Sets the maximum value of the slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.SmallStep(`0)">
            <summary>Sets the step with which the slider value will change.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.LargeStep(`0)">
            <summary>Sets the delta with which the value will change when user click on the slider.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.Tooltip(System.Boolean)">
            <summary>Display tooltip while drag.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.Tooltip(System.Action{Kendo.Mvc.UI.Fluent.SliderTooltipBuilder})">
            <summary>
            Use it to configure tooltip.
            </summary>
            <param name="action">Use builder to set different tooltip options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            .Tooltip(tooltip =&gt; tooltip
            .Enable(true)
            .Format("{0:P}")
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SliderBuilder`1.Events(System.Action{Kendo.Mvc.UI.Fluent.SliderEventBuilder})">
            <summary>Configures the client-side events.</summary>
            <param name="events">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            .Events(events =&gt;
            events.OnChange("onChange"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.SliderOrientation">
            <summary>Specifies the general layout of the slider.</summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SliderOrientation.Horizontal">
            <summary>The slider is oriented horizontally.</summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SliderOrientation.Vertical">
            <summary>The slider is oriented vertically.</summary>
        </member>
        <member name="T:Kendo.Mvc.UI.SliderTickPlacement">
            <summary>Specifies the location of tick marks in a component.</summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SliderTickPlacement.None">
            <summary>No tick marks appear in the component.</summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SliderTickPlacement.TopLeft">
            <summary>
            Tick marks are located on the top of a horizontal component or on the
            left of a vertical component.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SliderTickPlacement.BottomRight">
            <summary>
            Tick marks are located on the bottom of a horizontal component or on the
            right side of a vertical component.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SliderTickPlacement.Both">
            <summary>Tick marks are located on both sides of the component.</summary>
        </member>
        <member name="T:Kendo.Mvc.UI.SparklineType">
            <summary>
            Defines the possible series orientation.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SparklineType.Line">
            <summary>
            Line series (default)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SparklineType.Area">
            <summary>
            Area series
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SparklineType.Bar">
            <summary>
            Bar Series (synonym for Column in sparklines)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SparklineType.Column">
            <summary>
            Column Series
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SparklineType.Bullet">
            <summary>
            Bullet series
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SparklineType.Pie">
            <summary>
            Pie series
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SparklineSeriesDefaultsBuilder`1">
            <summary>
            Defines the fluent API for configuring the sparkline series defaults.
            </summary>
            <typeparam name="TModel">
            </typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesDefaultsBuilder`1.Bar">
            <summary>
            Defines the default settings for bar series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesDefaultsBuilder`1.Column">
            <summary>
            Defines the default settings for column series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesDefaultsBuilder`1.Line">
            <summary>
            Defines the default settings for line series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesDefaultsBuilder`1.Area">
            <summary>
            Defines the default settings for area series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesDefaultsBuilder`1.Pie">
            <summary>
            Defines the default settings for pie series.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1">
            <summary>
            Creates series for the <see cref="!:Sparkline{TModel}" />.
            </summary>
            <typeparam name="TModel">The type of the data item to which the chart is bound to</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.#ctor(Kendo.Mvc.UI.ISeriesContainer)">
            <summary>
            Initializes a new instance of the <see cref="!:SparklineSeriesFactory{TModel}" /> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Container">
            <summary>
            The parent Sparkline
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Bar``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="valueExpression">
            The expression used to extract the point value from the chart model
            </param>
            <param name="colorExpression">
            The expression used to extract the point color from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Bar(System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="valueMemberName">
            The name of the value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Bar(System.Type,System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="valueMemberName">
            The name of the value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Bar(System.Collections.IEnumerable)">
            <summary>
            Defines bar series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Column``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Defines bound column series.
            </summary>
            <param name="valueExpression">
            The expression used to extract the point value from the chart model
            </param>
            <param name="colorExpression">
            The expression used to extract the point color from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Column(System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="valueMemberName">
            The name of the value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Column(System.Type,System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="valueMemberName">
            The name of the value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Column(System.Collections.IEnumerable)">
            <summary>
            Defines bar series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Line``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines bound line series.
            </summary>
            <param name="expression">
            The expression used to extract the series value from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Line(System.String)">
            <summary>
            Defines bound line series.
            </summary>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Line(System.Type,System.String)">
            <summary>
            Defines bound line series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Line(System.Collections.IEnumerable)">
            <summary>
            Defines line series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Area``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines bound area series.
            </summary>
            <param name="expression">
            The expression used to extract the series value from the chart model.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Area(System.String)">
            <summary>
            Defines bound area series.
            </summary>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Area(System.Type,System.String)">
            <summary>
            Defines bound area series.
            </summary>
            <param name="memberType">
            The type of the value member.
            </param>
            <param name="memberName">
            The name of the value member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Area(System.Collections.IEnumerable)">
            <summary>
            Defines area series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Pie``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Defines bound pie series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Pie(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound pie series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Pie(System.Type,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Defines bound pie series.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Pie(System.Collections.IEnumerable)">
            <summary>
            Defines pie series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Bullet``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Defines bound bullet series.
            </summary>
            <param name="currentExpression">
            The expression used to extract the point current value from the chart model
            </param>
            <param name="targetExpression">
            The expression used to extract the point target value from the chart model
            </param>
            <param name="colorExpression">
            The expression used to extract the point color from the chart model
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Bullet(System.String,System.String,System.String)">
            <summary>
            Defines bound bar series.
            </summary>
            <param name="currentMemberName">
            The name of the current value member.
            </param>
            <param name="targetMemberName">
            The name of the target value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Bullet(System.Type,System.String,System.String,System.String)">
            <summary>
            Defines bound bullet series.
            </summary>
            <param name="currentMemberType">
            The type of the current value member.
            </param>
            <param name="targetMemberName">
            The name of the target value member.
            </param>
            <param name="colorMemberName">
            The name of the color member.
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineSeriesFactory`1.Bullet(System.Collections.IEnumerable)">
            <summary>
            Defines bar series bound to inline data.
            </summary>
            <param name="data">
            The data to bind to.
            </param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SparklineBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="!:Sparkline{T}" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.#ctor(Kendo.Mvc.UI.Sparkline{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:SparklineBuilder{T}" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.Data(System.Collections.IEnumerable)">
            <summary>
            Sets the Sparkline data.
            </summary>
            <param name="data">The data for the default Sparkline series.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .Data(new int[] { 1, 2 })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.Data(System.Double)">
            <summary>
            Sets the Sparkline data.
            </summary>
            <param name="data">The data for the default Sparkline series.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .Data(new int[] { 1, 2 })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.Type(Kendo.Mvc.UI.SparklineType)">
            <summary>
            Sets the type of the sparkline.
            </summary>
            <param name="theme">The Sparkline type.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .Type(SparklineType.Area)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.PointWidth(System.Double)">
            <summary>
            Sets the per-point width of the sparkline.
            </summary>
            <param name="theme">The Sparkline per-point width.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .PointWidth(2)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.Events(System.Action{Kendo.Mvc.UI.Fluent.ChartEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="configurator">The client events configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .Events(events =&gt; events
            .OnLoad("onLoad")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.Theme(System.String)">
            <summary>
            Sets the theme of the chart.
            </summary>
            <param name="theme">The Sparkline theme.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .Theme("Telerik")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.ChartArea(System.Action{Kendo.Mvc.UI.Fluent.ChartAreaBuilder})">
            <summary>
            Sets the Chart area.
            </summary>
            <param name="configurator">The Chart area.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .ChartArea(chartArea =&gt; chartArea.margin(20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.PlotArea(System.Action{Kendo.Mvc.UI.Fluent.PlotAreaBuilder})">
            <summary>
            Sets the Plot area.
            </summary>
            <param name="configurator">The Plot area.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .PlotArea(plotArea =&gt; plotArea.margin(20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.Series(System.Action{Kendo.Mvc.UI.Fluent.SparklineSeriesFactory{`0}})">
            <summary>
            Defines the chart series.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline(Model)
            .Name("Sparkline")
            .Series(series =&gt;
            {
            series.Bar(s =&gt; s.SalesAmount);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.SeriesDefaults(System.Action{Kendo.Mvc.UI.Fluent.SparklineSeriesDefaultsBuilder{`0}})">
            <summary>
            Defines the options for all chart series of the specified type.
            </summary>
            <param name="configurator">The configurator.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline(Model)
            .Name("Sparkline")
            .SeriesDefaults(series =&gt; series.Bar().Stack(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.AxisDefaults(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisDefaultsBuilder{`0}})">
            <summary>
            Defines the options for all chart axes of the specified type.
            </summary>
            <param name="configurator">The configurator.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline(Model)
            .Name("Sparkline")
            .AxisDefaults(axisDefaults =&gt; axisDefaults.MinorTickSize(5))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.CategoryAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder{`0}})">
            <summary>
            Configures the category axis
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline(Model)
            .Name("Sparkline")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.ValueAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartValueAxisFactory{`0}})">
            <summary>
            Defines value axis options
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline(Model)
            .Name("Sparkline")
            .ValueAxis(a =&gt; a.Numeric().TickSize(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.DataSource(System.Action{Kendo.Mvc.UI.Fluent.ReadOnlyAjaxDataSourceBuilder{`0}})">
            <summary>
            Data Source configuration
            </summary>
            <param name="configurator">Use the configurator to set different data binding options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .DataSource(ds =&gt;
            {
            ds.Ajax().Read(r =&gt; r.Action("SalesData", "Sparkline"));
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.AutoBind(System.Boolean)">
            <summary>
            Enables or disables automatic binding.
            </summary>
            <param name="autoBind">
            Gets or sets a value indicating if the chart
            should be data bound during initialization.
            The default value is true.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .DataSource(ds =&gt;
            {
            ds.Ajax().Read(r =&gt; r.Action("SalesData", "Sparkline"));
            })
            .AutoBind(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.SeriesColors(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the series colors.
            </summary>
            <param name="colors">A list of the series colors.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .SeriesColors(new string[] { "#f00", "#0f0", "#00f" })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.SeriesColors(System.String[])">
            <summary>
            Sets the series colors.
            </summary>
            <param name="colors">The series colors.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .SeriesColors("#f00", "#0f0", "#00f")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.Tooltip(System.Action{Kendo.Mvc.UI.Fluent.ChartTooltipBuilder})">
            <summary>
            Use it to configure the data point tooltip.
            </summary>
            <param name="configurator">Use the configurator to set data tooltip options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .Tooltip(tooltip =&gt;
            {
            tooltip.Visible(true).Format("{0:C}");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.Tooltip(System.Boolean)">
            <summary>
            Sets the data point tooltip visibility.
            </summary>
            <param name="visible">
            A value indicating if the data point tooltip should be displayed.
            The tooltip is not visible by default.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .Tooltip(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SparklineBuilder`1.Transitions(System.Boolean)">
            <summary>
            Enables or disabled animated transitions on initial load and refresh.
            </summary>
            <param name="transitions">
            A value indicating if transition animations should be played.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .Transitions(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.SparklineHtmlBuilder`1.#ctor(Kendo.Mvc.UI.Sparkline{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:SparklineHtmlBuilder{T}" /> class.
            </summary>
            <param name="component">The Sparkline component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.SparklineHtmlBuilder`1.CreateSparkline">
            <summary>
            Creates the chart top-level div.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.SparklineHtmlBuilder`1.BuildCore">
            <summary>
            Builds the Sparkline component markup.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Kendo.Mvc.UI.Sparkline`1.SeriesData">
            <summary>
            Gets or sets the default series data
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Sparkline`1.Type">
            <summary>
            Gets or sets the default series type.
            The default value is SparklineType.Line.
            </summary>
            <value>
            The default series type.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Sparkline`1.PointWidth">
            <summary>
            Gets or sets the width to allocate for each point.
            The default value is 5.
            </summary>
            <value>
            The width to allocate for each point.
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.Size(System.String)">
            <summary>
            Sets the pane size.
            </summary>
            <param name="value">The desired size. Only sizes in pixels and percentages are allowed.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add().Size("220px");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.MinSize(System.String)">
            <summary>
            Sets the minimum pane size.
            </summary>
            <param name="value">The desired minimum size. Only sizes in pixels and percentages are allowed.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add().MinSize("220px");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.MaxSize(System.String)">
            <summary>
            Sets the maximum pane size.
            </summary>
            <param name="value">The desired maximum size. Only sizes in pixels and percentages are allowed.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add().MaxSize("220px");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.Scrollable(System.Boolean)">
            <summary>
            Sets whether the pane shows a scrollbar when its content overflows.
            </summary>
            <param name="isScrollable">Whether the pane will be scrollable.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add().Scrollable(false);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.Resizable(System.Boolean)">
            <summary>
            Sets whether the pane can be resized by the user.
            </summary>
            <param name="isResizable">Whether the pane will be resizable.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add().Resizable(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.Collapsed(System.Boolean)">
            <summary>
            Sets whether the pane is initially collapsed.
            </summary>
            <param name="isCollapsed">Whether the pane will be initially collapsed.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add().Collapsed(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.Collapsible(System.Boolean)">
            <summary>
            Sets whether the pane can be collapsed by the user.
            </summary>
            <param name="isCollapsible">Whether the pane can be collapsed by the user.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add().Collapsible(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.HtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes applied to the outer HTML element rendered for the item
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add().HtmlAttributes(new { style = "background: red" });
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes applied to the outer HTML element rendered for the item
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.Content(System.Action)">
            <summary>
            Sets the HTML content of the pane.
            </summary>
            <param name="value">The action which renders the HTML content.</param>
            <code lang="CS">
            &lt;%  Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add()
            .Content(() =&gt; { &gt;%
            &lt;p&gt;Content&lt;/p&gt;
            %&lt;});
            })
            .Render();
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.Content(System.Func{System.Object,System.Object})">
            <summary>
            Sets the HTML content of the pane.
            </summary>
            <param name="value">The Razor template for the HTML content.</param>
            <code lang="CS">
            @(Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add()
            .Content(@&lt;p&gt;Content&lt;/p&gt;);
            })
            .Render();)
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.Content(System.String)">
            <summary>
            Sets the HTML content of the pane.
            </summary>
            <param name="value">The HTML content.</param>
            <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt;
            {
            panes.Add()
            .Content("&lt;p&gt;Content&lt;/p&gt;");
            })
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.LoadContentFrom(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the Url which will be requested to return the pane content.
            </summary>
            <param name="routeValues">The route values of the Action method.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt; {
            panes.Add()
            .LoadContentFrom(MVC.Home.Index().GetRouteValueDictionary());
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.LoadContentFrom(System.String,System.String)">
            <summary>
            Sets the Url, which will be requested to return the pane content.
            </summary>
            <param name="actionName">The action name.</param>
            <param name="controllerName">The controller name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt; {
            panes.Add()
            .LoadContentFrom("AjaxView_OpenSource", "Splitter");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.LoadContentFrom(System.String,System.String,System.Object)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="actionName">The action name.</param>
            <param name="controllerName">The controller name.</param>
            <param name="routeValues">Route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt; {
            panes.Add()
            .LoadContentFrom("AjaxView_OpenSource", "Splitter", new { id = 10 });
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterPaneBuilder.LoadContentFrom(System.String)">
            <summary>
            Sets the Url, which will be requested to return the pane content.
            </summary>
            <param name="value">The url.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt; {
            panes.Add()
            .LoadContentFrom(Url.Action("AjaxView_OpenSource", "Splitter"));
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SplitterPaneFactory">
            <summary>
            Defines the fluent interface for configuring the <see cref="P:Kendo.Mvc.UI.Splitter.Panes" />.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SplitterEventBuilder">
            <summary>
            Defines the fluent API for configuring the Kendo Splitter for ASP.NET MVC events
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterEventBuilder.Resize(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Resize client-side event
            </summary>
            <param name="onResizeInlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Splitter()
            .Name("Splitter")
            .Events(events =&gt; events.Resize(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterEventBuilder.Resize(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Resize client-side event.
            </summary>
            <param name="onResizeHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Events(events =&gt; events.Resize("onResize"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterEventBuilder.Expand(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Expand client-side event
            </summary>
            <param name="onExpandInlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Splitter()
            .Name("Splitter")
            .Events(events =&gt; events.Expand(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterEventBuilder.Expand(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Expand client-side event.
            </summary>
            <param name="onExpandHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Events(events =&gt; events.Expand("onExpand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterEventBuilder.Collapse(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Collapse client-side event
            </summary>
            <param name="onCollapseInlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Splitter()
            .Name("Splitter")
            .Events(events =&gt; events.Collapse(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterEventBuilder.Collapse(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Collapse client-side event.
            </summary>
            <param name="onCollapseHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Events(events =&gt; events.Collapse("onCollapse"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterEventBuilder.ContentLoad(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the ContentLoad client-side event
            </summary>
            <param name="onContentLoadInlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Splitter()
            .Name("Splitter")
            .Events(events =&gt; events.ContentLoad(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterEventBuilder.ContentLoad(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ContentLoad client-side event.
            </summary>
            <param name="onContentLoadHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Events(events =&gt; events.ContentLoad("onContentLoad"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.SplitterOrientation">
            <summary>
            Specifies the orientation in which the splitter panes will be ordered
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SplitterOrientation.Horizontal">
            <summary>
            Panes are oredered horizontally
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.SplitterOrientation.Vertical">
            <summary>
            Panes are oredered vertically
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.SplitterBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Splitter" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterBuilder.Orientation(Kendo.Mvc.UI.SplitterOrientation)">
            <summary>
            Sets the splitter orientation.
            </summary>
            <param name="value">The desired orientation.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Orientation(SplitterOrientation.Vertical)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterBuilder.Panes(System.Action{Kendo.Mvc.UI.Fluent.SplitterPaneFactory})">
            <summary>
            Defines the panes in the splitter.
            </summary>
            <param name="configurePanes">The action that configures the panes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Panes(panes =&gt; {
            panes.Add().LoadContentFrom("Navigation", "Shared");
            panes.Add().LoadContentFrom("Index", "Home");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.SplitterBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.SplitterEventBuilder})">
            <summary>
            Configures the client events for the splitter.
            </summary>
            <param name="configureClientEvents">The action that configures the client events.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter")
            .Events(events =&gt; events
            .OnLoad("onLoad")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.Size">
            <summary>
            Specifies the size of the pane
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.MinSize">
            <summary>
            Specifies the minimum size of the pane
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.MaxSize">
            <summary>
            Specifies the maximum size of the pane
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.Collapsed">
            <summary>
            Specifies whether the pane is initially collapsed
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.Collapsible">
            <summary>
            Specifies whether the pane can be collapsed by the user
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.Resizable">
            <summary>
            Specifies whether the pane can be resized by the user
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.Scrollable">
            <summary>
            Specifies whether the pane shows a scrollbar when its content overflows
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.ContentUrl">
            <summary>
            Specifies URL from which to load the pane content
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.HtmlAttributes">
            <summary>
            Specifies HTML attributes for the pane
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.SplitterPane.Template">
            <summary>
            Specifies the pane contents
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartNavigator`1.#ctor(System.Web.Mvc.ViewContext,Kendo.Mvc.IUrlGenerator)">
            <summary>
            Initializes a new instance of the <see cref="!:ChartNavigator{T}" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigator`1.Series">
            <summary>
            Gets the navigator series.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigator`1.Visible">
            <summary>
            Gets or sets a value indicating if the navigator is visible.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigator`1.Select">
            <summary>
            Gets or sets the navigator selection.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigator`1.Hint">
            <summary>
            Gets or sets the navigator hint.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigator`1.ViewContext">
            <summary>
            Gets or sets the view context to rendering a view.
            </summary>
            <value>The view context.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigator`1.UrlGenerator">
            <summary>
            Gets or sets the URL generator.
            </summary>
            <value>The URL generator.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigator`1.DataSource">
            <summary>
            Gets the data source configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigator`1.AutoBind">
            <summary>
            Gets or sets a value indicating if the chart
            should be data bound during initialization.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigator`1.DateField">
            <summary>
            Gets or sets the date field.
            </summary>
            <value>
            The date field.
            </value>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartDateSelection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartDateSelection" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDateSelection.From">
            <summary>
            The lower boundary of the range.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartDateSelection.To">
            <summary>
            The upper boundary of the range.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartNavigatorHintBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:ChartNavigatorhintBuilder" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorHintBuilder.#ctor(Kendo.Mvc.UI.ChartNavigatorHint)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.ChartNavigatorHint" /> class.
            </summary>
            <param name="navigatorHint">The navigator hint.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorHintBuilder.Format(System.String)">
            <summary>
            Sets the border color.
            </summary>
            <param name="color">The border color (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .Navigator(nav =&gt; nav
            .Series(series =&gt;
            {
            series.Bar(s =&gt; s.SalesAmount);
            })
            .Hint(hint =&gt; hint
            .Format("{0:d} | {1:d}")
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorHintBuilder.Template(System.String)">
            <summary>
            Sets the border opacity
            </summary>
            <param name="opacity">The border opacity (CSS format).</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .Navigator(nav =&gt; nav
            .Series(series =&gt;
            {
            series.Bar(s =&gt; s.SalesAmount);
            })
            .Hint(hint =&gt; hint
            .Template("From: #= from # To: #= to #")
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorHintBuilder.Visible(System.Boolean)">
            <summary>
            Sets the hint visibility.
            </summary>
            <param name="visible">The hint visibility.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .Navigator(nav =&gt; nav
            .Series(series =&gt;
            {
            series.Bar(s =&gt; s.SalesAmount);
            })
            .Hint(hint =&gt; hint
            .Visible(false)
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="!:ChartNavigator{T}" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder`1.#ctor(Kendo.Mvc.UI.ChartNavigator{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartNavigatorBuilder{T}" /> class.
            </summary>
            <param name="chartNavigator">The stock chart navigator.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder`1.Select(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets the selection range
            </summary>
            <param name="from">The selection range start.</param>
            <param name="to">The selection range end.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("StockChart")
            .Navigator(nav =&gt; nav.Select(DateTime.Today.AddMonths(-1), DateTime.Today))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder`1.Series(System.Action{Kendo.Mvc.UI.Fluent.ChartSeriesFactory{`0}})">
            <summary>
            Defines the navigator series. At least one series should be configured.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .Navigator(nav =&gt;
            nav.Series(series =&gt;
            {
            series.Bar(s =&gt; s.SalesAmount);
            })
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder`1.Visible(System.Boolean)">
            <summary>
            Sets the navigator visibility
            </summary>
            <param name="visible">The navigator visibility.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .Navigator(nav =&gt; nav
            .Series(series =&gt;
            {
            series.Bar(s =&gt; s.SalesAmount);
            })
            .Visible(false)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder`1.Hint(System.Action{Kendo.Mvc.UI.Fluent.ChartNavigatorHintBuilder})">
            <summary>
            Defines the navigator hint.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .Navigator(nav =&gt;
            nav.Series(series =&gt;
            {
            series.Bar(s =&gt; s.SalesAmount);
            })
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder`1.DataSource(System.Action{Kendo.Mvc.UI.Fluent.ReadOnlyAjaxDataSourceBuilder{`0}})">
            <summary>
            Data Source configuration for the Navigator.
            When configured, the Navigator will filter the main StockChart data source to the selected range.
            </summary>
            <param name="configurator">Use the configurator to set different data binding options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Navigator(navi =&gt; navi
            .DataSource(ds =&gt;
            {
            ds.Ajax().Read(r =&gt; r.Action("SalesData", "Chart"));
            })
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder`1.DateField(System.String)">
            <summary>
            Sets the field used by the navigator date axes.
            </summary>
            <param name="dateField">The date field.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .Navigator(navi =&gt; navi
            .DateField("Date")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder`1.AutoBind(System.Boolean)">
            <summary>
            Enables or disables automatic binding.
            </summary>
            <param name="autoBind">
            Gets or sets a value indicating if the navigator
            should be data bound during initialization.
            The default value is true.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Navigator(navi =&gt; navi
            .DataSource(ds =&gt;
            {
            ds.Ajax().Read(r =&gt; r.Action("SalesData", "Chart"));
            })
            .AutoBind(false)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.StockChartBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="!:Chart{T}" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.#ctor(Kendo.Mvc.UI.StockChart{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:ChartBuilder{T}" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.DateField(System.String)">
            <summary>
            Sets the field used by all date axes (including the navigator).
            </summary>
            <param name="dateField">The date field.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .DateField("Date")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.AutoBind(System.Boolean)">
            <summary>
            Enables or disables automatic binding.
            </summary>
            <param name="autoBind">
            Gets or sets a value indicating if the chart
            should be data bound during initialization.
            The default value is true.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .DataSource(ds =&gt;
            {
            ds.Ajax().Read(r =&gt; r.Action("SalesData", "Chart"));
            })
            .AutoBind(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Navigator(System.Action{Kendo.Mvc.UI.Fluent.ChartNavigatorBuilder{`0}})">
            <summary>
            Configures the stock chart navigator.
            </summary>
            <param name="configurator">The navigator configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("StockChart")
            .Navigator(nav =&gt; nav
            .Series(series =&gt;
            {
            series.Line(s =&gt; s.Volume);
            }
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Events(System.Action{Kendo.Mvc.UI.Fluent.ChartEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="configurator">The client events configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Events(events =&gt; events
            .OnLoad("onLoad")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Theme(System.String)">
            <summary>
            Sets the theme of the chart.
            </summary>
            <param name="theme">The Chart theme.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Theme("Telerik")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.ChartArea(System.Action{Kendo.Mvc.UI.Fluent.ChartAreaBuilder})">
            <summary>
            Sets the Chart area.
            </summary>
            <param name="configurator">The Chart area.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .ChartArea(chartArea =&gt; chartArea.margin(20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.PlotArea(System.Action{Kendo.Mvc.UI.Fluent.PlotAreaBuilder})">
            <summary>
            Sets the Plot area.
            </summary>
            <param name="configurator">The Plot area.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .PlotArea(plotArea =&gt; plotArea.margin(20))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Title(System.String)">
            <summary>
            Sets the title of the chart.
            </summary>
            <param name="title">The Chart title.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Title("Yearly sales")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Title(System.Action{Kendo.Mvc.UI.Fluent.ChartTitleBuilder})">
            <summary>
            Defines the title of the chart.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Title(title =&gt; title.Text("Yearly sales"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Legend(System.Boolean)">
            <summary>
            Sets the legend visibility.
            </summary>
            <param name="visible">A value indicating whether to show the legend.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Legend(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Legend(System.Action{Kendo.Mvc.UI.Fluent.ChartLegendBuilder})">
            <summary>
            Configures the legend.
            </summary>
            <param name="configurator">The configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Legend(legend =&gt; legend.Visible(true).Position(ChartLegendPosition.Bottom))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Series(System.Action{Kendo.Mvc.UI.Fluent.ChartSeriesFactory{`0}})">
            <summary>
            Defines the chart series.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .Series(series =&gt;
            {
            series.Bar(s =&gt; s.SalesAmount);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.SeriesDefaults(System.Action{Kendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder{`0}})">
            <summary>
            Defines the options for all chart series of the specified type.
            </summary>
            <param name="configurator">The configurator.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .SeriesDefaults(series =&gt; series.Bar().Stack(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Panes(System.Action{Kendo.Mvc.UI.Fluent.ChartPanesFactory})">
            <summary>
            Defines the chart panes.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .Panes(panes =&gt;
            {
            panes.Add("volume");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.AxisDefaults(System.Action{Kendo.Mvc.UI.Fluent.ChartAxisDefaultsBuilder{`0}})">
            <summary>
            Defines the options for all chart axes of the specified type.
            </summary>
            <param name="configurator">The configurator.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .AxisDefaults(axisDefaults =&gt; axisDefaults.MinorTickSize(5))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.CategoryAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartCategoryAxisBuilder{`0}})">
            <summary>
            Configures the category axis
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .CategoryAxis(axis =&gt; axis
            .Categories(s =&gt; s.DateString)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.ValueAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartValueAxisFactory{`0}})">
            <summary>
            Defines value axis options
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .ValueAxis(a =&gt; a.Numeric().TickSize(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.XAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartValueAxisFactory{`0}})">
            <summary>
            Defines X-axis options for scatter charts
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .XAxis(a =&gt; a.Numeric().Max(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.YAxis(System.Action{Kendo.Mvc.UI.Fluent.ChartValueAxisFactory{`0}})">
            <summary>
            Configures Y-axis options for scatter charts.
            </summary>
            <param name="configurator">The configurator</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("Chart")
            .YAxis(a =&gt; a.Numeric().Max(4))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.DataSource(System.Action{Kendo.Mvc.UI.Fluent.ReadOnlyAjaxDataSourceBuilder{`0}})">
            <summary>
            Data Source configuration
            </summary>
            <param name="configurator">Use the configurator to set different data binding options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .DataSource(ds =&gt;
            {
            ds.Ajax().Read(r =&gt; r.Action("SalesData", "Chart"));
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.SeriesColors(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the series colors.
            </summary>
            <param name="colors">A list of the series colors.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .SeriesColors(new string[] { "#f00", "#0f0", "#00f" })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.SeriesColors(System.String[])">
            <summary>
            Sets the series colors.
            </summary>
            <param name="colors">The series colors.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .SeriesColors("#f00", "#0f0", "#00f")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Tooltip(System.Action{Kendo.Mvc.UI.Fluent.ChartTooltipBuilder})">
            <summary>
            Use it to configure the data point tooltip.
            </summary>
            <param name="configurator">Use the configurator to set data tooltip options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Tooltip(tooltip =&gt;
            {
            tooltip.Visible(true).Format("{0:C}");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Tooltip(System.Boolean)">
            <summary>
            Sets the data point tooltip visibility.
            </summary>
            <param name="visible">
            A value indicating if the data point tooltip should be displayed.
            The tooltip is not visible by default.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Tooltip(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.StockChartBuilder`1.Transitions(System.Boolean)">
            <summary>
            Enables or disabled animated transitions on initial load and refresh.
            </summary>
            <param name="transitions">
            A value indicating if transition animations should be played.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("Chart")
            .Transitions(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.ChartNavigatorHint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:NavigatorHint" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigatorHint.Format">
            <summary>
            Gets or sets the hint format.
            </summary>
            <value>
            The hint format.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigatorHint.Template">
            <summary>
            Gets or sets the hint template.
            </summary>
            <value>
            The hint template.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.ChartNavigatorHint.Visible">
            <summary>
            Gets or sets a value indicating if the hint is visible
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.StockChart`1.Navigator">
            <summary>
            Gets or sets the stock chart navigator settings.
            </summary>
            <value>
            The Stock Chart navigator settings.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.StockChart`1.DateField">
            <summary>
            Gets or sets the date field.
            </summary>
            <value>
            The date field.
            </value>
        </member>
        <member name="T:Kendo.Mvc.SortDescriptor">
            <summary>
            Represents declarative sorting.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.SortDescriptor.Member">
            <summary>
            Gets or sets the member name which will be used for sorting.
            </summary>
            <filterValue>The member that will be used for sorting.</filterValue>
        </member>
        <member name="P:Kendo.Mvc.SortDescriptor.SortDirection">
            <summary>
            Gets or sets the sort direction for this sort descriptor. If the value is null
            no sorting will be applied.
            </summary>
            <value>The sort direction. The default value is null.</value>
        </member>
        <member name="M:Kendo.Mvc.Extensions.EnumerableExtensions.GenericEnumerable`1.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="!:GenericEnumerable{T}" /> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.EnumerableExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Executes the provided delegate for each item.
            </summary>
            <typeparam name="T">
            </typeparam>
            <param name="instance">The instance.</param>
            <param name="action">The action to be applied.</param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.EnumerableExtensions.ElementAt(System.Collections.IEnumerable,System.Int32)">
            <exception cref="T:System.ArgumentOutOfRangeException">
                <c>index</c> is out of range.</exception>
        </member>
        <member name="T:Kendo.Mvc.Extensions.QueryableExtensions">
            <summary>
            Provides extension methods to process DataSourceRequest.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.Sort(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{Kendo.Mvc.SortDescriptor})">
            <summary>
            Sorts the elements of a sequence using the specified sort descriptors.
            </summary>
            <param name="source">A sequence of values to sort.</param>
            <param name="sortDescriptors">The sort descriptors used for sorting.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are sorted according to a <paramref name="sortDescriptors" />.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.Page(System.Linq.IQueryable,System.Int32,System.Int32)">
            <summary>
            Pages through the elements of a sequence until the specified
            <paramref name="pageIndex" /> using <paramref name="pageSize" />.
            </summary>
            <param name="source">A sequence of values to page.</param>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are at the specified <paramref name="pageIndex" />.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.Select(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Projects each element of a sequence into a new form.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are the result of invoking a
            projection selector on each element of <paramref name="source" />.
            </returns>
            <param name="source"> A sequence of values to project. </param>
            <param name="selector"> A projection function to apply to each element. </param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.GroupBy(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Groups the elements of a sequence according to a specified key selector function.
            </summary>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> whose elements to group.</param>
            <param name="keySelector"> A function to extract the key for each element.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> with <see cref="!:IGrouping{TKey,TElement}" /> items,
            whose elements contains a sequence of objects and a key.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Sorts the elements of a sequence in ascending order according to a key.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are sorted according to a key.
            </returns>
            <param name="source">
            A sequence of values to order.
            </param>
            <param name="keySelector">
            A function to extract a key from an element.
            </param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.OrderByDescending(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Sorts the elements of a sequence in descending order according to a key.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are sorted in descending order according to a key.
            </returns>
            <param name="source">
            A sequence of values to order.
            </param>
            <param name="keySelector">
            A function to extract a key from an element.
            </param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression,System.Nullable{System.ComponentModel.ListSortDirection})">
            <summary>
            Calls <see cref="M:Kendo.Mvc.Extensions.QueryableExtensions.OrderBy(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)" />
            or <see cref="M:Kendo.Mvc.Extensions.QueryableExtensions.OrderByDescending(System.Linq.IQueryable,System.Linq.Expressions.LambdaExpression)" /> depending on the <paramref name="sortDirection" />.
            </summary>
            <param name="source">The source.</param>
            <param name="keySelector">The key selector.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> whose elements are sorted according to a key.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.GroupBy(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{Kendo.Mvc.GroupDescriptor})">
            <summary>
            Groups the elements of a sequence according to a specified <paramref name="groupDescriptors" />.
            </summary>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> whose elements to group. </param>
            <param name="groupDescriptors">The group descriptors used for grouping.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> with <see cref="T:Kendo.Mvc.Infrastructure.IGroup" /> items,
            whose elements contains a sequence of objects and a key.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.Aggregate(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{Kendo.Mvc.AggregateFunction})">
            <summary>
            Calculates the results of given aggregates functions on a sequence of elements.
            </summary>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> whose elements will
            be used for aggregate calculation.</param>
            <param name="aggregateFunctions">The aggregate functions.</param>
            <returns>Collection of <see cref="T:Kendo.Mvc.Infrastructure.AggregateResult" />s calculated for each function.</returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.Where(System.Linq.IQueryable,System.Linq.Expressions.Expression)">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains elements from the input sequence
            that satisfy the condition specified by <paramref name="predicate" />.
            </returns>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> to filter.</param>
            <param name="predicate"> A function to test each element for a condition.</param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.Where(System.Linq.IQueryable,System.Collections.Generic.IEnumerable{Kendo.Mvc.IFilterDescriptor})">
            <summary>
            Filters a sequence of values based on a collection of <see cref="T:Kendo.Mvc.IFilterDescriptor" />.
            </summary>
            <param name="source">The source.</param>
            <param name="filterDescriptors">The filter descriptors.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains elements from the input sequence
            that satisfy the conditions specified by each filter descriptor in <paramref name="filterDescriptors" />.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.Take(System.Linq.IQueryable,System.Int32)">
            <summary>
            Returns a specified number of contiguous elements from the start of a sequence.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains the specified number
            of elements from the start of <paramref name="source" />.
            </returns>
            <param name="source"> The sequence to return elements from.</param>
            <param name="count"> The number of elements to return. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> is null. </exception>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.Skip(System.Linq.IQueryable,System.Int32)">
            <summary>
            Bypasses a specified number of elements in a sequence
            and then returns the remaining elements.
            </summary>
            <returns>
            An <see cref="T:System.Linq.IQueryable" /> that contains elements that occur
            after the specified index in the input sequence.
            </returns>
            <param name="source">
            An <see cref="T:System.Linq.IQueryable" /> to return elements from.
            </param>
            <param name="count">
            The number of elements to skip before returning the remaining elements.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> is null.</exception>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.Count(System.Linq.IQueryable)">
            <summary> Returns the number of elements in a sequence.</summary>
            <returns> The number of elements in the input sequence.</returns>
            <param name="source">
            The <see cref="T:System.Linq.IQueryable" /> that contains the elements to be counted.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> is null.</exception>
        </member>
        <member name="M:Kendo.Mvc.Extensions.QueryableExtensions.ElementAt(System.Linq.IQueryable,System.Int32)">
            <summary> Returns the element at a specified index in a sequence.</summary>
            <returns> The element at the specified position in <paramref name="source" />.</returns>
            <param name="source"> An <see cref="T:System.Linq.IQueryable" /> to return an element from.</param>
            <param name="index"> The zero-based index of the element to retrieve.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="source" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.</exception>
        </member>
        <member name="M:Kendo.Mvc.PopulateSiteMapAttribute.#ctor(Kendo.Mvc.SiteMapDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.PopulateSiteMapAttribute" /> class.
            </summary>
            <param name="siteMaps">The site maps.</param>
        </member>
        <member name="M:Kendo.Mvc.PopulateSiteMapAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.PopulateSiteMapAttribute" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.PopulateSiteMapAttribute.DefaultViewDataKey">
            <summary>
            Gets or sets the default view data key.
            </summary>
            <value>The default view data key.</value>
        </member>
        <member name="P:Kendo.Mvc.PopulateSiteMapAttribute.SiteMapName">
            <summary>
            Gets or sets the name of the site map.
            </summary>
            <value>The name of the site map.</value>
        </member>
        <member name="P:Kendo.Mvc.PopulateSiteMapAttribute.ViewDataKey">
            <summary>
            Gets or sets the view data key.
            </summary>
            <value>The view data key.</value>
        </member>
        <member name="P:Kendo.Mvc.PopulateSiteMapAttribute.SiteMaps">
            <summary>
            Gets or sets the site maps.
            </summary>
            <value>The site maps.</value>
        </member>
        <member name="M:Kendo.Mvc.PopulateSiteMapAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>
            Called before an action result executes.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="M:Kendo.Mvc.PopulateSiteMapAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>
            Called after an action result executes.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.SiteMapBase" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.SiteMapBase.DefaultCacheDurationInMinutes">
            <summary>
            Gets or sets the default cache duration in minutes.
            </summary>
            <value>The default cache duration in minutes.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapBase.DefaultCompress">
            <summary>
            Gets or sets a value indicating whether [default compress].
            </summary>
            <value>
                <c>true</c> if [default compress]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapBase.DefaultGenerateSearchEngineMap">
            <summary>
            Gets or sets a value indicating whether [default generate search engine map].
            </summary>
            <value>
                <c>true</c> if [default generate search engine map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapBase.RootNode">
            <summary>
            Gets or sets the root node.
            </summary>
            <value>The root node.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapBase.CacheDurationInMinutes">
            <summary>
            Gets or sets the cache duration in minutes.
            </summary>
            <value>The cache duration in minutes.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapBase.Compress">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Kendo.Mvc.SiteMapBase" /> is compress.
            </summary>
            <value>
                <c>true</c> if compress; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapBase.GenerateSearchEngineMap">
            <summary>
            Gets or sets a value indicating whether [generate search engine map].
            </summary>
            <value>
                <c>true</c> if [generate search engine map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBase.ToBuilder">
            <summary>
            Returns a new builder.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBase.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBase.op_Implicit(Kendo.Mvc.SiteMapBase)~Kendo.Mvc.SiteMapBuilder">
            <summary>
            Performs an implicit conversion from <see cref="T:Kendo.Mvc.SiteMapBase" /> to <see cref="T:Kendo.Mvc.SiteMapBuilder" />.
            </summary>
            <param name="siteMap">The site map.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBuilder.#ctor(Kendo.Mvc.SiteMapBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.SiteMapBuilder" /> class.
            </summary>
            <param name="siteMap">The site map.</param>
        </member>
        <member name="P:Kendo.Mvc.SiteMapBuilder.RootNode">
            <summary>
            Gets the root node.
            </summary>
            <value>The root node.</value>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBuilder.ToSiteMap">
            <summary>
            Returns the internal sitemap.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBuilder.CacheDurationInMinutes(System.Single)">
            <summary>
            Caches the duration in minutes.
            </summary>
            <param name="value">The value.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBuilder.Compress(System.Boolean)">
            <summary>
            Compresses the specified value.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBuilder.GenerateSearchEngineMap(System.Boolean)">
            <summary>
            Generates the search engine map.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapBuilder.op_Implicit(Kendo.Mvc.SiteMapBuilder)~Kendo.Mvc.SiteMapBase">
            <summary>
            Performs an implicit conversion from <see cref="T:Kendo.Mvc.SiteMapBuilder" /> to <see cref="T:Kendo.Mvc.SiteMapBase" />.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="P:Kendo.Mvc.SiteMapDictionary.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Kendo.Mvc.SiteMapBase" /> with the specified key.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapDictionary.DefaultSiteMapFactory">
            <summary>
            Gets or sets the default site map factory.
            </summary>
            <value>The default site map factory.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapDictionary.DefaultSiteMap">
            <summary>
            Gets or sets the default site map.
            </summary>
            <value>The default site map.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapDictionary.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <value>
            </value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="P:Kendo.Mvc.SiteMapDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <value>
            </value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Kendo.Mvc.SiteMapDictionary.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>
            </value>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </returns>
        </member>
        <member name="P:Kendo.Mvc.SiteMapDictionary.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>
            </value>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.Register``1(System.String,System.Action{``0})">
            <summary>
            Registers the specified name.
            </summary>
            <typeparam name="TSiteMap">The type of the site map.</typeparam>
            <param name="name">The name.</param>
            <param name="configure">The configure.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Kendo.Mvc.SiteMapBase})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </exception>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.Add(System.String,Kendo.Mvc.SiteMapBase)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="key" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.
            </exception>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </exception>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Kendo.Mvc.SiteMapBase})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="key" /> is null.
            </exception>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Kendo.Mvc.SiteMapBase}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="arrayIndex" /> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="array" /> is multidimensional.
            -or-
            <paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.
            -or-
            Type <paramref name="T" /> cannot be cast automatically to the type of the destination <paramref name="array" /></exception>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,Kendo.Mvc.SiteMapBase})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </exception>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="key" /> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.
            </exception>
        </member>
        <member name="M:Kendo.Mvc.SiteMapDictionary.TryGetValue(System.String,Kendo.Mvc.SiteMapBase@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
            <returns>
            true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="key" /> is null.
            </exception>
        </member>
        <member name="P:Kendo.Mvc.SiteMapManager.SiteMaps">
            <summary>
            Gets the site maps.
            </summary>
            <value>The site maps.</value>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.SiteMapNode" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Kendo.Mvc.SiteMapNode" /> is visible.
            </summary>
            <value>
                <c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.LastModifiedAt">
            <summary>
            Gets or sets the last modified at.
            </summary>
            <value>The last modified at.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.RouteName">
            <summary>
            Gets or sets the name of the route.
            </summary>
            <value>The name of the route.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.ControllerName">
            <summary>
            Gets or sets the name of the controller.
            </summary>
            <value>The name of the controller.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.ActionName">
            <summary>
            Gets or sets the name of the action.
            </summary>
            <value>The name of the action.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.RouteValues">
            <summary>
            Gets or sets the route values.
            </summary>
            <value>The route values.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.IncludeInSearchEngineIndex">
            <summary>
            Gets or sets a value indicating whether [include in search engine index].
            </summary>
            <value>
                <c>true</c> if [include in search engine index]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.Attributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Kendo.Mvc.SiteMapNode.ChildNodes">
            <summary>
            Gets or sets the child nodes.
            </summary>
            <value>The child nodes.</value>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNode.op_Implicit(Kendo.Mvc.SiteMapNode)~Kendo.Mvc.SiteMapNodeBuilder">
            <summary>
            Performs an implicit conversion from <see cref="T:Kendo.Mvc.SiteMapNode" /> to <see cref="T:Kendo.Mvc.SiteMapNodeBuilder" />.
            </summary>
            <param name="node">The node.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.#ctor(Kendo.Mvc.SiteMapNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.SiteMapNodeBuilder" /> class.
            </summary>
            <param name="siteMapNode">The site map node.</param>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.ToNode">
            <summary>
            Returns the internal node.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Title(System.String)">
            <summary>
            Sets the title.
            </summary>
            <param name="value">The value.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Visible(System.Boolean)">
            <summary>
            Sets the visibility.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.LastModifiedAt(System.DateTime)">
            <summary>
            Sets the Lasts the modified date..
            </summary>
            <param name="value">The value.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Route(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route.
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Route(System.String,System.Object)">
            <summary>
            Sets the route.
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Route(System.String)">
            <summary>
            Sets the route.
            </summary>
            <param name="routeName">Name of the route.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Action(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action to which the date should navigate
            </summary>
            <param name="routeValues">The route values of the Action method.</param>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action, controller and route values.
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Action(System.String,System.String,System.Object)">
            <summary>
            Sets the action, controller and route values.
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Action(System.String,System.String)">
            <summary>
            Sets the action and controller.
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Action``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Expression based controllerAction.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="controllerAction">The action.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Url(System.String)">
            <summary>
            Sets the url.
            </summary>
            <param name="value">The value.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.IncludeInSearchEngineIndex(System.Boolean)">
            <summary>
            Marks an item that it would be included in the search engine index.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Attributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the attributes
            </summary>
            <param name="value">The value.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.Attributes(System.Object)">
            <summary>
            Sets the attributes
            </summary>
            <param name="value">The value.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.ChildNodes(System.Action{Kendo.Mvc.SiteMapNodeFactory})">
            <summary>
            Executes the provided delegate to configure the child node.
            </summary>
            <param name="addActions">The add actions.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeBuilder.op_Implicit(Kendo.Mvc.SiteMapNodeBuilder)~Kendo.Mvc.SiteMapNode">
            <summary>
            Performs an implicit conversion from <see cref="T:Kendo.Mvc.SiteMapNodeBuilder" /> to <see cref="T:Kendo.Mvc.SiteMapNode" />.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeFactory.#ctor(Kendo.Mvc.SiteMapNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.SiteMapNodeFactory" /> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Kendo.Mvc.SiteMapNodeFactory.Add">
            <summary>
            Adds this instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.XmlSiteMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.XmlSiteMap" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.XmlSiteMap.DefaultPath">
            <summary>
            Gets or sets the default path.
            </summary>
            <value>The default path.</value>
        </member>
        <member name="M:Kendo.Mvc.XmlSiteMap.Load">
            <summary>
            Loads from the default path.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.XmlSiteMap.LoadFrom(System.String)">
            <summary>
            Loads from the specified path.
            </summary>
            <param name="relativeVirtualPath">The relative virtual path.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.CalendarBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Calendar" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.#ctor(Kendo.Mvc.UI.Calendar)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Calendar" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Culture(System.String)">
            <summary>
            Specifies the culture info used by the Calendar widget.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("calendar")
            .Culture("de-DE")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.CalendarEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .Events(events =&gt;
            events.Select("onSelect")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Format(System.String)">
            <summary>
            Sets the date format, which will be used to parse and format the machine date.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.FooterId(System.String)">
            <summary>
            FooterId to be used for rendering the footer of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .FooterId("widgetFooterId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Footer(System.String)">
            <summary>
            Footer template to be used for rendering the footer of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .Footer("#= kendo.toString(data, "G") #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Depth(Kendo.Mvc.UI.CalendarView)">
            <summary>
            Specifies the navigation depth.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .Depth(CalendarView.Month)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Start(Kendo.Mvc.UI.CalendarView)">
            <summary>
            Specifies the start view.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .Start(CalendarView.Month)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.MonthTemplateId(System.String)">
            <summary>
            MonthTemplateId to be used for rendering the cells of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .MonthTemplateId("widgetMonthTemplateId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.MonthTemplate(System.String)">
            <summary>
            Templates for the cells rendered in the "month" view.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .MonthTemplate("#= data.value #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.MonthTemplate(System.Action{Kendo.Mvc.UI.Fluent.MonthTemplateBuilder})">
            <summary>
            Configures the content of cells of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            .MonthTemplate(month =&gt; month.Content("#= data.value #"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Min(System.String)">
            <summary>
            Sets the minimal date, which can be selected in the calendar.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Max(System.String)">
            <summary>
            Sets the maximal date, which can be selected in the calendar.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Min(System.DateTime)">
            <summary>
            Sets the minimal date, which can be selected in the calendar
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Max(System.DateTime)">
            <summary>
            Sets the maximal date, which can be selected in the calendar
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Value(System.Nullable{System.DateTime})">
            <summary>
            Sets the value of the calendar
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Value(System.String)">
            <summary>
            Sets the value of the calendar
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.CalendarBuilder.Selection(System.Action{Kendo.Mvc.UI.Fluent.CalendarSelectionSettingsBuilder})">
            <summary>
            Configures the selection settings of the calendar.
            </summary>
            <param name="selectionAction">SelectAction settings, which includes Action name and IEnumerable of DateTime objects.</param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridDestroyActionCommandBuilder">
            <summary>
            Defines the fluent interface for configuring delete action command.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridDestroyActionCommandBuilder.#ctor(Kendo.Mvc.UI.GridDestroyActionCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GridDestroyActionCommandBuilder" /> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridActionCommandBuilderBase`2">
            <summary>
            Defines the fluent interface for configuring command.
            </summary>
            <typeparam name="TCommand">The type of the command.</typeparam>
            <typeparam name="TBuilder">The type of the builder.</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionCommandBuilderBase`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:GridActionCommandBuilderBase&lt; TColumn, TBuilder&gt;" /> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionCommandBuilderBase`2.Text(System.String)">
            <summary>
            Sets the text displayed by the command. If not set a default value is used.
            </summary>
            <param name="text">The text which should be displayed</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionCommandBuilderBase`2.HtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionCommandBuilderBase`2.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridEditActionCommandBuilder">
            <summary>
            Defines the fluent interface for configuring the edit action command.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEditActionCommandBuilder.#ctor(Kendo.Mvc.UI.GridEditActionCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GridEditActionCommandBuilder" /> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEditActionCommandBuilder.UpdateText(System.String)">
            <summary>
            Sets the text displayed by the "update" button. If not set a default value is used.
            </summary>
            <param name="text">The text which should be displayed</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEditActionCommandBuilder.CancelText(System.String)">
            <summary>
            Sets the text displayed by the "cancel" button. If not set a default value is used.
            </summary>
            <param name="text">The text which should be displayed</param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridDataKeyBuilder`1">
            <summary>
            Defines the fluent interface for configuring the data key.
            </summary>
            <typeparam name="TModel">The type of the model</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridDataKeyBuilder`1.#ctor(Kendo.Mvc.UI.IGridDataKey{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:GridDataKeyBuilder&lt;TModel&gt;" /> class.
            </summary>
            <param name="dataKey">The dataKey.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridDataKeyBuilder`1.RouteKey(System.String)">
            <summary>
            Sets the RouteKey.
            </summary>
            <param name="value">The value.</param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridDataKeyFactory`1">
            <summary>
            Creates data key for the <see cref="!:Grid{T}" />.
            </summary>
            <typeparam name="TModel">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridDataKeyFactory`1.#ctor(System.Collections.Generic.IList{Kendo.Mvc.UI.IGridDataKey{`0}},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="!:GridDataKeyFactory&lt;TModel&gt;" /> class.
            </summary>
            <param name="dataKeys">dataKeys</param>
            <param name="nameAsRouteKey">
            </param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridDataKeyFactory`1.Add``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines a data key.
            </summary>
            <typeparam name="TValue">
            </typeparam>
            <param name="expression">
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="!:NumericTextBox{T}" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Value(System.Nullable{`0})">
            <summary>
            Sets the initial value of the NumericTextBox.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Step(`0)">
            <summary>
            Sets the step, used ti increment/decrement the value of the textbox.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Min(System.Nullable{`0})">
            <summary>
            Sets the minimal possible value allowed to the user.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Max(System.Nullable{`0})">
            <summary>
            Sets the maximal possible value allowed to the user.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Placeholder(System.String)">
            <summary>
            Sets the text which will be displayed if the textbox is empty.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Spinners(System.Boolean)">
            <summary>
            Enables or disables the spin buttons.
            </summary>
            <param name="allowSpinner">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Events(System.Action{Kendo.Mvc.UI.Fluent.NumericTextBoxEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="EventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().NumericTextBox()
            .Name("NumericTextBox")
            .Events(events =&gt;
            events.OnLoad("onLoad").OnChange("onChange")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Enable(System.Boolean)">
            <summary>
            Enables or disables the textbox.
            </summary>
            <param name="allowSpinner">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Format(System.String)">
            <summary>
            Stes the format of the NumericTextBox.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().NumericTextBox()
            .Name("NumericTextBox")
            .Format("c3")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Culture(System.String)">
            <summary>
            Specifies the culture info used by the NumericTextBox widget.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().NumericTextBox()
            .Name("NumericTextBox")
            .Culture("de-DE")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.Decimals(System.Int32)">
            <summary>
            Specifies the number precision. If not set precision defined by current culture is used.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().NumericTextBox()
            .Name("NumericTextBox")
            .Decimals(3)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.IncreaseButtonTitle(System.String)">
            <summary>Sets the title of the NumericTextBox increase button.</summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxBuilder`1.DecreaseButtonTitle(System.String)">
            <summary>Sets the title of the NumericTextBox decrease button.</summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.NumericTextBoxEventBuilder">
            <summary>
            Defines the fluent interface for configuring the NumericTextBox events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxEventBuilder.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Change client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().NumericTextBox()
            .Name("NumericTextBox")
            .Events(events =&gt; events.Change(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxEventBuilder.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().NumericTextBox()
            .Name("NumericTextBox")
            .Events(events =&gt; events.Change("change"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxEventBuilder.Spin(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Spin client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().NumericTextBox()
            .Name("NumericTextBox")
            .Events(events =&gt; events.Spin(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NumericTextBoxEventBuilder.Spin(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Spin client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().NumericTextBox()
            .Name("NumericTextBox")
            .Events(events =&gt; events.Spin("spin"))
            )
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TimePickerBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.TimePicker" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TimePickerBuilder.#ctor(Kendo.Mvc.UI.TimePicker)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TimePickerBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TimePickerBuilder.Value(System.Nullable{System.TimeSpan})">
            <summary>
            Sets the value of the timepicker input
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TimePickerBuilder.Min(System.TimeSpan)">
            <summary>
            Sets the minimum time, which can be selected in timepicker
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TimePickerBuilder.Min(System.String)">
            <summary>
            Sets the minimum time, which can be selected in timepicker
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TimePickerBuilder.Max(System.TimeSpan)">
            <summary>
            Sets the maximum time, which can be selected in timepicker
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TimePickerBuilder.Max(System.String)">
            <summary>
            Sets the maximum time, which can be selected in timepicker
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TimePickerBuilder.Interval(System.Int32)">
            <summary>
            Sets the interval between hours.
            </summary>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.TimePickerBuilder.BindTo(System.Collections.Generic.IList{System.DateTime})-->
        <member name="T:Kendo.Mvc.UI.Fluent.TooltipEventBuilder">
            <summary>
            Defines the fluent interface for configuring tooltip client events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.Show(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Show client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.Show(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.Show(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Show client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.Show("show"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.Hide(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Hide client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.Hide(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.Hide(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Hide client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.Hide("hide"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.ContentLoad(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the ContentLoad client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.ContentLoad(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.ContentLoad(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ContentLoad client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.ContentLoad("contentLoad"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.Error(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Error client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.Error(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.Error(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Error client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.Error("error"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.RequestStart(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the RequestStart client-side event
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.RequestStart(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipEventBuilder.RequestStart(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the RequestStart client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Tooltip()
            .For("#element")
            .Events(events =&gt; events.RequestStart("requestStart"))
            )
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TooltipBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Tooltip" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.#ctor(Kendo.Mvc.UI.Tooltip)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TooltipBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.For(System.String)">
            <summary>
            The selector which to match the DOM element to which the Tooltip widget will be instantiated
            </summary>
            <param name="selector">jQuery selector</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Filter(System.String)">
            <summary>
            The selector which to match target child elements for which the Tooltip will be shown
            </summary>
            <param name="selector">jQuery selector</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Position(Kendo.Mvc.UI.TooltipPosition)">
            <summary>
            The position (relative to the target) at which the Tooltip will be shown
            </summary>
            <param name="position">The position</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.ShowAfter(System.Int32)">
            <summary>
            The inverval in milliseconds, after which the Tooltip will be shown
            </summary>
            <param name="milliseconds">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Callout(System.Boolean)">
            <summary>
            Determines if callout should be visible
            </summary>
            <param name="show">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.AutoHide(System.Boolean)">
            <summary>
            Determines if tooltip should be automatically hidden, or a close button should be present
            </summary>
            <param name="value">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.LoadContentFrom(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="routeValues">The route values of the Action method.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Tooltip()
            .For("#element")
            .LoadContentFrom(MVC.Home.Index().GetRouteValueDictionary());
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.LoadContentFrom(System.String,System.String)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="actionName">The action name.</param>
            <param name="controllerName">The controller name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Tooltip()
            .For("#element")
            .LoadContentFrom("AjaxView_OpenSource", "Tooltip")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.LoadContentFrom(System.String,System.String,System.Object)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="actionName">The action name.</param>
            <param name="controllerName">The controller name.</param>
            <param name="routeValues">Route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Tooltip()
            .For("#element")
            .LoadContentFrom("AjaxView_OpenSource", "Tooltip", new { id = 10})
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.LoadContentFrom(System.String)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="value">The url.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Tooltip()
            .For("#element")
            .LoadContentFrom(Url.Action("AjaxView_OpenSource", "Tooltip"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Content(System.String)">
            <summary>
            Sets the HTML content which the tooltip should display as a string.
            </summary>
            <param name="value">The action which renders the content.</param>
            <code lang="CS">
            &lt;%= Html.Kendo().Tooltip()
            .For("#element")
            .Content("&lt;strong&gt; First Item Content&lt;/strong&gt;")
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.ContentTemplateId(System.String)">
            <summary>
            Sets the id of kendo template which will be used as tooltip content.
            </summary>
            <param name="value">The id of the template</param>
            <code lang="CS">
            &lt;%= Html.Kendo().Tooltip()
            .For("#element")
            .Content("template")
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.ContentHandler(System.Func{System.Object,System.Object})">
            <summary>
            Sets JavaScript function which to return the content for the tooltip.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.ContentHandler(System.String)">
            <summary>
            Sets JavaScript function which to return the content for the tooltip.
            </summary>
            <param name="handler">JavaScript function name</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Animation(System.Boolean)">
            <summary>
            Configures the animation effects of the window.
            </summary>
            <param name="enable">Whether the component animation is enabled.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Tooltip()
            .For("#element")
            .Animation(false)
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Animation(System.Action{Kendo.Mvc.UI.Fluent.PopupAnimationBuilder})">
            <summary>
            Configures the animation effects of the panelbar.
            </summary>
            <param name="animationAction">The action that configures the animation.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Tooltip()
            .For("#element")
            .Animation(animation =&gt; animation.Expand)
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Width(System.Int32)">
            <summary>
            Sets the width of the tooltip.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Height(System.Int32)">
            <summary>
            Sets the height of the tooltip.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Deferred">
            <summary>
            Suppress initialization script rendering. Note that this options should be used in conjunction with <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.DeferredScripts(System.Boolean)" /></summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.ToComponent">
            <summary>
            Returns the internal view component.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TooltipBuilder.Render">
            <summary>
            Renders the component.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TreeViewCheckboxesBuilder">
            <summary>
            Defines the fluent interface for configuring child TreeView items.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewCheckboxesBuilder.#ctor(Kendo.Mvc.UI.TreeViewCheckboxesSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TreeViewCheckboxesBuilder" /> class.
            </summary>
            <param name="settings">The checkbox settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewCheckboxesBuilder.Enabled(System.Boolean)">
            <summary>
            Enable/disable rendering of checkboxes in the treeview.
            </summary>
            <param name="enabled">Whether checkboxes should be rendered.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Checkboxes(config =&gt; config
            .Enabled(true)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewCheckboxesBuilder.CheckChildren(System.Boolean)">
            <summary>
            Enable/disable checking of child checkboxes in the treeview.
            </summary>
            <param name="enabled">Whether checking of parent checkboxes should check child checkboxes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Checkboxes(config =&gt; config
            .CheckChildren(true)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewCheckboxesBuilder.Template(System.String)">
            <summary>
            Client-side template to be used for rendering the items in the treeview.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Checkboxes(config =&gt; config
            .Template("#= data #")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewCheckboxesBuilder.TemplateId(System.String)">
            <summary>
            Id of the element that holds the client-side template to be used for rendering the items in the treeview.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Checkboxes(config =&gt; config
            .TemplateId("widgetTemplateId")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder">
            <summary>
            Defines the fluent interface for building <see cref="T:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder.#ctor(Kendo.Mvc.UI.TreeViewBindingSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder.Enabled(System.Boolean)">
            <summary>
            Enables or disables binding.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataBinding(dataBinding =&gt;
            {
            dataBinding.Ajax().Select("Index", "Home").Enabled((bool)ViewData["ajax"]);
            })
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable binding based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder.Select(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action, controller and route values
            </summary>
            <param name="routeValues">The route values of the Action method.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .DataBinding(dataBinding =&gt;
            {
            dataBinding.Ajax().Select(MVC.Home.Index(1).GetRouteValueDictionary());
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder.Select(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action, controller and route values for the select operation
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataBinding(dataBinding =&gt;
            {
            dataBinding.Ajax().Select("Index", "Home", new RouteValueDictionary{ {"id", 1} });
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder.Select(System.String,System.String,System.Object)">
            <summary>
            Sets the action, controller and route values for the select operation
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataBinding(dataBinding =&gt;
            {
            dataBinding.Ajax().Select("Index", "Home", new { {"id", 1} });
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder.Select(System.String,System.String)">
            <summary>
            Sets the action, controller and route values for the select operation
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataBinding(dataBinding =&gt;
            {
            dataBinding.Ajax().Select("Index", "Home");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder.Select(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route and values for the select operation
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataBinding(dataBinding =&gt;
            {
            dataBinding.Ajax().Select("Default", "Home", new RouteValueDictionary{ {"id", 1} });
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder.Select(System.String,System.Object)">
            <summary>
            Sets the route and values for the select operation
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataBinding(dataBinding =&gt;
            {
            dataBinding.Ajax().Select("Default", new {id=1});
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBindingSettingsBuilder.Select(System.String)">
            <summary>
            Sets the route name for the select operation
            </summary>
            <param name="routeName">Name of the route.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataBinding(dataBinding =&gt;
            {
            dataBinding.Ajax().Select("Default");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TreeViewBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.TreeView" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.#ctor(Kendo.Mvc.UI.TreeView)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TreeViewBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.AutoBind(System.Boolean)">
            <summary>
            Controls whether to bind the widget to the DataSource on initialization.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .AutoBind(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.CheckboxTemplate(System.String)">
            <summary>
            Template to be used for rendering the item checkboxes in the treeview.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .CheckboxTemplate("#= data #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.CheckboxTemplateId(System.String)">
            <summary>
            Id of the template element to be used for rendering the item checkboxes in the treeview.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .CheckboxTemplateId("widgetTemplateId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.Template(System.String)">
            <summary>
            Template to be used for rendering the items in the treeview.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Template("#= data #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.TemplateId(System.String)">
            <summary>
            Id of the template element to be used for rendering the items in the treeview.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .TemplateId("widgetTemplateId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.Checkboxes(System.Boolean)">
            <summary>
            Enable/disable rendering of checkboxes in the treeview.
            </summary>
            <param name="enabled">Whether checkboxes should be rendered.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Checkboxes(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.Checkboxes(System.Action{Kendo.Mvc.UI.Fluent.TreeViewCheckboxesBuilder})">
            <summary>
            Configures rendering of checkboxes in the treeview.
            </summary>
            <param name="configure">Builder of the treeview checkboxes configuration.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Checkboxes(config =&gt; config
            .CheckChildren(true)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.TreeViewItemFactory})">
            <summary>
            Defines the items in the TreeView
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.TreeViewEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt;
            .OnDataBinding("onDataBinding")
            .OnItemDataBound("onItemDataBound")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.BindTo(System.String,System.Action{Kendo.Mvc.UI.TreeViewItem,Kendo.Mvc.SiteMapNode})">
            <summary>
            Binds the TreeView to a sitemap
            </summary>
            <param name="viewDataKey">The view data key.</param>
            <param name="siteMapAction">The action to configure the item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .BindTo("examples", (item, siteMapNode) =&gt;
            {
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.BindTo(System.String)">
            <summary>
            Binds the TreeView to a sitemap.
            </summary>
            <param name="viewDataKey">The view data key.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .BindTo("examples")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.BindTo(System.Collections.Generic.IEnumerable{Kendo.Mvc.UI.TreeViewItemModel})">
            <summary>
            Binds the TreeView to a list of items.
            Use if a hierarchy of items is being sent from the controller; to bind the TreeView declaratively, use the Items() method.
            </summary>
            <param name="items">The list of items</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .BindTo(model)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.BindTo``1(System.Collections.Generic.IEnumerable{``0},System.Action{Kendo.Mvc.UI.TreeViewItem,``0})">
            <summary>
            Binds the TreeView to a list of objects. The TreeView will be "flat" which means a TreeView item will be created for
            every item in the data source.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <param name="itemDataBound">The action executed for every data bound item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .BindTo(new []{"First", "Second"}, (item, value)
            {
            item.Text = value;
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.BindTo(System.Collections.IEnumerable,System.Action{Kendo.Mvc.UI.Fluent.NavigationBindingFactory{Kendo.Mvc.UI.TreeViewItem}})">
            <summary>
            Binds the TreeView to a list of objects. The TreeView will create a hierarchy of items using the specified mappings.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <param name="factoryAction">The action which will configure the mappings</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .BindTo(Model, mapping =&gt; mapping
            .For&lt;Customer&gt;(binding =&gt; binding
            .Children(c =&gt; c.Orders) // The "child" items will be bound to the the "Orders" property
            .ItemDataBound((item, c) =&gt; item.Text = c.ContactName) // Map "Customer" properties to TreeViewItem properties
            )
            .For&lt;Order&lt;(binding =&gt; binding
            .Children(o =&gt; null) // "Orders" do not have child objects so return "null"
            .ItemDataBound((item, o) =&gt; item.Text = o.OrderID.ToString()) // Map "Order" properties to TreeViewItem properties
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.ItemAction(System.Action{Kendo.Mvc.UI.TreeViewItem})">
            <summary>
            Callback for each item.
            </summary>
            <param name="action">Action, which will be executed for each item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .ItemAction(item =&gt;
            {
            item
            .Text(...)
            .HtmlAttributes(...);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.HighlightPath(System.Boolean)">
            <summary>
            Select item depending on the current URL.
            </summary>
            <param name="value">If true the item will be highlighted.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .HighlightPath(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.Animation(System.Boolean)">
            <summary>
            Use to enable or disable animation of the TreeView.
            </summary>
            <param name="enable">The boolean value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            	           .Name("TreeView")
            	           .Animation(false) //toggle effect
            	%&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.Animation(System.Action{Kendo.Mvc.UI.Fluent.ExpandableAnimationBuilder})">
            <summary>
            Configures the animation effects of the widget.
            </summary>
            <param name="animationAction">The action which configures the animation effects.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            	           .Name("TreeView")
            	           .Animation(animation =&gt;
            	           {
            		            animation.Expand(open =&gt;
            		            {
            		                open.SlideIn(SlideDirection.Down);
            		            }
            	           })
            	%&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.ExpandAll(System.Boolean)">
            <summary>
            Expand all the items.
            </summary>
            <param name="value">If true all the items will be expanded.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .ExpandAll(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.DragAndDrop(System.Boolean)">
            <summary>
            Enables drag &amp; drop between treeview nodes.
            </summary>
            <param name="value">If true, drag &amp; drop is enabled.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            .DragAndDrop(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.SecurityTrimming(System.Boolean)">
            <summary>
            Enable/disable security trimming functionality of the component.
            </summary>
            <param name="value">If true security trimming is enabled.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .SecurityTrimming(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.SecurityTrimming(System.Action{Kendo.Mvc.UI.SecurityTrimmingBuilder})">
            <summary>
            Defines the security trimming functionality of the component
            </summary>
            <param name="securityTrimmingAction">The securityTrimming action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .SecurityTrimming(builder =&gt;
            {
            builder.Enabled(true).HideParent(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.DataTextField(System.String)">
            <summary>
            Sets the name of the field that will supply the item text.
            </summary>
            <param name="field">The field name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataTextField("Name")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.DataUrlField(System.String)">
            <summary>
            Sets the name of the field that will supply the item URL.
            </summary>
            <param name="field">The field name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataUrlField("LinksTo")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.DataSpriteCssClassField(System.String)">
            <summary>
            Sets the name of the field that will supply the CSS class for the item sprite image.
            </summary>
            <param name="field">The field name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataSpriteCssClassField("IconSprite")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.DataImageUrlField(System.String)">
            <summary>
            Sets the name of the field that will supply the URL for the item image.
            </summary>
            <param name="field">The field name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataImageUrlField("ImageURL")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.DataSource(System.Action{Kendo.Mvc.UI.Fluent.ReadOnlyDataSourceBuilder})">
            <summary>
            Configure the DataSource of the component
            </summary>
            <param name="configurator">The action that configures the <see cref="T:Kendo.Mvc.UI.DataSource" />.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .DataSource(dataSource =&gt; dataSource
            .Read(read =&gt; read
            .Action("Employees", "TreeView")
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewBuilder.LoadOnDemand(System.Boolean)">
            <summary>
            Allows the treeview to fetch the entire datasource at initialization time.
            </summary>
            <param name="field">Whether the datasource should be loaded on demand.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .LoadOnDemand(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder">
            <summary>
            Defines the fluent API for configuring the events of the Kendo TreeView for ASP.NET MVC
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Collapse(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the collapse client-side event
            </summary>
            <param name="onCollapseAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Collapse(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Collapse(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the collapse client-side event.
            </summary>
            <param name="onCollapseHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Collapse("onExpand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.DataBound(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the dataBound client-side event
            </summary>
            <param name="onDataBoundAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.DataBound(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.DataBound(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the dataBound client-side event.
            </summary>
            <param name="onDataBoundHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.DataBound("onExpand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Drag(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the drag client-side event
            </summary>
            <param name="onDragAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Drag(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Drag(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the drag client-side event.
            </summary>
            <param name="onDragHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Drag("onExpand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.DragEnd(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the dragend client-side event
            </summary>
            <param name="onDragEndAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.DragEnd(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.DragEnd(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the dragend client-side event.
            </summary>
            <param name="onDragEndHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.DragEnd("onExpand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.DragStart(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the dragstart client-side event
            </summary>
            <param name="onDragStartAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.DragStart(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.DragStart(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the dragstart client-side event.
            </summary>
            <param name="onDragStartHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.DragStart("onExpand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Drop(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the drop client-side event
            </summary>
            <param name="onDropAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Drop(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Drop(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the drop client-side event.
            </summary>
            <param name="onDropHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Drop("onExpand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Expand(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the expand client-side event
            </summary>
            <param name="onExpandAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Expand(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Expand(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the expand client-side event.
            </summary>
            <param name="onExpandHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Expand("onExpand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Select(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the select client-side event
            </summary>
            <param name="onSelectAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Select(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Select(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the select client-side event.
            </summary>
            <param name="onSelectHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Select("onExpand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the change client-side event
            </summary>
            <param name="onChangeAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Change(
            @&lt;text&gt;
            function(e) {
            // event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewEventBuilder.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the change client-side event.
            </summary>
            <param name="onChangeHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Events(events =&gt; events.Change("onChange"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TreeViewItemBuilder">
            <summary>
            Defines the fluent interface for configuring child TreeView items.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewItemBuilder.#ctor(Kendo.Mvc.UI.TreeViewItem,System.Web.Mvc.ViewContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TreeViewItemBuilder" /> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewItemBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.TreeViewItemFactory})">
            <summary>
            Configures the child items of a <see cref="T:Kendo.Mvc.UI.TreeViewItem" />.
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().TreeView()
            .Name("TreeView")
            .Items(items =&gt;
            {
            items.Add().Text("First Item").Items(firstItemChildren =&gt;
            {
            firstItemChildren.Add().Text("Child Item 1");
            firstItemChildren.Add().Text("Child Item 2");
            });
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewItemBuilder.Id(System.String)">
            <summary>
            Sets the id of the item.
            </summary>
            <param name="value">The id.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().TreeView()
            .Name("TreeView")
            .Items(items =&gt; items.Add().Id("42"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewItemBuilder.Expanded(System.Boolean)">
            <summary>
            Define when the item will be expanded on intial render.
            </summary>
            <param name="value">If true the item will be expanded.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().TreeView()
            .Name("TreeView")
            .Items(items =&gt;
            {
            items.Add().Text("First Item").Items(firstItemChildren =&gt;
            {
            firstItemChildren.Add().Text("Child Item 1");
            firstItemChildren.Add().Text("Child Item 2");
            })
            .Expanded(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewItemBuilder.Checked(System.Boolean)">
            <summary>
            Specify whether the item should be initially checked.
            </summary>
            <param name="value">If true, the item will be checked.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().TreeView()
            .Name("TreeView")
            .Checkboxes(true)
            .Items(items =&gt;
            {
            items.Add().Text("Item").Checked(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewItemBuilder.HasChildren(System.Boolean)">
            <summary>
            Sets the expand mode of the treeview item.
            </summary>
            <param name="value">If true then item will be loaded on demand from client side, if the treeview DataSource is properly configured.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Telerik().TreeView()
            .Name("TreeView")
            .Items(items =&gt;
            {
            items.Add().Text("First Item").Items(firstItemChildren =&gt;
            {
            firstItemChildren.Add().Text("Child Item 1");
            firstItemChildren.Add().Text("Child Item 2");
            })
            .HasChildren(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TreeViewItemFactory">
            <summary>
            Creates items for the <see cref="T:Kendo.Mvc.UI.TreeView" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewItemFactory.#ctor(Kendo.Mvc.UI.INavigationItemContainer{Kendo.Mvc.UI.TreeViewItem},System.Web.Mvc.ViewContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TreeViewItemFactory" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TreeViewItemFactory.Add">
            <summary>
            Defines a item.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.TreeViewItemModel">
            <summary>
            Used for serializing <see cref="T:Kendo.Mvc.UI.TreeViewItem" /> objects.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.TreeView.Items">
            <summary>
            Gets the items of the treeview.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.TreeView.ItemAction">
            <summary>
            Gets or sets the item action.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.TreeView.Effects">
            <summary>
            Gets or sets the effects.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.TreeView.ExpandAll">
            <summary>
            Gets or sets a value indicating whether all the item is expanded.
            </summary>
            <value>
                <c>true</c> if expand all is enabled; otherwise, <c>false</c>. The default value is <c>false</c></value>
        </member>
        <member name="T:Kendo.Mvc.UI.TreeViewItem">
            <summary>
            Represents an item from Kendo TreeView for ASP.NET MVC
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.DatePickerBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.DatePicker" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.#ctor(Kendo.Mvc.UI.DatePicker)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.DatePickerBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.BindTo(System.Collections.Generic.List{System.DateTime})-->
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.FooterId(System.String)">
            <summary>
            FooterId to be used for rendering the footer of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            .FooterId("widgetFooterId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.Footer(System.String)">
            <summary>
            Footer template to be used for rendering the footer of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Footer("#= kendo.toString(data, "G") #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.Depth(Kendo.Mvc.UI.CalendarView)">
            <summary>
            Specifies the navigation depth.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Depth(CalendarView.Month)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.Start(Kendo.Mvc.UI.CalendarView)">
            <summary>
            Specifies the start view.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            .Start(CalendarView.Month)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.MonthTemplateId(System.String)">
            <summary>
            MonthTemplateId to be used for rendering the cells of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            .MonthTemplateId("widgetMonthTemplateId")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.MonthTemplate(System.String)">
            <summary>
            Templates for the cells rendered in the "month" view.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            .MonthTemplate("#= data.value #")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.MonthTemplate(System.Action{Kendo.Mvc.UI.Fluent.MonthTemplateBuilder})">
            <summary>
            Configures the content of cells of the Calendar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            .MonthTemplate(month =&gt; month.Content("#= data.value #"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.Min(System.String)">
            <summary>
            Sets the minimal date, which can be selected in DatePicker.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.DatePickerBuilder.Max(System.String)">
            <summary>
            Sets the maximal date, which can be selected in DatePicker.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ContentNavigationItemBuilder`2.LoadContentFrom(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="routeValues">The route values of the Action method.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Items(parent =&gt; {
            parent.Add()
            .LoadContentFrom(MVC.Home.Index().GetRouteValueDictionary());
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ContentNavigationItemBuilder`2.LoadContentFrom(System.String,System.String)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="actionName">The action name.</param>
            <param name="controllerName">The controller name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Items(parent =&gt; {
            parent.Add()
            .Text("Completely Open Source")
            .LoadContentFrom("AjaxView_OpenSource", "PanelBar");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ContentNavigationItemBuilder`2.LoadContentFrom(System.String,System.String,System.Object)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="actionName">The action name.</param>
            <param name="controllerName">The controller name.</param>
            <param name="routeValues">Route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Items(parent =&gt; {
            parent.Add()
            .Text("Completely Open Source")
            .LoadContentFrom("AjaxView_OpenSource", "PanelBar", new { id = 10});
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.ContentNavigationItemBuilder`2.LoadContentFrom(System.String)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="value">The url.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Items(parent =&gt; {
            parent.Add()
            .Text("Completely Open Source")
            .LoadContentFrom(Url.Action("AjaxView_OpenSource", "PanelBar"));
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.GridBoundColumn`2.#ctor(Kendo.Mvc.UI.Grid{`0},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="!:GridBoundColumn{TModel, TValue}" /> class.
            </summary>
            <param name="grid">
            </param>
            <param name="expression">
            </param>
        </member>
        <member name="P:Kendo.Mvc.UI.GridBoundColumn`2.MemberType">
            <summary>
            Gets type of the property to which the column is bound to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GridBoundColumn`2.Groupable">
            <summary>
            Gets or sets a value indicating whether this column is groupable.
            </summary>
            <value>
                <c>true</c> if groupable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GridBoundColumn`2.Value">
            <summary>
            Gets a function which returns the value of the property to which the column is bound to.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GridBoundColumn`2.Sortable">
            <summary>
            Gets or sets a value indicating whether this <see cref="!:GridColumnBase{T}" /> is sortable.
            </summary>
            <value>
                <c>true</c> if sortable; otherwise, <c>false</c>. The default value is <c>true</c>.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GridBoundColumn`2.Filterable">
            <summary>
            Gets or sets a value indicating whether this <see cref="!:GridColumnBase{T}" /> is filterable.
            </summary>
            <value>
                <c>true</c> if filterable; otherwise, <c>false</c>. The default value is <c>true</c>.</value>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1">
            <summary>
            Defines the fluent interface for configuring bound columns
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.#ctor(Kendo.Mvc.UI.IGridBoundColumn)">
            <summary>
            Initializes a new instance of the <see cref="!:GridBoundColumnBuilder{T}" /> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.Format(System.String)">
            <summary>
            Gets or sets the format for displaying the data.
            </summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderDate).Format("{0:dd/MM/yyyy}"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.EditorViewData(System.Object)">
            <summary>
            Provides additional view data in the editor template for that column (if any).
            </summary>
            <remarks>
            The additional view data will be provided if the editing mode is set to in-line or in-cell. Otherwise
            use <see cref="!:GridEditingSettingsBuilder{T}.AdditionalViewData" /></remarks>
            <param name="additionalViewData">An anonymous object which contains the additional data</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; {
            columns.Bound(o =&gt; o.Customer).EditorViewData(new { customers = Model.Customers });
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.EditorTemplateName(System.String)">
            <summary>
            Specify which editor template should be used for the column
            </summary>
            <param name="templateName">name of the editor template</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.Sortable(System.Boolean)">
            <summary>
            Enables or disables sorting the column. All bound columns are sortable by default.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderDate).Sortable(false))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.Groupable(System.Boolean)">
            <summary>
            Enables or disables grouping by that column. All bound columns are groupable by default.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderDate).Groupable(false))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.Filterable(System.Boolean)">
            <summary>
            Enables or disables filtering the column. All bound columns are filterable by default.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderDate).Filterable(false))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.Encoded(System.Boolean)">
            <summary>
            Enables or disables HTML encoding the data of the column. All bound columns are encoded by default.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderDate).Encoded(false))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.Template(System.Action{`0})">
            <summary>
            Sets the template for the column.
            </summary>
            <param name="templateAction">The action defining the template.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns
            .Add(c =&gt; c.CustomerID)
            .Template(() =&gt;
            {
            %&gt;
            &gt;img
            alt="&lt;%= c.CustomerID %&gt;"
            src="&lt;%= Url.Content("~/Content/Grid/Customers/" + c.CustomerID + ".jpg") %&gt;"
            /&gt;
            &lt;%
            }).Title("Picture");)
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.Template(System.Func{`0,System.Object})">
            <summary>
            Sets the template for the column.
            </summary>
            <param name="inlineTemplate">The action defining the template.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.ClientTemplate(System.String)">
            <summary>
            Sets the client template for the column.
            </summary>
            <param name="value">The template</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.ClientGroupHeaderTemplate(System.String)">
            <summary>
            Sets the client group template for the column.
            </summary>
            <param name="value">The template</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.ClientGroupFooterTemplate(System.String)">
            <summary>
            Sets the client group footer template for the column.
            </summary>
            <param name="value">The template</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.FooterTemplate(System.Action{Kendo.Mvc.UI.GridAggregateResult})">
            <summary>
            Sets the footer template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.FooterTemplate(System.Func{Kendo.Mvc.UI.GridAggregateResult,System.Object})">
            <summary>
            Sets the footer template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.GroupFooterTemplate(System.Action{Kendo.Mvc.UI.GridAggregateResult})">
            <summary>
            Sets the group footer template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.GroupFooterTemplate(System.Func{Kendo.Mvc.UI.GridAggregateResult,System.Object})">
            <summary>
            Sets the group footer template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.GroupHeaderTemplate(System.Action{Kendo.Mvc.UI.GridGroupAggregateResult})">
            <summary>
            Sets the group footer template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBoundColumnBuilder`1.GroupHeaderTemplate(System.Func{Kendo.Mvc.UI.GridGroupAggregateResult,System.Object})">
            <summary>
            Sets the group footer template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridEventBuilder">
            <summary>
            Defines the fluent API for configuring the Kendo Grid for ASP.NET MVC events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Change(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Change(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Change(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Change client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Change("gridChange"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Cancel(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Cancel client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Cancel(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Cancel(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Cancel client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Cancel("gridCancel"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Edit(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Edit client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Edit(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Edit(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Edit client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Edit("gridEdit"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Save(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Save client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Save(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Save(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Save client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Save("gridSave"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.SaveChanges(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the SaveChanges client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.SaveChanges(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.SaveChanges(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the SaveChanges client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.SaveChanges("gridSaveChanges"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DetailExpand(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the DetailExpand client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DetailExpand(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DetailExpand(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DetailExpand client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DetailExpand("gridDetailExpand"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DetailInit(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the DetailInit client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DetailInit(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DetailInit(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DetailInit client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DetailInit("gridDetailInit"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DetailCollapse(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the DetailCollapse client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DetailCollapse(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DetailCollapse(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DetailCollapse client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DetailCollapse("gridDetailCollapse"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Remove(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Remove client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Remove(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.Remove(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Remove client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.Remove("gridRemove"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DataBound(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the DataBound client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DataBound(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DataBound(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DataBound client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DataBound("gridDataBound"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DataBinding(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the DataBinding client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DataBinding(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.DataBinding(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DataBinding client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.DataBinding("gridDataBinding"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnResize(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the ColumnResize client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnResize(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnResize(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ColumnResize client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnResize("gridColumnResize"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnReorder(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the ColumnReorder client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnReorder(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnReorder(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ColumnReorder client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnReorder("gridColumnReorder"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnHide(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the ColumnHide client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnHide(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnHide(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ColumnHide client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnHide("gridColumnHide"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnShow(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the ColumnShow client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnShow(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnShow(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ColumnShow client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnShow("gridColumnShow"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnMenuInit(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the ColumnMenuInit client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnMenuInit(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.ColumnMenuInit(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the ColumnMenuInit client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.ColumnMenuInit("gridColumnMenuInit"))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.FilterMenuInit(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the FilterMenuInit client-side event.
            </summary>
            <param name="handler">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.FilterMenuInit(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            )
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridEventBuilder.FilterMenuInit(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the FilterMenuInit client-side event.
            </summary>
            <param name="handler">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events.FilterMenuInit("gridFilterMenuInit"))
            )
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.GridCell`1">
            <summary>
            Represents a cell from Kendo Grid for ASP.NET MVC
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridActionColumnBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Fluent.GridActionColumnBuilder" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionColumnBuilder.#ctor(Kendo.Mvc.UI.IGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GridActionColumnBuilder" /> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridActionCommandFactory`1">
            <summary>
            Creates command for the <see cref="!:Grid{T}" />.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionCommandFactory`1.#ctor(Kendo.Mvc.UI.GridActionColumn{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:GridActionCommandFactory{T}" /> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionCommandFactory`1.Edit">
            <summary>
            Defines a edit command.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionCommandFactory`1.Destroy">
            <summary>
            Defines a delete command.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionCommandFactory`1.Select">
            <summary>
            Defines a select command.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridActionCommandFactory`1.Custom(System.String)">
            <summary>
            Defines a custom command.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridFilterableSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:Grid{T}.Filterable" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridFilterableSettingsBuilderBase`1.#ctor(Kendo.Mvc.UI.GridFilterableSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.GridFilterableSettings" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridFilterableSettingsBuilderBase`1.Enabled(System.Boolean)">
            <summary>
            Enables or disables filtering
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Filterable(filtering =&gt; filtering.Enabled((bool)ViewData["enableFiltering"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable filtering based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridFilterableSettingsBuilderBase`1.Operators(System.Action{Kendo.Mvc.UI.Fluent.FilterableOperatorsBuilder})">
            <summary>
            Configures the Filter menu operators.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridFilterableSettingsBuilderBase`1.Messages(System.Action{Kendo.Mvc.UI.Fluent.FilterableMessagesBuilder})">
            <summary>
            Configures Filter menu messages.
            </summary>
            <param name="configurator">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridFilterableSettingsBuilderBase`1.Extra(System.Boolean)">
            <summary>
            Specify if the extra input fields should be visible within the filter menu. Default is true.
            </summary>
            <param name="value">True to show the extra inputs, otherwise false</param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.GridRow`1">
            <summary>
            Represents a row from Kendo Grid for ASP.NET MVC
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridScrollSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:Grid{T}.Scrollable" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridScrollSettingsBuilder.#ctor(Kendo.Mvc.UI.GridScrollableSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.GridScrollSettingsBuilder" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridScrollSettingsBuilder.Enabled(System.Boolean)">
            <summary>
            Enables or disables scrolling.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Scrolling(scrolling =&gt; scrolling.Enabled((bool)ViewData["enableScrolling"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable scrolling based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridScrollSettingsBuilder.Height(System.Int32)">
            <summary>
            Sets the height of the scrollable area in pixels.
            </summary>
            <param name="pixelHeight">The height in pixels.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Scrolling(scrolling =&gt; scrolling.Height(400))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridScrollSettingsBuilder.Height(System.String)">
            <summary>
            Sets the height of the scrollable.
            </summary>
            <param name="value">The height in pixels.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Scrolling(scrolling =&gt; scrolling.Height("20em"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridSelectionSettingsBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:Grid{T}.Selectable" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridSelectionSettingsBuilder.Enabled(System.Boolean)">
            <summary>
            Enables or disables selection.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Selectable(selection =&gt; selection.Enabled((bool)ViewData["enableSelection"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable scrolling based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridSelectionSettingsBuilder.Mode(Kendo.Mvc.UI.GridSelectionMode)">
            <summary>
            Specifies whether multiple or single selection is allowed.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Selectable(selection =&gt; selection.Mode((bool)ViewData["selectionMode"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Mode method is useful to switch between different selection modes.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridSelectionSettingsBuilder.Type(Kendo.Mvc.UI.GridSelectionType)">
            <summary>
            Specifies whether row or cell selection is allowed.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Selectable(selection =&gt; selection.Type((bool)ViewData["selectionType"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Type method is useful to switch between different selection types.
            </remarks>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridSortSettingsBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="!:Grid{T}.Sortable" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridSortSettingsBuilder`1.#ctor(Kendo.Mvc.UI.GridSortableSettings)">
            <summary>
            Initializes a new instance of the <see cref="!:GridSortSettingsBuilder{T}" /> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridSortSettingsBuilder`1.Enabled(System.Boolean)">
            <summary>
            Enables or disables sorting.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Sorting(sorting =&gt; sorting.Enabled((bool)ViewData["enableSorting"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable sorting based on certain conditions.
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridSortSettingsBuilder`1.SortMode(Kendo.Mvc.UI.GridSortMode)">
            <summary>
            Sets the sort mode of the grid.
            </summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Sorting(sorting =&gt; sorting.SortMode(GridSortMode.MultipleColumns))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridSortSettingsBuilder`1.AllowUnsort(System.Boolean)">
            <summary>
            Enables or disables unsorted mode.
            </summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Sorting(sorting =&gt; sorting.AllowUnsort(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.AnimationDuration">
            <summary>
            Specifies the animation duration of item.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.AnimationDuration.Fast">
            <summary>
            Fast animation, duration is set to 200.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.AnimationDuration.Normal">
            <summary>
            Normal animation, duration is set to 400.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.AnimationDuration.Slow">
            <summary>
            Slow animation, duration is set to 600.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IAsyncContentContainer.ContentUrl">
            <summary>
            Url, which will be used as a destination for the Ajax request.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IContentContainer.ContentHtmlAttributes">
            <summary>
            The HtmlAttributes which will be added to the wrapper of the content.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IContentContainer.Content">
            <summary>
            The action which will output the content.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.GridSortMode">
            <summary>
            Defines the sort modes supported by Kendo UI Grid for ASP.NET MVC
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.GridSortMode.SingleColumn">
            <summary>
            The user can sort only by one column at the same time.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.GridSortMode.MultipleColumn">
            <summary>
            The user can sort by more than one column at the same time.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Grid`1">
            <summary>
            The server side wrapper for Kendo UI Grid
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.Selectable">
            <summary>
            Gets the selection configuration
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.RowTemplate">
            <summary>
            Gets the template which the grid will use to render a row
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.Filterable">
            <summary>
            Gets the filtering configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.ColumnMenu">
            <summary>
            Gets the column menu configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.Scrollable">
            <summary>
            Gets the scrolling configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.Navigatable">
            <summary>
            Gets the keyboard navigation configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.EnableCustomBinding">
            <summary>
            Gets or sets a value indicating whether custom binding is enabled.
            </summary>
            <value>
                <c>true</c> if custom binding is enabled; otherwise, <c>false</c>. The default value is <c>false</c></value>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.Pageable">
            <summary>
            Gets the paging configuration.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.Columns">
            <summary>
            Gets the columns of the grid.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.PageSize">
            <summary>
            Gets the page size of the grid.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.Sortable">
            <summary>
            Gets the sorting configuration.
            </summary>
            <value>The sorting.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.PrefixUrlParameters">
            <summary>
            Gets or sets a value indicating whether to add the <see cref="P:Kendo.Mvc.UI.WidgetBase.Name" /> property of the grid as a prefix in url parameters.
            </summary>
            <value>
                <c>true</c> if prefixing is enabled; otherwise, <c>false</c>. The default value is <c>true</c></value>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.RowAction">
            <summary>
            Gets or sets the action executed when rendering a row.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Grid`1.CellAction">
            <summary>
            Gets or sets the action executed when rendering a cell.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridBuilder`1">
            <summary>
            Defines the fluent interface for configuring the <see cref="!:Grid{T}" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.#ctor(Kendo.Mvc.UI.Grid{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:GridBuilder{T}" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.DataSource(System.Action{Kendo.Mvc.UI.Fluent.DataSourceBuilder{`0}})">
            <summary>
            Configures the grid DataSource
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.DetailTemplate(System.Action{`0})">
            <summary>
            Sets the detail template of the grid
            </summary>
            <param name="codeBlockTemplate">The template</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.DetailTemplate(System.Func{`0,System.Object})">
            <summary>
            Sets the detail template of the grid using Razor syntax
            </summary>
            <param name="inlineTemplate">The template</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.RowTemplate(System.Action{`0,Kendo.Mvc.UI.Grid{`0}})">
            <summary>
            Sets the row template of the grid
            </summary>
            <param name="codeBlockTemplate">The template</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .RowTemplate(o =&gt;
            {
            %&gt;
            &lt;%= o.Name %&gt;
            &lt;%= o.Age %&gt;
            &lt;%
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.RowTemplate(System.Action{`0})">
            <summary>
            Sets the row template of the grid
            </summary>
            <param name="codeBlockTemplate">The template</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .RowTemplate(o =&gt;
            {
            %&gt;
            &lt;%= o.Name %&gt;
            &lt;%= o.Age %&gt;
            &lt;%
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.RowTemplate(System.Func{`0,System.Object})">
            <summary>
            Sets the row template of the grid using Razor syntax
            </summary>
            <param name="inlineTemplate">The template</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .RowTemplate(@&lt;text&gt;
            @item.Name
            @item.Age
            &lt;/text&gt;)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.ClientRowTemplate(System.String)">
            <summary>
            Sets the client row template
            </summary>
            <param name="template">The template</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.ClientRowTemplate(System.Func{Kendo.Mvc.UI.Grid{`0},System.String})">
            <summary>
            Sets the client row template
            </summary>
            <param name="template">The template</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.AutoBind(System.Boolean)">
            <summary>
            Specifies if the Grid should be automatically bound on initial load.
            This is only possible if AJAX binding is used, and widget is not initialy populated on the server.
            </summary>
            <param name="value">If true Grid will be automatically data bound, otherwise false</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Resizable(System.Action{Kendo.Mvc.UI.Fluent.GridResizingSettingsBuilder})">
            <summary>
            Configures the grid resizing settings
            </summary>
            <param name="configurator">Resizing settings configurator method</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Resizable(resizing =&gt; resizing.Columns(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Reorderable(System.Action{Kendo.Mvc.UI.Fluent.GridReorderingSettingsBuilder})">
            <summary>
            Configures the grid reordering settings
            </summary>
            <param name="configurator">Resizing settings configurator method</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Reorderable(reordering =&gt; reordering.Columns(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Editable(System.Action{Kendo.Mvc.UI.Fluent.GridEditingSettingsBuilder{`0}})">
            <summary>
            Configures the grid editing settings.
            </summary>
            <param name="configurator">Configurator for the edit settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid&lt;Order&gt;()
            .Name("Orders")
            .Editable(settings =&gt; settings.Enabled(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Editable">
            <summary>
            Enables the grid editing.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.ToolBar(System.Action{Kendo.Mvc.UI.Fluent.GridToolBarCommandFactory{`0}})">
            <summary>
            Configures the toolbar of the grid.
            </summary>
            <param name="configurator">ToolBar configurator.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid&lt;Order&gt;()
            .Name("Orders")
            .ToolBar(commands =&gt; commands.Create())
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.BindTo(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Binds the grid to a list of objects
            </summary>
            <param name="dataSource">The data source.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid&lt;Order&gt;()
            .Name("Orders")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"]);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.RowAction(System.Action{Kendo.Mvc.UI.GridRow{`0}})">
            <summary>
            Callback for each row.
            </summary>
            <param name="configurator">Action, which will be executed for each row.
            You can format the entire row</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .RowAction(row =&gt;
            {
            // "DataItem" is the Order object to which the current row is bound to
            if (row.DataItem.Freight &gt; 10)
            {
            //Set the background of the entire row
            row.HtmlAttributes["style"] = "background:red;";
            }
            });
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.CellAction(System.Action{Kendo.Mvc.UI.GridCell{`0}})">
            <summary>
            Callback for each cell.
            </summary>
            <param name="configurator">Action, which will be executed for each cell.
            You can format a concrete cell.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .CellAction(cell =&gt;
            {
            if (cell.Column.Name == "Freight")
            {
            if (cell.DataItem.Freight &gt; 10)
            {
            //Set the background of this cell only
            cell.HtmlAttributes["style"] = "background:red;";
            }
            }
            });
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.EnableCustomBinding(System.Boolean)">
            <summary>
            Enables or disables the custom binding of the grid.
            </summary>
            <param name="value">If true enables custom binding.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Columns(System.Action{Kendo.Mvc.UI.Fluent.GridColumnFactory{`0}})">
            <summary>
            Defines the columns of the grid.
            </summary>
            <param name="configurator">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"]);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Sortable">
            <summary>
            Allows sorting of the columns.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Sortable();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Sortable(System.Action{Kendo.Mvc.UI.Fluent.GridSortSettingsBuilder{`0}})">
            <summary>
            Allows sorting of the columns.
            </summary>
            <param name="configurator">Use builder to define sort settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Sortable(sorting =&gt; sorting.SortMode(GridSortMode.MultipleColumn)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Selectable">
            <summary>
            Enables row selection.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Selectable()
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Selectable(System.Action{Kendo.Mvc.UI.Fluent.GridSelectionSettingsBuilder})">
            <summary>
            Enables row selection.
            </summary>
            <param name="selectionAction">Use builder to define the selection settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Selectable(selection =&gt; selection.Enabled(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.PrefixUrlParameters(System.Boolean)">
            <summary>
            Put grid name as a prefix.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Pageable">
            <summary>
            Allows paging of the data.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Pageable();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Pageable(System.Action{Kendo.Mvc.UI.Fluent.PageableBuilder})">
            <summary>
            Allows paging of the data.
            </summary>
            <param name="pagerAction">Use builder to define paging settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Pageable(paging =&gt;
            paging.Refresh(true)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Filterable">
            <summary>
            Allows filtering of the columns.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Filterable();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Filterable(System.Action{Kendo.Mvc.UI.Fluent.GridFilterableSettingsBuilder})">
            <summary>
            Allows filtering of the columns.
            </summary>
            <param name="configurator">Use builder to define filtering settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Filterable(filtering =&gt; filtering.Enabled(true);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.ColumnMenu">
            <summary>
            Enables/disables header column menu.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .ColumnMenu();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.ColumnMenu(System.Action{Kendo.Mvc.UI.Fluent.GridColumnMenuSettingsBuilder})">
            <summary>
            Enables/disables header column menu.
            </summary>
            <param name="configurator">Use builder to define column menu settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .ColumnMenu(menu =&gt; menu.Enabled(true);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Scrollable">
            <summary>
            Show scrollbar if there are many items.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Scrollable();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Scrollable(System.Action{Kendo.Mvc.UI.Fluent.GridScrollSettingsBuilder})">
            <summary>
            Show scrollbar if there are many items.
            </summary>
            <param name="configurator">Use builder to define scrolling settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Scrollable(scrolling =&gt; scrolling.Enabled(true);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Navigatable">
            <summary>
            Enables keyboard navigation.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Navigatable();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Navigatable(System.Action{Kendo.Mvc.UI.Fluent.GridNavigatableSettingsBuilder})">
            <summary>
            Enables keyboard navigation.
            </summary>
            <param name="configurator">Use builder to define keyboard navigation settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Navigatable(navigation =&gt; navigation.Enabled(true));
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Events(System.Action{Kendo.Mvc.UI.Fluent.GridEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="configurator">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Events(events =&gt; events
            .DataBinding("onDataBinding")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Groupable(System.Action{Kendo.Mvc.UI.Fluent.GridGroupingSettingsBuilder})">
            <summary>
            Use it to configure grouping.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Groupable(grouping =&gt; grouping.Enabled(true);
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridBuilder`1.Groupable">
            <summary>
            Allows grouping.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid()
            .Name("Grid")
            .Columns(columns=&gt;
            {
            columns.Add(c =&gt; c.OrderID).Width(100);
            columns.Add(c =&gt; c.OrderDate).Width(200).Format("{0:dd/MM/yyyy}");
            columns.Add(c =&gt; c.ShipAddress);
            columns.Add(c =&gt; c.ShipCity).Width(200);
            })
            .BindTo((IEnumerable&lt;Order&gt;)ViewData["Orders"])
            .Groupable();
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.GridColumnBase`1">
            <summary>
            The base class for all columns in Kendo Grid for ASP.NET MVC.
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.Grid">
            <summary>
            Gets or sets the grid.
            </summary>
            <value>The grid.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.Member">
            <summary>
            Gets the member of the column.
            </summary>
            <value>The member.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.Template">
            <summary>
            Gets the template of the column.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.HeaderTemplate">
            <summary>
            Gets the header template of the column.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.FooterTemplate">
            <summary>
            Gets the footer template of the column.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.Title">
            <summary>
            Gets or sets the title of the column.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.Hidden">
            <summary>
            Gets or sets a value indicating whether this column is hidden.
            </summary>
            <value>
                <c>true</c> if hidden; otherwise, <c>false</c>.</value>
            <remarks>
            Hidden columns are output as HTML but are not visible by the end-user.
            </remarks>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.HeaderHtmlAttributes">
            <summary>
            Gets the header HTML attributes.
            </summary>
            <value>The header HTML attributes.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.FooterHtmlAttributes">
            <summary>
            Gets the footer HTML attributes.
            </summary>
            <value>The footer HTML attributes.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.Visible">
            <summary>
            Gets or sets a value indicating whether this column is visible.
            </summary>
            <value>
                <c>true</c> if visible; otherwise, <c>false</c>. The default value is <c>true</c>.</value>
            <remarks>
            Invisible columns are not output in the HTML.
            </remarks>
        </member>
        <member name="P:Kendo.Mvc.UI.GridColumnBase`1.HtmlAttributes">
            <summary>
            Gets the HTML attributes of the cell rendered for the column
            </summary>
            <value>The HTML attributes.</value>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2">
            <summary>
            Defines the fluent interface for configuring columns.
            </summary>
            <typeparam name="TColumn">
            </typeparam>
            <typeparam name="TColumnBuilder">The type of the column builder.</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:GridColumnBuilderBase&lt;T, TColumnBuilder&gt;" /> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.Title(System.String)">
            <summary>
            Sets the title displayed in the header of the column.
            </summary>
            <param name="text">The text.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).Title("ID"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.HeaderHtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes applied to the header cell of the column.
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).HeaderHtmlAttributes(new {@class="order-header"}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.HeaderHtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes applied to the header cell of the column.
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).HeaderHtmlAttributes(new {@class="order-header"}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.FooterHtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes applied to the footer cell of the column.
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).FooterHtmlAttributes(new {@class="order-footer"}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.FooterHtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes applied to the footer cell of the column.
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).FooterHtmlAttributes(new {@class="order-footer"}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.HtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes applied to the content cell of the column.
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).HtmlAttributes(new {@class="order-cell"}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes applied to the content cell of the column.
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).HtmlAttributes(new {@class="order-cell"}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.Width(System.Int32)">
            <summary>
            Sets the width of the column in pixels.
            </summary>
            <param name="pixelWidth">The width in pixels.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).Width(100))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.Width(System.String)">
            <summary>
            Sets the width of the column using CSS syntax.
            </summary>
            <param name="value">The width to set.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt;
            {
            %&gt;
            &lt;%= Html.ActionLink("Edit", "Home", new { id = o.OrderID}) %&gt;
            &lt;%
            })
            .Width("30px")
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.Visible(System.Boolean)">
            <summary>
            Makes the column visible or not. By default all columns are visible. Invisible columns are not rendered in the output HTML.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).Visible((bool)ViewData["visible"]))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.Hidden(System.Boolean)">
            <summary>
            Makes the column hidden or not. By default all columns are not hidden. Hidden columns are rendered in the output HTML but are hidden.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).Hidden((bool)ViewData["hidden"]))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.Hidden">
            <summary>
            Hides a column. By default all columns are not hidden. Hidden columns are rendered in the output HTML but are hidden.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).Hidden())
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.IncludeInMenu(System.Boolean)">
            <summary>
            Specifys whether the columns should be included in column header menu. By default all columns are included.
            The column also need to have a Title set in order to be included in the menu.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =&gt; columns.Bound(o =&gt; o.OrderID).IncludeInMenu((bool)ViewData["hidden"]))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.HeaderTemplate(System.Action)">
            <summary>
            Sets the header template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.HeaderTemplate(System.String)">
            <summary>
            Sets the header template for the column.
            </summary>
            <param name="template">The string defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.HeaderTemplate(System.Func{System.Object,System.Object})">
            <summary>
            Sets the header template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.FooterTemplate(System.Action)">
            <summary>
            Sets the footer template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.FooterTemplate(System.String)">
            <summary>
            Sets the footer template for the column.
            </summary>
            <param name="template">The string defining the template.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnBuilderBase`2.FooterTemplate(System.Func{System.Object,System.Object})">
            <summary>
            Sets the footer template for the column.
            </summary>
            <param name="template">The action defining the template.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.GridColumnFactory`1">
            <summary>
            Creates columns for the <see cref="!:Grid{TModel}" />.
            </summary>
            <typeparam name="TModel">The type of the data item to which the grid is bound to</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.#ctor(Kendo.Mvc.UI.Grid{`0})">
            <summary>
            Initializes a new instance of the <see cref="!:GridColumnFactory{TModel}" /> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.Bound``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Defines a bound column.
            </summary>
            <typeparam name="TValue">
            </typeparam>
            <param name="expression">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.Bound(System.String)">
            <summary>
            Defines a bound column.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.Bound(System.Type,System.String)">
            <summary>
            Defines a bound column.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.ForeignKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            Defines a foreign key column.
            </summary>
            <typeparam name="TValue">Member type</typeparam>
            <param name="expression">The member which matches the selected item</param>
            <param name="data">The foreign data</param>
            <param name="dataFieldValue">The data value field</param>
            <param name="dataFieldText">The data text field</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.ForeignKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Mvc.SelectList)">
            <summary>
            Defines a foreign key column.
            </summary>
            <typeparam name="TValue">Member type</typeparam>
            <param name="expression">The member which matches the selected item</param>
            <param name="data">The foreign data</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.AutoGenerate(System.Boolean)">
            <summary>
            Determines if columns should be automatically generated.
            </summary>
            <param name="shouldGenerate">If true columns should be generated, otherwise false.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.AutoGenerate(System.Action{Kendo.Mvc.UI.GridColumnBase{`0}})">
            <summary>
            Determines if columns should be automatically generated.
            </summary>
            <param name="columnAction">Action which will be executed for each generated column.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.Template(System.Action{`0})">
            <summary>
            Defines a template column.
            </summary>
            <param name="templateAction">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.GridColumnFactory`1.Command(System.Action{Kendo.Mvc.UI.Fluent.GridActionCommandFactory{`0}})">
            <summary>
            Defines a command column.
            </summary>
            <param name="commandAction">
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.PageableBuilder">
            <summary>
            Defines the fluent interface for configuring <see cref="!:Grid{T}.Pageable" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PageableBuilder.#ctor(Kendo.Mvc.UI.PageableSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.PageableBuilder" /> class.
            </summary>
            <param name="pager">The pager.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PageableBuilder.PageSizes(System.Int32[])">
            <summary>
            Sets the page sizes of the grid.
            </summary>
            <param name="pageSizes">The values shown in the pageSize dropdown</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PageableBuilder.PageSizes(System.Boolean)">
            <summary>
            Sets the page sizes of the grid.
            </summary>
            <param name="enabled">A value indicating whether to enable the page sizes dropdown</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PageableBuilder.ButtonCount(System.Int32)">
            <summary>
            Sets the number of buttons displayed in the numeric pager. Default is 10.
            </summary>
            <param name="pageSizes">The value</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PageableBuilder.Enabled(System.Boolean)">
            <summary>
            Enables or disables paging.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            .Pageable(paging =&gt; paging.Enabled((bool)ViewData["enablePaging"]))
            %&gt;
            </code>
            </example>
            <remarks>
            The Enabled method is useful when you need to enable paging based on certain conditions.
            </remarks>
        </member>
        <member name="P:Kendo.Mvc.UI.IHtmlAttributesContainer.HtmlAttributes">
            <summary>
            The HtmlAttributes applied to objects which can have child items
            </summary>
        </member>
        <member name="P:Kendo.Mvc.INavigatable.RouteName">
            <summary>
            Gets or sets the name of the route.
            </summary>
            <value>The name of the route.</value>
        </member>
        <member name="P:Kendo.Mvc.INavigatable.ControllerName">
            <summary>
            Gets or sets the name of the controller.
            </summary>
            <value>The name of the controller.</value>
        </member>
        <member name="P:Kendo.Mvc.INavigatable.ActionName">
            <summary>
            Gets or sets the name of the action.
            </summary>
            <value>The name of the action.</value>
        </member>
        <member name="P:Kendo.Mvc.INavigatable.RouteValues">
            <summary>
            Gets the route values.
            </summary>
            <value>The route values.</value>
        </member>
        <member name="P:Kendo.Mvc.INavigatable.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Kendo.Mvc.LinkedObjectBase`1.Parent">
            <summary>
            Gets or sets the T object that is the parent of the current node.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Kendo.Mvc.LinkedObjectBase`1.PreviousSibling">
            <summary>
            Gets the previous T object on the same level as the current one, relative to the T.ParentNode object (if one exists).
            </summary>
            <value>The previous sibling.</value>
        </member>
        <member name="P:Kendo.Mvc.LinkedObjectBase`1.NextSibling">
            <summary>
            Gets the next T node on the same hierarchical level as the current one, relative to the T.ParentNode property (if one exists).
            </summary>
            <value>The next sibling.</value>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:LinkedObjectCollection{T}" /> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:Kendo.Mvc.LinkedObjectCollection`1.Parent">
            <summary>
            Gets or sets the T object that is the parent of the current node.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="arrayIndex" /> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="array" /> is multidimensional.
            -or-
            <paramref name="arrayIndex" /> is equal to or greater than the length of <paramref name="array" />.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.
            -or-
            Type <paramref name="T" /> cannot be cast automatically to the type of the destination <paramref name="array" />.
            </exception>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Kendo.Mvc.LinkedObjectCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
        </member>
        <member name="P:Kendo.Mvc.UI.INavigationItemContainer`1.Items">
            <summary>
            Child items collection.
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.MenuBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Menu" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.#ctor(Kendo.Mvc.UI.Menu)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.MenuBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.MenuItemFactory})">
            <summary>
            Defines the items in the menu
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.MenuEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt;
            events.Open("onOpen").OnClose("onClose")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.Direction(Kendo.Mvc.UI.MenuDirection)">
            <summary>
            Specifies Menu opening direction.
            </summary>
            <param name="value">The desired direction.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Direction(MenuDirection.Left)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.Direction(System.String)">
            <summary>
            Specifies Menu opening direction.
            </summary>
            <param name="value">The desired direction.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Direction("top")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.Orientation(Kendo.Mvc.UI.MenuOrientation)">
            <summary>
            Sets the menu orientation.
            </summary>
            <param name="value">The desired orientation.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Orientation(MenuOrientation.Vertical)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.OpenOnClick(System.Boolean)">
            <summary>
            Enables or disables the "open-on-click" feature.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .OpenOnClick(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.CloseOnClick(System.Boolean)">
            <summary>
            Specifies that sub menus should close after item selection (provided they won't navigate).
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .CloseOnClick(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.HoverDelay(System.Int32)">
            <summary>
            Specifies the delay in ms before the menu is opened/closed - used to avoid accidental closure on leaving.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .HoverDelay(300)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.BindTo(System.String,System.Action{Kendo.Mvc.UI.MenuItem,Kendo.Mvc.SiteMapNode})">
            <summary>
            Binds the menu to a sitemap
            </summary>
            <param name="viewDataKey">The view data key.</param>
            <param name="siteMapAction">The action to configure the item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .BindTo("examples", (item, siteMapNode) =&gt;
            {
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.BindTo(System.String)">
            <summary>
            Binds the menu to a sitemap.
            </summary>
            <param name="viewDataKey">The view data key.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .BindTo("examples")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.BindTo``1(System.Collections.Generic.IEnumerable{``0},System.Action{Kendo.Mvc.UI.MenuItem,``0})">
            <summary>
            Binds the menu to a list of objects. The menu will be "flat" which means a menu item will be created for
            every item in the data source.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <param name="itemDataBound">The action executed for every data bound item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .BindTo(new []{"First", "Second"}, (item, value)
            {
            item.Text = value;
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.BindTo(System.Collections.IEnumerable,System.Action{Kendo.Mvc.UI.Fluent.NavigationBindingFactory{Kendo.Mvc.UI.MenuItem}})">
            <summary>
            Binds the menu to a list of objects. The menu will create a hierarchy of items using the specified mappings.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <param name="factoryAction">The action which will configure the mappings</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .BindTo(Model, mapping =&gt; mapping
            .For&lt;Customer&gt;(binding =&gt; binding
            .Children(c =&gt; c.Orders) // The "child" items will be bound to the the "Orders" property
            .ItemDataBound((item, c) =&gt; item.Text = c.ContactName) // Map "Customer" properties to MenuItem properties
            )
            .For&lt;Order&lt;(binding =&gt; binding
            .Children(o =&gt; null) // "Orders" do not have child objects so return "null"
            .ItemDataBound((item, o) =&gt; item.Text = o.OrderID.ToString()) // Map "Order" properties to MenuItem properties
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.MenuBuilder.BindTo(System.Collections.Generic.IEnumerable{Kendo.Mvc.UI.MenuItem})-->
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.ItemAction(System.Action{Kendo.Mvc.UI.MenuItem})">
            <summary>
            Callback for each item.
            </summary>
            <param name="action">Action, which will be executed for each item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .ItemAction(item =&gt;
            {
            item
            .Text(...)
            .HtmlAttributes(...);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.HighlightPath(System.Boolean)">
            <summary>
            Select item depending on the current URL.
            </summary>
            <param name="value">If true the item will be highlighted.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .HighlightPath(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.SecurityTrimming(System.Boolean)">
            <summary>
            Enable/disable security trimming functionality of the component.
            </summary>
            <param name="value">If true security trimming is enabled.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .SecurityTrimming(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuBuilder.SecurityTrimming(System.Action{Kendo.Mvc.UI.SecurityTrimmingBuilder})">
            <summary>
            Defines the security trimming functionality of the component
            </summary>
            <param name="securityTrimmingAction">The securityTrimming action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .SecurityTrimming(builder =&gt;
            {
            builder.Enabled(true).HideParent(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.MenuItem">
            <summary>
            Represents an item from Kendo Menu for ASP.NET MVC
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.MenuItemBuilder">
            <summary>
            Defines the fluent interface for configuring child menu items.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuItemBuilder.#ctor(Kendo.Mvc.UI.MenuItem,System.Web.Mvc.ViewContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.MenuItemBuilder" /> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuItemBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.MenuItemFactory})">
            <summary>
            Configures the child items of a <see cref="T:Kendo.Mvc.UI.MenuItem" />.
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt;
            {
            items.Add().Text("First Item").Items(firstItemChildren =&gt;
            {
            firstItemChildren.Add().Text("Child Item 1");
            firstItemChildren.Add().Text("Child Item 2");
            });
            })
            %&gt;
            </code>
            </example>
        </member>
        <!--FIXME: Invalid documentation markup was found for member M:Kendo.Mvc.UI.Fluent.MenuItemBuilder.Items(System.Collections.Generic.IEnumerable{Kendo.Mvc.UI.MenuItem})-->
        <member name="T:Kendo.Mvc.UI.Fluent.MenuItemFactory">
            <summary>
            Defines the fluent API for adding items to Kendo Menu for ASP.NET MVC
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.MenuOrientation">
            <summary>
            Specifies the orientation in which the menu items will be ordered
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.MenuOrientation.Horizontal">
            <summary>
            Items are oredered horizontally
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.MenuOrientation.Vertical">
            <summary>
            Items are oredered vertically
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.MenuEventBuilder">
            <summary>
            Defines the fluent interface for configuring the Menu events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Open(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Open client-side event
            </summary>
            <param name="onOpenAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Open(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Open(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Open client-side event.
            </summary>
            <param name="onOpenHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Open("onOpen"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Close(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Close client-side event
            </summary>
            <param name="onCloseAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Close(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Close(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Close client-side event.
            </summary>
            <param name="onCloseHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Close("onClose"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Activate(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Activate client-side event
            </summary>
            <param name="onActivateAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Activate(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Activate(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Activate client-side event.
            </summary>
            <param name="onActivateHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Activate("onActivate"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Deactivate(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Deactivate client-side event
            </summary>
            <param name="onDeactivateAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Deactivate(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Deactivate(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Deactivate client-side event.
            </summary>
            <param name="onDeactivateHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Deactivate("onDeactivate"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Select(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Select client-side event
            </summary>
            <param name="onSelectAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Select(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.MenuEventBuilder.Select(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Select client-side event.
            </summary>
            <param name="onSelectHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Events(events =&gt; events.Select("onSelect"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.Action(Kendo.Mvc.INavigatable,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action, controller name and route values of <see cref="T:Kendo.Mvc.INavigatable" /> object.
            </summary>
            <param name="navigatable">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="routeValues">The route values of the Action method.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.Action(Kendo.Mvc.INavigatable,System.String,System.String,System.Object)">
            <summary>
            Sets the action and controller name, along with Route values of <see cref="T:Kendo.Mvc.INavigatable" /> object.
            </summary>
            <param name="navigatable">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="actionName">Action name.</param>
            <param name="controllerName">Controller name.</param>
            <param name="routeValues">Route values as an object</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.Action(Kendo.Mvc.INavigatable,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action, controller name and route values of <see cref="T:Kendo.Mvc.INavigatable" /> object.
            </summary>
            <param name="navigatable">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="actionName">Action name.</param>
            <param name="controllerName">Controller name.</param>
            <param name="routeValues">Route values as <see cref="T:System.Web.Routing.RouteValueDictionary" /></param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.Action``1(Kendo.Mvc.INavigatable,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the action and route values of <see cref="T:Kendo.Mvc.INavigatable" /> object.
            </summary>
            <param name="item">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="controllerAction">The controller action.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.Url(Kendo.Mvc.INavigatable,System.String)">
            <summary>
            Sets the url property of <see cref="T:Kendo.Mvc.INavigatable" /> object.
            </summary>
            <param name="navigatable">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="actionName">The Url.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.Route(Kendo.Mvc.INavigatable,System.String,System.Object)">
            <summary>
            Sets the route name and route values of <see cref="T:Kendo.Mvc.INavigatable" /> object.
            </summary>
            <param name="navigatable">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="routeName">Route name.</param>
            <param name="routeValues">Route values as an object.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.Route(Kendo.Mvc.INavigatable,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route name and route values of <see cref="T:Kendo.Mvc.INavigatable" /> object.
            </summary>
            <param name="navigatable">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="routeName">Route name.</param>
            <param name="routeValues">Route values as <see cref="T:System.Web.Routing.RouteValueDictionary" />.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.GenerateUrl(Kendo.Mvc.INavigatable,System.Web.Mvc.ViewContext,Kendo.Mvc.IUrlGenerator)">
            <summary>
            Generating url depending on the ViewContext and the <see cref="T:Kendo.Mvc.IUrlGenerator" /> generator.
            </summary>
            <param name="navigatable">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="viewContext">The <see cref="T:System.Web.Mvc.ViewContext" /> object</param>
            <param name="urlGenerator">The <see cref="T:Kendo.Mvc.IUrlGenerator" /> generator.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.IsCurrent(Kendo.Mvc.INavigatable,System.Web.Mvc.ViewContext,Kendo.Mvc.IUrlGenerator)">
            <summary>
            Determines whether the specified navigatable matches the current request URL.
            </summary>
            <param name="navigatable">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="viewContext">The <see cref="T:System.Web.Mvc.ViewContext" /> object.</param>
            <param name="urlGenerator">The <see cref="T:Kendo.Mvc.IUrlGenerator" /> generator.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.GenerateUrl(Kendo.Mvc.INavigatable,System.Web.Mvc.ViewContext,Kendo.Mvc.IUrlGenerator,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Generating url depending on the ViewContext and the <see cref="T:Kendo.Mvc.IUrlGenerator" /> generator.
            </summary>
            <param name="navigatable">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="viewContext">The <see cref="T:System.Web.Mvc.ViewContext" /> object</param>
            <param name="urlGenerator">The <see cref="T:Kendo.Mvc.IUrlGenerator" /> generator.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.IsAccessible(Kendo.Mvc.INavigatable,Kendo.Mvc.Infrastructure.INavigationItemAuthorization,System.Web.Mvc.ViewContext)">
            <summary>
            Verify whether the <see cref="T:Kendo.Mvc.INavigatable" /> object is accessible.
            </summary>
            <param name="item">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="authorization">The <see cref="T:Kendo.Mvc.Infrastructure.INavigationItemAuthorization" /> object.</param>
            <param name="viewContext">The <see cref="T:System.Web.Mvc.ViewContext" /> object</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.IsAccessible``1(System.Collections.Generic.IEnumerable{``0},Kendo.Mvc.Infrastructure.INavigationItemAuthorization,System.Web.Mvc.ViewContext)">
            <summary>
            Verifies whether collection of <see cref="T:Kendo.Mvc.INavigatable" /> objects is accessible.
            </summary>
            <typeparam name="T">Object of <see cref="T:Kendo.Mvc.INavigatable" /> type.</typeparam>
            <param name="item">The <see cref="T:Kendo.Mvc.INavigatable" /> object.</param>
            <param name="authorization">The <see cref="T:Kendo.Mvc.Infrastructure.INavigationItemAuthorization" /> object.</param>
            <param name="viewContext">The <see cref="T:System.Web.Mvc.ViewContext" /> object</param>
        </member>
        <member name="M:Kendo.Mvc.UI.NavigatableExtensions.HasValue(Kendo.Mvc.INavigatable)">
            <summary>
            Determines whether this instance has value.
            </summary>
            <returns>true if either ActionName and ControllerName, RouteName or Url are set; false otherwise</returns>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.NavigationBindingFactory`1">
            <summary>
            Defines the fluent API for creating bindings for Kendo Menu, TreeView and PanelBar
            </summary>
            <typeparam name="TNavigationItem">
            </typeparam>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2">
            <summary>
            Defines the fluent interface for configuring navigation items
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <typeparam name="TBuilder">The type of the builder.</typeparam>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.#ctor(Kendo.Mvc.UI.NavigationItem{`0},System.Web.Mvc.ViewContext)">
            <summary>
            Initializes a new instance of the <see cref="!:NavigationItemBuilder&lt;TItem, TBuilder&gt;" /> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.ToItem">
            <summary>
            Returns the inner navigation item
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.HtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes applied to the outer HTML element rendered for the item
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Attributes(new {@class="first-item"}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes applied to the outer HTML element rendered for the item
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Text(System.String)">
            <summary>
            Sets the text displayed by the item.
            </summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("First Item"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Visible(System.Boolean)">
            <summary>
            Makes the item visible or not. Invisible items are not rendered in the output HTML.
            </summary>
            <summary>
            Sets the text displayed by the item.
            </summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("First Item").Visible((bool)ViewData["visible"])
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Enabled(System.Boolean)">
            <summary>
            Enables or disables the item. Disabled item cannot be clicked, expanded or open (depending on the item type - menu, tabstrip, panelbar).
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("First Item").Enabled((bool)ViewData["enabled"])
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Selected(System.Boolean)">
            <summary>
            Selects or unselects the item. By default items are not selected.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("First Item").Selected(true))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Route(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route to which the item should navigate.
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("First Item").Route("Default", new RouteValueDictionary{{"id", 1}}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Route(System.String,System.Object)">
            <summary>
            Sets the route to which the item should navigate.
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("First Item").Route("Default", new {id, 1}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Route(System.String)">
            <summary>
            Sets the route to which the item should navigate.
            </summary>
            <param name="routeName">Name of the route.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("First Item").Route("Default"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Action(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action to which the item should navigate
            </summary>
            <param name="routeValues">The route values of the Action method.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("Index").Action(MVC.Home.Index(3).GetRouteValueDictionary()))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action to which the item should navigate
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("Index").Action("Index", "Home", new RouteValueDictionary{{"id", 1}}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Action(System.String,System.String,System.Object)">
            <summary>
            Sets the action to which the item should navigate
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("Index").Action("Index", "Home", new {id, 1}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Action(System.String,System.String)">
            <summary>
            Sets the action to which the item should navigate
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("Index").Action("Index", "Home"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Url(System.String)">
            <summary>
            Sets the URL to which the item should navigate
            </summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("www.example.com").Url("http://www.example.com"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.ImageUrl(System.String)">
            <summary>
            Sets the URL of the image that should be displayed by the item.
            </summary>
            <param name="value">The value.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("First Item").ImageUrl("~/Content/first.png"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.ImageHtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes for the item image.
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items
            .Add().Text("First Item")
            .ImageUrl("~/Content/first.png")
            .ImageHtmlAttributes(new {@class="first-item-image"}))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.ImageHtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes for the item image.
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.SpriteCssClasses(System.String[])">
            <summary>
            Sets the sprite CSS class names.
            </summary>
            <param name="cssClasses">The CSS classes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items
            .Add().Text("First Item")
            .SpriteCssClasses("icon", "first-item")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Content(System.Action)">
            <summary>
            Sets the HTML content which the item should display.
            </summary>
            <param name="value">The action which renders the content.</param>
            <code lang="CS">
            &lt;% Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items
            .Add()
            .Text("First Item")
            .Content(() =&gt;
            {
            %&gt;
            &lt;strong&gt; First Item Content&lt;/strong&gt;
            &lt;%
            });)
            .Render();
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Content(System.Func{System.Object,System.Object})">
            <summary>
            Sets the HTML content which the item should display.
            </summary>
            <param name="value">The content wrapped in a regular HTML tag or text tag (Razor syntax).</param>
            <code lang="CS">
            @(Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items
            .Add()
            .Text("First Item")
            .Content(
            @&lt;text&gt;
            Some text
            &lt;strong&gt; First Item Content&lt;/strong&gt;
            &lt;/text&gt;
            );
            )
            )
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Content(System.String)">
            <summary>
            Sets the HTML content which the item should display as a string.
            </summary>
            <param name="value">The action which renders the content.</param>
            <code lang="CS">
            &lt;% Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items
            .Add()
            .Text("First Item")
            .Content("&lt;strong&gt; First Item Content&lt;/strong&gt;");
            )
            .Render();
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.ContentHtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes of the content element of the item.
            </summary>
            <param name="attributes">The attributes.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items
            .Add().Text("First Item")
            .Content(() =&gt; { %&gt; &lt;strong&gt;First Item Content&lt;/strong&gt; &lt;% })
            .ContentHtmlAttributes(new {@class="first-item-content"})
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.ContentHtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes of the content element of the item.
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Action``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Makes the item navigate to the specified controllerAction method.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="controllerAction">The action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items
            .Add().Text("First Item")
            .Action&lt;HomeController&gt;(controller =&gt; controller.Index()))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.NavigationItemBuilder`2.Encoded(System.Boolean)">
            <summary>
            Sets whether the Text property should be encoded when the item is rendered.
            </summary>
            <param name="isEncoded">Whether the property should be encoded. Default: true.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; items.Add().Text("&lt;strong&gt;First Item&lt;/strong&gt;").Encoded(false))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.PanelBarBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.PanelBar" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.#ctor(Kendo.Mvc.UI.PanelBar)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.PanelBarBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.PanelBarItemFactory})">
            <summary>
            Defines the items in the panelbar
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.PanelBarEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt;
            events.Expand("expand").Collapse("collapse")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.BindTo(System.String,System.Action{Kendo.Mvc.UI.PanelBarItem,Kendo.Mvc.SiteMapNode})">
            <summary>
            Binds the panelbar to a sitemap
            </summary>
            <param name="viewDataKey">The view data key.</param>
            <param name="siteMapAction">The action to configure the item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .BindTo("examples", (item, siteMapNode) =&gt;
            {
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.BindTo(System.String)">
            <summary>
            Binds the panelbar to a sitemap.
            </summary>
            <param name="viewDataKey">The view data key.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .BindTo("examples")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.BindTo``1(System.Collections.Generic.IEnumerable{``0},System.Action{Kendo.Mvc.UI.PanelBarItem,``0})">
            <summary>
            Binds the panelbar to a list of objects
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <param name="itemDataBound">The action executed for every data bound item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .BindTo(new []{"First", "Second"}, (item, value)
            {
            item.Text = value;
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.BindTo(System.Collections.IEnumerable,System.Action{Kendo.Mvc.UI.Fluent.NavigationBindingFactory{Kendo.Mvc.UI.PanelBarItem}})">
            <summary>
            Binds the panelbar to a list of objects. The panelbar will create a hierarchy of items using the specified mappings.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <param name="factoryAction">The action which will configure the mappings</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .BindTo(Model, mapping =&gt; mapping
            .For&lt;Customer&gt;(binding =&gt; binding
            .Children(c =&gt; c.Orders) // The "child" items will be bound to the the "Orders" property
            .ItemDataBound((item, c) =&gt; item.Text = c.ContactName) // Map "Customer" properties to PanelBarItem properties
            )
            .For&lt;Order&lt;(binding =&gt; binding
            .Children(o =&gt; null) // "Orders" do not have child objects so return "null"
            .ItemDataBound((item, o) =&gt; item.Text = o.OrderID.ToString()) // Map "Order" properties to PanelBarItem properties
            )
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.Animation(System.Boolean)">
            <summary>
            Configures the animation effects of the panelbar.
            </summary>
            <param name="enable">Whether the component animation is enabled.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Animation(false)
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.Animation(System.Action{Kendo.Mvc.UI.Fluent.ExpandableAnimationBuilder})">
            <summary>
            Configures the animation effects of the panelbar.
            </summary>
            <param name="animationAction">The action that configures the animation.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Animation(animation =&gt; animation.Expand(config =&gt; config.Fade(FadeDirection.In)))
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.ItemAction(System.Action{Kendo.Mvc.UI.PanelBarItem})">
            <summary>
            Callback for each item.
            </summary>
            <param name="itemAction">Action, which will be executed for each item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .ItemAction(item =&gt;
            {
            item
            .Text(...)
            .HtmlAttributes(...);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.HighlightPath(System.Boolean)">
            <summary>
            Select item depending on the current URL.
            </summary>
            <param name="value">If true the item will be highlighted.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .HighlightPath(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.ExpandAll(System.Boolean)">
            <summary>
            Renders the panelbar with expanded items.
            </summary>
            <param name="value">If true the panelbar will be expanded.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .ExpandAll(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.ExpandMode(Kendo.Mvc.UI.PanelBarExpandMode)">
            <summary>
            Sets the expand mode of the panelbar.
            </summary>
            <param name="value">The desired expand mode.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .ExpandMode(PanelBarExpandMode.Multiple)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.SelectedIndex(System.Int32)">
            <summary>
            Selects the item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            .SelectedIndex(1)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.SecurityTrimming(System.Boolean)">
            <summary>
            Enable/disable security trimming functionality of the component.
            </summary>
            <param name="value">If true security trimming is enabled.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .SecurityTrimming(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarBuilder.SecurityTrimming(System.Action{Kendo.Mvc.UI.SecurityTrimmingBuilder})">
            <summary>
            Defines the security trimming functionality of the component
            </summary>
            <param name="securityTrimmingAction">The securityTrimming action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .SecurityTrimming(builder =&gt;
            {
            builder.Enabled(true).HideParent(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder">
            <summary>
            Defines the fluent interface for configuring the PanelBar events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.Expand(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Expand client-side event
            </summary>
            <param name="expandInlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.Expand(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.Expand(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Expand client-side event.
            </summary>
            <param name="expandHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.Expand("expand"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.ContentLoad(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the ContentLoad client-side event
            </summary>
            <param name="contentLoadInlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.ContentLoad(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.ContentLoad(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ContentLoad client-side event.
            </summary>
            <param name="contentLoadHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.ContentLoad("contentLoad"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.Collapse(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Collapse client-side event
            </summary>
            <param name="collapseInlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.Collapse(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.Collapse(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Collapse client-side event.
            </summary>
            <param name="collapseHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.Collapse("collapse"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.Select(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Select client-side event
            </summary>
            <param name="selectInlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.Select(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.Select(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Select client-side event.
            </summary>
            <param name="selectHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.Select("select"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.Error(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Error client-side event
            </summary>
            <param name="errorInlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.Error(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarEventBuilder.Error(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Error client-side event.
            </summary>
            <param name="errorHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Events(events =&gt; events.Error("onError"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.PanelBarExpandMode">
            <summary>
            Specifies the expand mode in which the panelbar will expand its items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.PanelBarExpandMode.Single">
            <summary>
            Only one item can be expanded.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.PanelBarExpandMode.Multiple">
            <summary>
            All items can be expanded
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.PanelBarItem">
            <summary>
            Represents an item from Kendo PanelBar for ASP.NET MVC
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.PanelBarItemBuilder">
            <summary>
            Defines the fluent interface for configuring child panelbar items.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarItemBuilder.#ctor(Kendo.Mvc.UI.PanelBarItem,System.Web.Mvc.ViewContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.PanelBarItemBuilder" /> class.
            </summary>
            <param name="item">The item.</param>
            <param name="viewContext">The context of the View.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarItemBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.PanelBarItemFactory})">
            <summary>
            Configures the child items of a <see cref="T:Kendo.Mvc.UI.PanelBarItem" />.
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Items(items =&gt;
            {
            items.Add().Text("First Item").Items(firstItemChildren =&gt;
            {
            firstItemChildren.Add().Text("Child Item 1");
            firstItemChildren.Add().Text("Child Item 2");
            });
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.PanelBarItemBuilder.Expanded(System.Boolean)">
            <summary>
            Define when the item will be expanded on intial render.
            </summary>
            <param name="value">If true the item will be expanded.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Items(items =&gt;
            {
            items.Add().Text("First Item").Items(firstItemChildren =&gt;
            {
            firstItemChildren.Add().Text("Child Item 1");
            firstItemChildren.Add().Text("Child Item 2");
            })
            .Expanded(true);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.PanelBarItemFactory">
            <summary>
            Defines the fluent API for adding items to Kendo PanelBar for ASP.NET MVC
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TabStripEventBuilder">
            <summary>
            Defines the fluent interface for configuring the TabStrip events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripEventBuilder.Activate(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Activate client-side event
            </summary>
            <param name="onSelectAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Events(events =&gt; events.Activate(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripEventBuilder.Activate(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Activate client-side event.
            </summary>
            <param name="onSelectHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Events(events =&gt; events.Activate("onActivate"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripEventBuilder.Select(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Select client-side event
            </summary>
            <param name="onSelectAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Events(events =&gt; events.Select(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripEventBuilder.Select(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Select client-side event.
            </summary>
            <param name="onSelectHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Events(events =&gt; events.Select("onSelect"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripEventBuilder.ContentLoad(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the ContentLoad client-side event
            </summary>
            <param name="onSelectAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Events(events =&gt; events.ContentLoad(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripEventBuilder.ContentLoad(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the ContentLoad client-side event.
            </summary>
            <param name="onSelectHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Events(events =&gt; events.ContentLoad("onContentLoad"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripEventBuilder.Error(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Error client-side event
            </summary>
            <param name="onErrorAction">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Events(events =&gt; events.Error(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripEventBuilder.Error(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Error client-side event.
            </summary>
            <param name="onErrorHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Events(events =&gt; events.Error("onError"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TabStripBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.TabStrip" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.#ctor(Kendo.Mvc.UI.TabStrip)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TabStripBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.Items(System.Action{Kendo.Mvc.UI.Fluent.TabStripItemFactory})">
            <summary>
            Defines the items in the tabstrip
            </summary>
            <param name="addAction">The add action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.TabStripEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Events(events =&gt;
            events.Select("onSelect").OnLoad("onLoad")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.Animation(System.Boolean)">
            <summary>
            Configures the animation effects of the tabstrip.
            </summary>
            <param name="enable">Whether the component animation is enabled.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("PanelBar")
            .Animation(false)
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.Animation(System.Action{Kendo.Mvc.UI.Fluent.PopupAnimationBuilder})">
            <summary>
            Configures the animation effects of the tabstrip.
            </summary>
            <param name="animationAction">The action that configures the animation.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("PanelBar")
            .Animation(animation =&gt; animation.Open(config =&gt; config.Fade(FadeDirection.In)))
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.BindTo(System.String,System.Action{Kendo.Mvc.UI.TabStripItem,Kendo.Mvc.SiteMapNode})">
            <summary>
            Binds the tabstrip to a sitemap
            </summary>
            <param name="viewDataKey">The view data key.</param>
            <param name="siteMapAction">The action to configure the item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .BindTo("examples", (item, siteMapNode) =&gt;
            {
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.BindTo(System.String)">
            <summary>
            Binds the tabstrip to a sitemap.
            </summary>
            <param name="viewDataKey">The view data key.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .BindTo("examples")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.BindTo``1(System.Collections.Generic.IEnumerable{``0},System.Action{Kendo.Mvc.UI.TabStripItem,``0})">
            <summary>
            Binds the tabstrip to a list of objects
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <param name="itemDataBound">The action executed for every data bound item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .BindTo(new []{"First", "Second"}, (item, value)
            {
            item.Text = value;
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.SelectedIndex(System.Int32)">
            <summary>
            Selects the item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            .SelectedIndex(1)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.ItemAction(System.Action{Kendo.Mvc.UI.TabStripItem})">
            <summary>
            Callback for each item.
            </summary>
            <param name="action">Action, which will be executed for each item.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .ItemAction(item =&gt;
            {
            item
            .Text(...)
            .HtmlAttributes(...);
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.HighlightPath(System.Boolean)">
            <summary>
            Select item depending on the current URL.
            </summary>
            <param name="value">If true the item will be highlighted.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .HighlightPath(true)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripBuilder.SecurityTrimming(System.Boolean)">
            <summary>
            Enable/disable security trimming functionality of the component.
            </summary>
            <param name="value">If true security trimming is enabled.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .SecurityTrimming(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.TabStripItem">
            <summary>
            Represents an item from Kendo TabStrip for ASP.NET MVC
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TabStripItemBuilder">
            <summary>
            Defines the fluent interface for configuring child tabstrip items.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.TabStripItemBuilder.#ctor(Kendo.Mvc.UI.TabStripItem,System.Web.Mvc.ViewContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.TabStripItemBuilder" /> class.
            </summary>
            <param name="item">The item.</param>
            <param name="viewContext">The context of the View.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.TabStripItemFactory">
            <summary>
            Defines the fluent API for adding items to Kendo TabStrip for ASP.NET MVC
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.UIPrimitives.Icons">
            <summary>
            Contains CSS classes for icons
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Icons.Delete">
            <summary>
            "Delete" icon
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Icons.GroupDelete">
            <summary>
            "Delete Group" icon
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Icons.Refresh">
            <summary>
            "Refresh" icon
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Icons.Maximize">
            <summary>
            "Maximize" icon
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Icons.Minimize">
            <summary>
            "Minimize" icon
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Icons.Close">
            <summary>
            "Close" icon
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Icons.Custom">
            <summary>
            "Custom" icon
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.UIPrimitives.Grid">
            <summary>
            Contains CSS classes, used in the grid
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Grid.ActionForm">
            <summary>
            Grid action
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Grid.EditingContainer">
            <summary>
            Container element for editing / inserting form
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Grid.EditingForm">
            <summary>
            Container element for editing / inserting form
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Grid.ToolBar">
            <summary>
            Toolbar which contains different commands
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.UIPrimitives.TreeView">
            <summary>
            Contains CSS classes, used in the treeview
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.TreeView.Lines">
            <summary>
            Class that shows treeview lines
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.UIPrimitives.Editor">
            <summary>
            Contains CSS classes, used in the editor
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Editor.ToolbarButton">
            <summary>
            Button in editor toolbar
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Editor.ToolbarColorPicker">
            <summary>
            Color picker in editor toolbar
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Editor.ToolIcon">
            <summary>
            Editor tool icon
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Editor.Custom">
            <summary>
            Editor custom tool
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Editor.RawContent">
            <summary>
            Editor textarea element
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Slider.IncreaseButton">
            <summary>Slider increase button.</summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Slider.DecreaseButton">
            <summary>Slider decrease button.</summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Splitter.Horizontal">
            <summary>Horizontal splitter</summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Splitter.Vertical">
            <summary>Vertical splitter</summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Splitter.Pane">
            <summary>Splitter pane</summary>
        </member>
        <member name="T:Kendo.Mvc.UI.UIPrimitives.Window">
            <summary>
            Contains CSS classes, used in the window
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Window.Content">
            <summary>
            Window content area
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Window.TitleBar">
            <summary>
            Window title bar
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.ActiveState">
            <summary>
            Active state of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Button">
            <summary>
            Button with plain text content
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.ButtonIconText">
            <summary>
            Button with an icon and text content
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.ButtonIcon">
            <summary>
            Button with an icon only
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.ButtonBare">
            <summary>
            Bare button with an icon only (no background and borders)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Content">
            <summary>
            Content - rendered around custom content
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.DefaultState">
            <summary>
            Default state of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.DisabledState">
            <summary>
            Disabled state of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Group">
            <summary>
            Group - rendered around grouped items (children)
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Header">
            <summary>
            Header - rendered on headers or header items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.HoverState">
            <summary>
            Hovered state of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Icon">
            <summary>
            Icon - icon from default icon set
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Image">
            <summary>
            Image - image rendered through ImageUrl
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Item">
            <summary>
            Item - rendered on items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.First">
            <summary>
            First in list of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Last">
            <summary>
            Last in list of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Top">
            <summary>
            Top in list of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Bottom">
            <summary>
            Bottom in list of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Middle">
            <summary>
            Middle in list of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.LastHeader">
            <summary>
            Last in list of headers
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Link">
            <summary>
            Link - rendered on all links
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.ResetStyle">
            <summary>
            Reset - removes inherited styles
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.SelectedState">
            <summary>
            Selected state of items
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Sprite">
            <summary>
            Sprite - sprite rendered in the begging of the item.
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Widget">
            <summary>
            Widget - rendered always on the outmost HTML element of a UI component
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Input">
            <summary>
            Input - input rendered in the div wrapper
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.CheckBox">
            <summary>
            CheckBox - rendered on all checkbox
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.ToolBar">
            <summary>
            ToolBar - rendered on all toolbars
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Alt">
            <summary>
            Alternating class for zebra stripes
            </summary>
        </member>
        <member name="F:Kendo.Mvc.UI.UIPrimitives.Scrollable">
            <summary>
            Scrollable - rendered on all elements that wish to be scrollable on touch devices
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder">
            <summary>
            A builder class for <see cref="T:Kendo.Mvc.UI.UploadMessages" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.#ctor(Kendo.Mvc.UI.IUploadMessages)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder" /> class.
            </summary>
            <param name="messages">The messages.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .Retry("retry")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.Cancel(System.String)">
            <summary>
            Sets the Cancel button text
            </summary>
            <param name="cancelMessage">New cancel button text.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .Cancel("cancel")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.DropFilesHere(System.String)">
            <summary>
            Sets the Drag and Drop hint text
            </summary>
            <param name="dropFilesHereMessage">New Drag and Drop hint text.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .DropFilesHere("drop files here")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.Remove(System.String)">
            <summary>
            Sets the Remove button text
            </summary>
            <param name="removeMessage">New Remove button text.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .Remove("drop files here")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.Retry(System.String)">
            <summary>
            Sets the Retry button text
            </summary>
            <param name="retryMessage">New Retry button text.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .Retry("retry")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.Select(System.String)">
            <summary>
            Sets the Select button text
            </summary>
            <param name="selectMessage">New Select button text.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .Select("select")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.StatusFailed(System.String)">
            <summary>
            Sets the "failed" status text accessible by screen readers
            </summary>
            <param name="statusFailedMessage">New "failed" status text accessible by screen readers.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .StatusFailed("failed")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.StatusUploaded(System.String)">
            <summary>
            Sets the "uploaded" status text accessible by screen readers
            </summary>
            <param name="statusUploadedMessage">New "uploaded" status text accessible by screen readers.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .StatusUploaded("uploaded")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.StatusUploading(System.String)">
            <summary>
            Sets the "uploading" status text accessible by screen readers
            </summary>
            <param name="statusUploadingMessage">New "uploading" status text accessible by screen readers.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .StatusUploading("uploading")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadMessagesBuilder.UploadSelectedFiles(System.String)">
            <summary>
            Sets Upload button (visible when AutoUpload is set to false) text
            </summary>
            <param name="uploadSelectedFilesMessage">New Upload button text.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Messages(msgs =&gt; msgs
            .UploadSelectedFiles("uploading")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder">
            <summary>
            A builder class for <see cref="T:Kendo.Mvc.UI.IUploadAsyncSettings" /></summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.#ctor(Kendo.Mvc.UI.IUploadAsyncSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder" /> class.
            </summary>
            <param name="asyncSettings">The async settings.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("Save", "Home", new RouteValueDictionary{ {"id", 1} })
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.AutoUpload(System.Boolean)">
            <summary>
            Sets a value indicating whether to start the upload immediately after selecting a file
            </summary>
            <param name="value">true if the upload should start immediately after selecting a file, false otherwise; true by default</param>
            <remarks>
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Batch(System.Boolean)">
            <summary>
            Sets a value indicating whether to upload selected files in one batch (request)
            </summary>
            <param name="value">true if the files should be uploaded in a single request, false otherwise; false by default</param>
            <remarks>
            </remarks>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Save(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action, controller and route values for the save operation
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("Save", "Home", new RouteValueDictionary{ {"id", 1} });
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Save(System.String,System.String,System.Object)">
            <summary>
            Sets the action, controller and route values for the save operation
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("Save", "Home", new { id = 1 });
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Save(System.String,System.String)">
            <summary>
            Sets the action and controller for the save operation
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("Save", "Home");
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Save(System.String)">
            <summary>
            Sets the route name for the save operation
            </summary>
            <param name="routeName">Name of the route.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("Default");
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Save(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route values for the save operation
            </summary>
            <param name="routeValues">The route values of the action method.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save(MVC.Home.Save(1).GetRouteValueDictionary());
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Save(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route and values for the save operation
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("Default", "Home", new RouteValueDictionary{ {"id", 1} });
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Save(System.String,System.Object)">
            <summary>
            Sets the route and values for the save operation
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("Default", new { id = 1 });
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Save``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the action for the save operation
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="controllerAction">The action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save&lt;HomeController&gt;(controller =&gt; controller.Save()));
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.SaveField(System.String)">
            <summary>
            Sets the field name for the save operation
            </summary>
            <param name="fieldName">
            The form field name to use for submiting the files.
            The Upload name is used if not set.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .SaveField("attachment");
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.SaveUrl(System.String)">
            <summary>
            Sets an absolute or relative Save action URL.
            Note that the URL must be in the same domain for the upload to succeed.
            </summary>
            <param name="url">The Save action URL.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .SaveUrl("/save");
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Remove(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the action, controller and route values for the remove operation
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Remove("Remove", "Home", new RouteValueDictionary{ {"id", 1} });
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Remove(System.String,System.String,System.Object)">
            <summary>
            Sets the action, controller and route values for the remove operation
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Remove("Remove", "Home", new { id = 1 });
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Remove(System.String,System.String)">
            <summary>
            Sets the action and controller for the remove operation
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="controllerName">Name of the controller.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Remove("Remove", "Home");
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Remove(System.String)">
            <summary>
            Sets the route name for the remove operation
            </summary>
            <param name="routeName">Name of the route.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Remove("Default");
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Remove(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route values for the remove operation
            </summary>
            <param name="routeValues">The route values of the action method.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Remove(MVC.Home.Remove(1).GetRouteValueDictionary());
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Remove(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the route and values for the remove operation
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Remove("Default", "Home", new RouteValueDictionary{ {"id", 1} });
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Remove(System.String,System.Object)">
            <summary>
            Sets the route and values for the remove operation
            </summary>
            <param name="routeName">Name of the route.</param>
            <param name="routeValues">The route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Remove("Default", new { id = 1 });
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.Remove``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the action for the remove operation
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="controllerAction">The action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Remove&lt;HomeController&gt;(controller =&gt; controller.Remove()));
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.RemoveUrl(System.String)">
            <summary>
            Sets an absolute or relative Remove action URL.
            Note that the URL must be in the same domain for the operation to succeed.
            </summary>
            <param name="url">The Remove action URL.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .RemoveUrl("/remove");
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder.RemoveField(System.String)">
            <summary>
            Sets the field name for the remove operation
            </summary>
            <param name="fieldName">
            The form field name to use for submiting the files.
            "fileNames" is used if not set.
            </param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .RemoveField("attachments");
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.UploadBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Upload" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadBuilder.#ctor(Kendo.Mvc.UI.Upload)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.UploadBuilder" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.UploadEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="configurator">The client events configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events
            .OnLoad("onLoad")
            .OnUpload("onUpload")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadBuilder.Enable(System.Boolean)">
            <summary>
            Enables or disables the component.
            </summary>
            <param name="value">true if the component should be enabled, false otherwise; the default is true.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Enable(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadBuilder.Multiple(System.Boolean)">
            <summary>
            Enables or disables multiple file selection.
            </summary>
            <param name="value">true if multiple file selection should be enabled, false otherwise; the default is true.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Multiple(false)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadBuilder.ShowFileList(System.Boolean)">
            <summary>
            Sets a value indicating whether to show the list of uploaded files
            </summary>
            <param name="value">true if the list of uploaded files should be visible, false otherwise; true by default</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadBuilder.Async(System.Action{Kendo.Mvc.UI.Fluent.UploadAsyncSettingsBuilder})">
            <summary>
            Use it to configure asynchronous uploading.
            </summary>
            <param name="configurator">Use builder to set different asynchronous uploading options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("Save", "Compose")
            .Remove("Remove", "Compose")
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadBuilder.Messages(System.Action{Kendo.Mvc.UI.Fluent.UploadMessagesBuilder})">
            <summary>
            Use it to configure asynchronous uploading.
            </summary>
            <param name="configurator">Use builder to set different asynchronous uploading options.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("Save", "Compose")
            .Remove("Remove", "Compose")
            );
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.UploadEventBuilder">
            <summary>
            Defines the fluent interface for configuring the Upload events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.UploadEventBuilder" /> class.
            </summary>
            <param name="clientEvents">The client events.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Select(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Select client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Select(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Select(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Select client-side event.
            </summary>
            <param name="onSelectHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Select("onSelect"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Upload(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Upload client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Upload(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Upload(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Upload client-side event.
            </summary>
            <param name="onUploadHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Upload("onUpload"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Success(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Success client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Success(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Success(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Success client-side event.
            </summary>
            <param name="onSuccessHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Success("onSuccess"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Error(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Error client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Error(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Error(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Error client-side event.
            </summary>
            <param name="onErrorHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Error("onError"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Complete(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Complete client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Complete(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Complete(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Complete client-side event.
            </summary>
            <param name="onCompleteHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Complete("onComplete"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Cancel(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Cancel client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Cancel(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Cancel(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Cancel client-side event.
            </summary>
            <param name="onCancelHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Cancel("onCancel"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Remove(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Remove client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Remove(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Remove(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Remove client-side event.
            </summary>
            <param name="onRemoveHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Remove("onRemove"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Progress(System.Func{System.Object,System.Object})">
            <summary>
            Defines the inline handler of the Progress client-side event
            </summary>
            <param name="inlineCodeBlock">The handler code wrapped in a text tag (Razor syntax).</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Progress(
            @&lt;text&gt;
            function(e) {
            //event handling code
            }
            &lt;/text&gt;
            ))
            .Render();
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.UploadEventBuilder.Progress(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Progress client-side event.
            </summary>
            <param name="onProgressHandlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Events(events =&gt; events.Progress("onProgress"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.UploadHtmlBuilder.#ctor(Kendo.Mvc.UI.Upload)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Html.UploadHtmlBuilder" /> class.
            </summary>
            <param name="component">The Upload component.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Html.UploadHtmlBuilder.BuildCore">
            <summary>
            Builds the Upload component markup.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Kendo.Mvc.UI.IUploadAsyncSettings.Save">
            <summary>
            Defines the Save action
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IUploadAsyncSettings.SaveField">
            <summary>
            Defines the name of the form field submitted to the Save action.
            The default value is the Upload name.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IUploadAsyncSettings.Remove">
            <summary>
            Defines the Remove action
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IUploadAsyncSettings.RemoveField">
            <summary>
            Defines the name of the form field submitted to the Remove action.
            The default value is "fileNames".
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IUploadAsyncSettings.AutoUpload">
            <summary>
            Gets or sets a value indicating whether to start the upload immediately after selecting a file
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.IUploadAsyncSettings.Batch">
            <summary>
            Gets or sets a value indicating whether to upload selected files in one batch (request)
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.UploadAsyncSettings.#ctor(Kendo.Mvc.UI.Upload)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.UploadAsyncSettings" /> class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.UploadAsyncSettings.Save">
            <summary>
            Defines the Save action
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.UploadAsyncSettings.SaveField">
            <summary>
            Defines the name of the form field submitted to the Save action.
            The default value is the Upload name.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.UploadAsyncSettings.Remove">
            <summary>
            Defines the Remove action
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.UploadAsyncSettings.RemoveField">
            <summary>
            Defines the name of the form field submitted to the Remove action.
            The default value is "removeField".
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.UploadAsyncSettings.AutoUpload">
            <summary>
            Gets or sets a value indicating whether to start the upload immediately after selecting a file
            </summary>
            <value>
            true if the upload should start immediately after selecting a file, false otherwise; true by default
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.UploadAsyncSettings.Batch">
            <summary>
            Gets or sets a value indicating whether to upload selected files in one batch (request)
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.UploadAsyncSettings.SerializeTo(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the asynchronous uploading settings to the writer.
            </summary>
            <param name="key">The serialization key.</param>
            <param name="options">The target dictionary.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Upload.#ctor(System.Web.Mvc.ViewContext,Kendo.Mvc.Infrastructure.IJavaScriptInitializer,Kendo.Mvc.IUrlGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Upload" /> class.
            </summary>
            <param name="viewContext">The view context.</param>
            <param name="initializer">The javascript initializer.</param>
            <param name="urlGenerator">The URL Generator.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Upload.Enabled">
            <summary>
            Gets or sets a value indicating if the component is enabled.
            </summary>
            <value>
            true if the component should be enabled, false otherwise; the default is true.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Upload.Multiple">
            <summary>
            Gets or sets a value indicating if multiple file selection is enabled.
            </summary>
            <value>
            true if multiple file selection should be enabled, false otherwise; the default is true.
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Upload.ShowFileList">
            <summary>
            Gets or sets a value indicating whether to show the list of uploaded files
            </summary>
            <value>
            true if the list of uploaded files should be visible, false otherwise; true by default
            </value>
        </member>
        <member name="P:Kendo.Mvc.UI.Upload.Async">
            <summary>
            Defines the asynchronous uploading settings
            </summary>
        </member>
        <member name="P:Kendo.Mvc.UI.Upload.UrlGenerator">
            <summary>
            Gets or sets the URL generator.
            </summary>
            <value>The URL generator.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.Upload.Messages">
            <summary>
            Gets or sets the Upload messages.
            </summary>
            <value>The Upload messages.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Upload.WriteInitializationScript(System.IO.TextWriter)">
            <summary>
            Writes the initialization script.
            </summary>
            <param name="writer">The writer object.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Upload.WriteHtml(System.Web.UI.HtmlTextWriter)">
            <summary>
            Writes the Upload HTML.
            </summary>
            <param name="writer">The writer object.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.WidgetFactory">
            <summary>
            Creates the fluent API builders of the Kendo UI widgets
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Menu">
            <summary>
            Creates a <see cref="T:Kendo.Mvc.UI.Menu" /></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Menu()
            .Name("Menu")
            .Items(items =&gt; { /* add items here */ });
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Editor">
            <summary>
            Creates a <see cref="T:Kendo.Mvc.UI.Editor" /></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Editor()
            .Name("Editor");
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Grid``1">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.Grid{T}" /> bound to the specified data item type.
            </summary>
            <example>
                <typeparam name="T">The type of the data item</typeparam>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid&lt;Order&gt;()
            .Name("Grid")
            .BindTo(Model)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Grid``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.Grid{T}" /> bound to the specified data source.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid(Model)
            .Name("Grid")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Grid(System.Data.DataTable)">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.Grid{T}" /> bound to a DataTable.
            </summary>
            <param name="dataSource">DataTable from which the grid instance will be bound</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Grid(System.Data.DataView)">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.Grid{T}" /> bound to a DataView.
            </summary>
            <param name="dataSource">DataView from which the grid instance will be bound</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Grid``1(System.String)">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.Grid{T}" /> bound an item in ViewData.
            </summary>
            <typeparam name="T">Type of the data item</typeparam>
            <param name="dataSourceViewDataKey">The data source view data key.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Grid&lt;Order&gt;("orders")
            .Name("Grid")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.ListView``1">
            <summary>
            Creates a new <see cref="!:UI.ListView{T}" /> bound to the specified data item type.
            </summary>
            <example>
                <typeparam name="T">The type of the data item</typeparam>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView&lt;Order&gt;()
            .Name("ListView")
            .BindTo(Model)
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.ListView``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new <see cref="!:ListView{T}" /> bound to the specified data source.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="dataSource">The data source.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView(Model)
            .Name("ListView")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.ListView``1(System.String)">
            <summary>
            Creates a new <see cref="!:ListView{T}" /> bound an item in ViewData.
            </summary>
            <typeparam name="T">Type of the data item</typeparam>
            <param name="dataSourceViewDataKey">The data source view data key.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ListView&lt;Order&gt;("orders")
            .Name("ListView")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Splitter">
            <summary>
            Creates a <see cref="T:Kendo.Mvc.UI.Splitter" /></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Splitter()
            .Name("Splitter");
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.TabStrip">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.TabStrip" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TabStrip()
            .Name("TabStrip")
            .Items(items =&gt;
            {
            items.Add().Text("First");
            items.Add().Text("Second");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.DateTimePicker">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.DateTimePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePicker()
            .Name("DateTimePicker")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.DatePicker">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.DatePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePicker()
            .Name("DatePicker")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.TimePicker">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.TimePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TimePicker()
            .Name("TimePicker")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Tooltip">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.Tooltip" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Tooltip()
            .For("Container")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.ColorPicker">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.ColorPicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPicker()
            .Name("ColorPicker")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.ColorPalette">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.ColorPalette" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPalette()
            .Name("ColorPalette")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.FlatColorPicker">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.FlatColorPicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().FlatColorPicker()
            .Name("FlatColorPicker")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Calendar">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.Calendar" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Calendar()
            .Name("Calendar")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.PanelBar">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.PanelBar" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PanelBar()
            .Name("PanelBar")
            .Items(items =&gt;
            {
            items.Add().Text("First");
            items.Add().Text("Second");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.TreeView">
            <summary>
            Creates a <see cref="T:Kendo.Mvc.UI.TreeView" /></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TreeView()
            .Name("TreeView")
            .Items(items =&gt; { /* add items here */ });
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.NumericTextBox">
            <summary>
            Creates a new <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.NumericTextBox" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().NumericTextBox()
            .Name("NumericTextBox")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.NumericTextBox``1">
            <summary>
            Creates a new <see cref="!:NumericTextBox{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().NumericTextBox&lt;double&gt;()
            .Name("NumericTextBox")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.CurrencyTextBox">
            <summary>
            Creates a new <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.CurrencyTextBox" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().CurrencyTextBox()
            .Name("CurrencyTextBox")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.PercentTextBox">
            <summary>
            Creates a new <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.PercentTextBox" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PercentTextBox()
            .Name("PercentTextBox")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.IntegerTextBox">
            <summary>
            Creates a new <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.IntegerTextBox" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().IntegerTextBox()
            .Name("IntegerTextBox")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Window">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.Window" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.LinearGauge">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.LinearGauge" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGauge()
            .Name("linearGauge")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.RadialGauge">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.RadialGauge" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGauge()
            .Name("radialGauge")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.DropDownList">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.DropDownList" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownList()
            .Name("DropDownList")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.ComboBox">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.ComboBox" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBox()
            .Name("ComboBox")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.AutoComplete">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.AutoComplete" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoComplete()
            .Name("AutoComplete")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.MultiSelect">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.MultiSelect" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelect()
            .Name("MultiSelect")
            .Items(items =&gt;
            {
            items.Add().Text("First Item");
            items.Add().Text("Second Item");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Slider``1">
            <summary>
            Creates a new <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Slider" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Slider">
            <summary>
            Creates a new <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Slider" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Slider()
            .Name("Slider")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.RangeSlider``1">
            <summary>
            Creates a new <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.RangeSlider" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RangeSlider()
            .Name("RangeSlider")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.RangeSlider">
            <summary>
            Creates a new <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.RangeSlider" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RangeSlider()
            .Name("RangeSlider")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Upload">
            <summary>
            Creates a <see cref="T:Kendo.Mvc.UI.Upload" /></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Upload()
            .Name("Upload")
            .Async(async =&gt; async
            .Save("ProcessAttachments", "Home")
            .Remove("RemoveAttachment", "Home")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Chart``1">
            <summary>
            Creates a <see cref="!:Kendo.Mvc.UI.Chart{T}" /></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Chart``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.Chart{T}" /> bound to the specified data source.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="data">The data source.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart(Model)
            .Name("Chart")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Chart``1(System.String)">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.Chart{T}" /> bound an item in ViewData.
            </summary>
            <typeparam name="T">Type of the data item</typeparam>
            <param name="dataViewDataKey">The data source view data key.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart&lt;SalesData&gt;("sales")
            .Name("Chart")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Chart">
            <summary>
            Creates a new unbound <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Chart" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Chart()
            .Name("Chart")
            .Series(series =&gt; {
            series.Bar(new int[] { 1, 2, 3 }).Name("Total Sales");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.StockChart``1">
            <summary>
            Creates a <see cref="!:Kendo.Mvc.UI.StockChart{T}" /></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("StockChart")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.StockChart``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.StockChart{T}" /> bound to the specified data source.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="data">The data source.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart(Model)
            .Name("StockChart")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.StockChart``1(System.String)">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.StockChart{T}" /> bound an item in ViewData.
            </summary>
            <typeparam name="T">Type of the data item</typeparam>
            <param name="dataViewDataKey">The data source view data key.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart&lt;SalesData&gt;("sales")
            .Name("StockChart")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.StockChart">
            <summary>
            Creates a new unbound <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.StockChart" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().StockChart()
            .Name("StockChart")
            .Series(series =&gt; {
            series.Bar(new int[] { 1, 2, 3 }).Name("Total Sales");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Sparkline``1">
            <summary>
            Creates a <see cref="!:Kendo.Mvc.UI.Sparkline{T}" /></summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Sparkline``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.Sparkline{T}" /> bound to the specified data source.
            </summary>
            <typeparam name="T">The type of the data item</typeparam>
            <param name="data">The data source.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline(Model)
            .Name("Sparkline")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Sparkline``1(System.String)">
            <summary>
            Creates a new <see cref="!:Kendo.Mvc.UI.Sparkline{T}" /> bound an item in ViewData.
            </summary>
            <typeparam name="T">Type of the data item</typeparam>
            <param name="dataViewDataKey">The data source view data key.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline&lt;SalesData&gt;("sales")
            .Name("Sparkline")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Sparkline">
            <summary>
            Creates a new unbound <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.Sparkline" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Sparkline()
            .Name("Sparkline")
            .Series(series =&gt; {
            series.Bar(new int[] { 1, 2, 3 }).Name("Total Sales");
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory.DeferredScripts(System.Boolean)">
            <summary>
            Returns the initialization scripts for widgets set as deferred
            </summary>
            <param name="renderScriptTags">Determines if the script should be rendered within a script tag</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.EditorFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.Editor" /> UI component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.NumericTextBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
            <summary>
            Creates a new <see cref="!:NumericTextBox{TValue}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().NumericTextBoxFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.NumericTextBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a new <see cref="!:NumericTextBox{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().NumericTextBoxFor(m=&gt;m.NullableProperty) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.IntegerTextBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Int32}}})">
            <summary>
            Creates a new <see cref="!:NumericTextBox{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().IntegerTextBoxFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.IntegerTextBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}})">
            <summary>
            Creates a new <see cref="!:NumericTextBox{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().IntegerTextBoxFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.CurrencyTextBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            Creates a new <see cref="!:NumericTextBox{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().CurrencyTextBoxFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.CurrencyTextBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
            <summary>
            Creates a new <see cref="!:NumericTextBox{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().CurrencyTextBoxFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.PercentTextBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Double}}})">
            <summary>
            Creates a new <see cref="!:NumericTextBox{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PercentTextBoxFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.PercentTextBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}})">
            <summary>
            Creates a new <see cref="!:NumericTextBox{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().PercentTextBoxFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.DateTimePickerFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.DateTimePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePickerFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.DateTimePickerFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.DateTimePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DateTimePickerFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.ColorPickerFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.ColorPicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ColorPickerFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.DatePickerFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.DatePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePickerFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.DatePickerFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.DatePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DatePickerFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.TimePickerFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.TimePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TimePickerFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.TimePickerFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.TimePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TimePickerFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.TimePickerFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.TimeSpan}}})">
            <summary>
            Creates a new <see cref="!:UI.TimePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TimePickerFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.TimePickerFor(System.Linq.Expressions.Expression{System.Func{`0,System.TimeSpan}})">
            <summary>
            Creates a new <see cref="!:UI.TimePicker" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().TimePickerFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.DropDownListFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.DropDownList" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().DropDownListFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.ComboBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.ComboBox" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().ComboBoxFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.AutoCompleteFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.AutoComplete" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().AutoCompleteFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.MultiSelectFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.MultiSelect" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().MultiSelectFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.SliderFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a new <see cref="!:UI.Slider{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().SliderFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.SliderFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
            <summary>
            Creates a new <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory{}.SliderFor(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().SliderFor(m=&gt;m.NullableProperty) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.SliderFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}})">
            <summary>
            Creates a new <see cref="!:SliderFor{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().SliderFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.SliderFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Double}}})">
            <summary>
            Creates a new <see cref="!:SliderFor{T}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().SliderFor(m=&gt;m.NullableProperty) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.RangeSliderFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0[]}})">
            <summary>
            Creates a new <see cref="!:RangeSliderFor{TValue}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RangeSliderFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.RangeSliderFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double[]}})">
            <summary>
            Creates a new <see cref="!:RangeSliderFor{TValue}" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RangeSliderFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.LinearGaugeFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.LinearGauge" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGaugeFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.LinearGaugeFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.LinearGauge" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().LinearGaugeFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.RadialGaugeFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.RadialGauge" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGaugeFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetFactory`1.RadialGaugeFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
            <summary>
            Creates a new <see cref="T:Kendo.Mvc.UI.RadialGauge" />.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().RadialGaugeFor(m=&gt;m.Property) %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.WindowActionsBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="P:Kendo.Mvc.UI.Window.Actions" />.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowActionsBuilder.#ctor(Kendo.Mvc.UI.IWindowButtonsContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.Fluent.WindowActionsBuilder" /> class.
            </summary>
            <param name="container">The <see cref="T:Kendo.Mvc.UI.IWindowButton" /> instance that is to be configured</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowActionsBuilder.Close">
            <summary>
            Configures the window to show a close button.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Actions(actions =&gt; actions.Close())
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowActionsBuilder.Maximize">
            <summary>
            Configures the window to show a maximize button.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Actions(actions =&gt; actions.Maximize())
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowActionsBuilder.Minimize">
            <summary>
            Configures the window to show a minimize button.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Actions(actions =&gt; actions.Maximize())
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowActionsBuilder.Refresh">
            <summary>
            Configures the window to show a refresh button.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Actions(actions =&gt; actions.Refresh())
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowActionsBuilder.Custom(System.String)">
            <summary>
            Configures the window to show a refresh button.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Actions(actions =&gt; actions.Custom("menu"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowActionsBuilder.Clear">
            <summary>
            Configures the window to show no buttons in its titlebar.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Actions(actions =&gt; actions.Clear())
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.WindowResizingSettingsBuilder">
            <summary>
            Defines the fluent API for configuring the Kendo Window resizing settings
            </summary>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.WindowEventBuilder">
            <summary>
            Defines the fluent interface for configuring the Window events.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Open(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Open client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Open("onOpen"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Open(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Open client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Open("onOpen"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Activate(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Activate client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Activate("onActivate"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Activate(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Activate client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Activate("onActivate"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Deactivate(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Deactivate client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Deactivate("onDeactivate"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Deactivate(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Deactivate client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Deactivate("onDeactivate"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Close(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Close client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Close("onClose"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Close(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Close client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Close("onClose"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.DragStart(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DragStart client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.DragStart("onDragStart"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.DragStart(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the DragStart client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.DragStart("onDragStart"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.DragEnd(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the DragEnd client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.DragEnd("onDragEnd"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.DragEnd(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the DragEnd client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.DragEnd("onDragEnd"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Resize(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Resize client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Resize("onResize"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Resize(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Resize client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Resize("onResize"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Refresh(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Refresh client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Refresh("onRefresh"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Refresh(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Refresh client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Refresh("onRefresh"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Error(System.String)">
            <summary>
            Defines the name of the JavaScript function that will handle the the Error client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Error("onError"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowEventBuilder.Error(System.Func{System.Object,System.Object})">
            <summary>
            Defines the name of the JavaScript function that will handle the the Error client-side event.
            </summary>
            <param name="handlerName">The name of the JavaScript function that will handle the event.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt; events.Error("onError"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.WindowBuilder">
            <summary>
            Defines the fluent interface for configuring the <see cref="T:Kendo.Mvc.UI.Window" /> component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Title(System.Boolean)">
            <summary>
            Allows title to be shown / hidden
            </summary>
            <param name="show">Whether the window title will be visible</param>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Title(System.String)">
            <summary>
            Sets title, which appears in the header of the window.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Content(System.Action)">
            <summary>
            Sets the HTML content which the window should display.
            </summary>
            <param name="value">The action which renders the content.</param>
            <example>
                <code lang="CS">
            &lt;% Html.Kendo().Window()
            .Name("Window")
            .Content(() =&gt;
            {
            %&gt;
            &lt;strong&gt;Window content&lt;/strong&gt;
            &lt;%
            })
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Content(System.Func{System.Object,System.Object})">
            <summary>
            Sets the HTML content which the window should display
            </summary>
            <param name="value">The Razor inline template</param>
            <example>
                <code lang="CS">
            @(Html.Kendo().Window()
            .Name("Window")
            .Content(@&lt;strong&gt; Hello World!&lt;/strong&gt;))
            </code>
            </example>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Content(System.String)">
            <summary>
            Sets the HTML content which the item should display as a string.
            </summary>
            <param name="value">The action which renders the content.</param>
            <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Content("&lt;strong&gt; First Item Content&lt;/strong&gt;")
            %&gt;
            </code>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.LoadContentFrom(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="routeValues">The route values of the Action method.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .LoadContentFrom(MVC.Home.Index().GetRouteValueDictionary());
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.LoadContentFrom(System.String,System.String)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="actionName">The action name.</param>
            <param name="controllerName">The controller name.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .LoadContentFrom("AjaxView_OpenSource", "Window")
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.LoadContentFrom(System.String,System.String,System.Object)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="actionName">The action name.</param>
            <param name="controllerName">The controller name.</param>
            <param name="routeValues">Route values.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .LoadContentFrom("AjaxView_OpenSource", "Window", new { id = 10})
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.LoadContentFrom(System.String)">
            <summary>
            Sets the Url, which will be requested to return the content.
            </summary>
            <param name="value">The url.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .LoadContentFrom(Url.Action("AjaxView_OpenSource", "Window"))
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Events(System.Action{Kendo.Mvc.UI.Fluent.WindowEventBuilder})">
            <summary>
            Configures the client-side events.
            </summary>
            <param name="clientEventsAction">The client events action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Events(events =&gt;
            events.Open("onOpen").Close("onClose")
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Resizable">
            <summary>
            Enables windows resizing.
            </summary>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Resizable()
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Resizable(System.Action{Kendo.Mvc.UI.Fluent.WindowResizingSettingsBuilder})">
            <summary>
            Configures the resizing ability of the window.
            </summary>
            <param name="resizingSettingsAction">Resizing settings action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Resizable(settings =&gt;
            settings.Enabled(true).MaxHeight(500).MaxWidth(500)
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Actions(System.Action{Kendo.Mvc.UI.Fluent.WindowActionsBuilder})">
            <summary>
            Configures the window buttons.
            </summary>
            <param name="clientEventsAction">The buttons configuration action.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Actions(actions =&gt;
            actions.
            )
            %&gt;
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Width(System.Int32)">
            <summary>
            Sets the width of the window.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Height(System.Int32)">
            <summary>
            Sets the height of the window.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Visible(System.Boolean)">
            <summary>
            Sets whether the window should be rendered visible.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Scrollable(System.Boolean)">
            <summary>
            Sets whether the window should have scrollbars.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Animation(System.Boolean)">
            <summary>
            Configures the animation effects of the window.
            </summary>
            <param name="enable">Whether the component animation is enabled.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Animation(false)
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Animation(System.Action{Kendo.Mvc.UI.Fluent.PopupAnimationBuilder})">
            <summary>
            Configures the animation effects of the panelbar.
            </summary>
            <param name="animationAction">The action that configures the animation.</param>
            <example>
                <code lang="CS">
            &lt;%= Html.Kendo().Window()
            .Name("Window")
            .Animation(animation =&gt; animation.Expand)
            </code>
            </example>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Modal(System.Boolean)">
            <summary>
            Sets whether the window should be modal or not.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Draggable">
            <summary>
            Sets whether the window can be moved.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Draggable(System.Boolean)">
            <summary>
            Sets whether the window can be moved.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WindowBuilder.Iframe(System.Boolean)">
            <summary>
            Explicitly specifies whether the loaded window content will be rendered as an iframe or in-line
            </summary>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.IPathResolver.Resolve(System.String)">
            <summary>
            Returns the physical path for the specified virtual path.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="replaceExisting">if set to <c>true</c> [replace existing].</param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.DictionaryExtensions.AppendInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)">
            <summary>
            Appends the in value.
            </summary>
            <param name="instance">The instance.</param>
            <param name="key">The key.</param>
            <param name="separator">The separator.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.DictionaryExtensions.PrependInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)">
            <summary>
            Appends the specified value at the beginning of the existing value
            </summary>
            <param name="instance">
            </param>
            <param name="key">
            </param>
            <param name="separator">
            </param>
            <param name="value">
            </param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.DictionaryExtensions.ToAttributeString(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Toes the attribute string.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="from">From.</param>
            <param name="replaceExisting">if set to <c>true</c> [replace existing].</param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="from">From.</param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Boolean)">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="values">The values.</param>
            <param name="replaceExisting">if set to <c>true</c> [replace existing].</param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Kendo.Mvc.Extensions.HttpContextBaseExtensions.RequestContext(System.Web.HttpContextBase)">
            <summary>
            Requests the context.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.HttpContextBaseExtensions.IsMono(System.Web.HttpContextBase)">
            <summary>
            Gets a value indicating whether we're running under Mono.
            </summary>
            <value>
                <c>true</c> if Mono; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Kendo.Mvc.Extensions.HttpContextBaseExtensions.IsLinux(System.Web.HttpContextBase)">
            <summary>
            Gets a value indicating whether we're running under Linux or a Unix variant.
            </summary>
            <value>
                <c>true</c> if Linux/Unix; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.PathResolver.Resolve(System.String)">
            <summary>
            Returns the physical path for the specified virtual path.
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.ReaderWriterLockSlimExtensions.ReadAndWrite(System.Threading.ReaderWriterLockSlim)">
            <summary>
            Starts thread safe read write code block.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.ReaderWriterLockSlimExtensions.Read(System.Threading.ReaderWriterLockSlim)">
            <summary>
            Starts thread safe read code block.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.ReaderWriterLockSlimExtensions.Write(System.Threading.ReaderWriterLockSlim)">
            <summary>
            Starts thread safe write code block.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.StringExtensions.FormatWith(System.String,System.Object[])">
            <summary>
            Replaces the format item in a specified System.String with the text equivalent of the value of a corresponding System.Object instance in a specified array.
            </summary>
            <param name="instance">A string to format.</param>
            <param name="args">An System.Object array containing zero or more objects to format.</param>
            <returns>A copy of format in which the format items have been replaced by the System.String equivalent of the corresponding instances of System.Object in args.</returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.StringExtensions.IsCaseSensitiveEqual(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified System.String object have the same value.
            </summary>
            <param name="instance">The string to check equality.</param>
            <param name="comparing">The comparing with string.</param>
            <returns>
                <c>true</c> if the value of the comparing parameter is the same as this string; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kendo.Mvc.Extensions.StringExtensions.IsCaseInsensitiveEqual(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified System.String object have the same value.
            </summary>
            <param name="instance">The string to check equality.</param>
            <param name="comparing">The comparing with string.</param>
            <returns>
                <c>true</c> if the value of the comparing parameter is the same as this string; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Kendo.Mvc.Resources.Exceptions">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.ResourceManager">
            <summary>
            Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.Culture">
            <summary>
            Overrides the current thread's CurrentUICulture property for all
            resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.ArrayCannotBeEmpty">
            <summary>
            Looks up a localized string similar to "{0}" array cannot be empty..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.BatchUpdatesRequireInCellMode">
            <summary>
            Looks up a localized string similar to You must use InCell edit mode for batch updates..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.BatchUpdatesRequireUpdate">
            <summary>
            Looks up a localized string similar to The Update data binding setting is required for batch updates. Please specify the Update action or url in the DataBinding configuration..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotBeNegative">
            <summary>
            Looks up a localized string similar to "{0}" cannot be negative..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotBeNegativeOrZero">
            <summary>
            Looks up a localized string similar to "{0}" cannot be negative or zero..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotBeNull">
            <summary>
            Looks up a localized string similar to "{0}" cannot be null..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotBeNullOrEmpty">
            <summary>
            Looks up a localized string similar to "{0}" cannot be null or empty..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotFindPropertyToSortBy">
            <summary>
            Looks up a localized string similar to Cannot find a public property of primitive type to sort by..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotHaveMoreOneColumnInOrderWhenSortModeIsSetToSingleColumn">
            <summary>
            Looks up a localized string similar to Cannot have more one column in order when sort mode is set to single column..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotRouteToClassNamedController">
            <summary>
            Looks up a localized string similar to Cannot route to class named 'Controller'..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotSetAutoBindIfBoundDuringInitialization">
            <summary>
            Looks up a localized string similar to Cannot set AutoBind if widget is populated during initialization.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotUseAjaxAndWebServiceAtTheSameTime">
            <summary>
            Looks up a localized string similar to Cannot use Ajax and WebService binding at the same time..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotUseTemplatesInAjaxOrWebService">
            <summary>
            Looks up a localized string similar to Cannot use only server templates in Ajax or WebService binding mode. Please specify a client template as well..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CannotUseVirtualScrollWithServerBinding">
            <summary>
            Looks up a localized string similar to Cannot use Virtual Scroll with Server binding..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CollectionCannotBeEmpty">
            <summary>
            Looks up a localized string similar to "{0}" collection cannot be empty..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.ControllerNameAmbiguousWithoutRouteUrl">
            <summary>
            Looks up a localized string similar to Multiple types were found that match the controller named '{0}'. This can happen if the route that services this request does not specify namespaces to search for a controller that matches the request. If this is the case, register this route by calling an overload of the 'MapRoute' method that takes a 'namespaces' parameter.
            The request for '{0}' has found the following matching controllers:{1}.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.ControllerNameAmbiguousWithRouteUrl">
            <summary>
            Looks up a localized string similar to Multiple types were found that match the controller named '{0}'. This can happen if the route that services this request ('{1}') does not specify namespaces to search for a controller that matches the request. If this is the case, register this route by calling an overload of the 'MapRoute' method that takes a 'namespaces' parameter.
            The request for '{0}' has found the following matching controllers:{2}.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.ControllerNameMustEndWithController">
            <summary>
            Looks up a localized string similar to Controller name must end with 'Controller'..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.CustomCommandRoutesWithAjaxBinding">
            <summary>
            Looks up a localized string similar to Custom command routes is available only for server binding..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.DataKeysEmpty">
            <summary>
            Looks up a localized string similar to There is no DataSource Model Id property specified..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.DataTableInLineEditingWithCustomEditorTemplates">
            <summary>
            Looks up a localized string similar to DataTable InLine editing and custom EditorTemplate per column is not supported.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.DataTablePopUpTemplate">
            <summary>
            Looks up a localized string similar to You must specify TemplateName when PopUp edit mode is enabled with DataTable binding.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.DeleteCommandRequiresDelete">
            <summary>
            Looks up a localized string similar to The Delete data binding setting is required by the delete command. Please specify the Delete action or url in the DataBinding configuration..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.EditCommandRequiresUpdate">
            <summary>
            Looks up a localized string similar to The Update data binding setting is required by the edit command. Please specify the Update action or url in the DataBinding configuration..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.FirstPropertyShouldNotBeBiggerThenSecondProperty">
            <summary>
            Looks up a localized string similar to {0} should not be bigger then {1}..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.GroupWithSpecifiedNameAlreadyExists">
            <summary>
            Looks up a localized string similar to Group with specified name already exists..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.GroupWithSpecifiedNameAlreadyExistsPleaseSpecifyADifferentName">
            <summary>
            Looks up a localized string similar to Group with specified name "{0}" already exists. Please specify a different name..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.GroupWithSpecifiedNameDoesNotExistInAssetTypeOfSharedWebAssets">
            <summary>
            Looks up a localized string similar to Group with "{0}" does not exist in {1} SharedWebAssets..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.GroupWithSpecifiedNameDoesNotExistPleaseMakeSureYouHaveSpecifiedACorrectName">
            <summary>
            Looks up a localized string similar to Group with specified name "{0}" does not exist. Please make sure you have specified a correct name..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.InCellModeNotSupportedInServerBinding">
            <summary>
            Looks up a localized string similar to InCell editing mode is not supported in server binding mode.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.InCellModeNotSupportedWithRowTemplate">
            <summary>
            Looks up a localized string similar to InCell editing mode is not supported when ClientRowTemplate is used.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.IndexOutOfRange">
            <summary>
            Looks up a localized string similar to Provided index is out of range..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.InsertCommandRequiresInsert">
            <summary>
            Looks up a localized string similar to The Insert data binding setting is required by the insert command. Please specify the Insert action or url in the DataBinding configuration..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.ItemWithSpecifiedSourceAlreadyExists">
            <summary>
            Looks up a localized string similar to Item with specified source already exists..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.LocalGroupWithSpecifiedNameAlreadyExists">
            <summary>
            Looks up a localized string similar to Local group with name "{0}" already exists..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.LocalizationKeyNotFound">
            <summary>
            Looks up a localized string similar to The key with the following name "{0}" was not found. Please update all localization files..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.MemberExpressionRequired">
            <summary>
            Looks up a localized string similar to Bound columns require a field or property access expression..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.MinPropertyMustBeLessThenMaxProperty">
            <summary>
            Looks up a localized string similar to {0} should be less than {1}..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.NameCannotBeBlank">
            <summary>
            Looks up a localized string similar to Name cannot be blank..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.NameCannotContainSpaces">
            <summary>
            Looks up a localized string similar to Name cannot contain spaces..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.NoneIsOnlyUsedForInternalPurpose">
            <summary>
            Looks up a localized string similar to "None" is only used for internal purpose..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.OnlyOneScriptRegistrarIsAllowedInASingleRequest">
            <summary>
            Looks up a localized string similar to Only one ScriptRegistrar is allowed in a single request..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.OnlyOneStyleSheetRegistrarIsAllowedInASingleRequest">
            <summary>
            Looks up a localized string similar to Only one StyleSheetRegistrar is allowed in a single request..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.OnlyPropertyAndFieldExpressionsAreSupported">
            <summary>
            Looks up a localized string similar to Only property and field expressions are supported.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.Pager_Of">
            <summary>
            Looks up a localized string similar to of {0}.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.PagingMustBeEnabledToUsePageOnScroll">
            <summary>
            Looks up a localized string similar to Paging must be enabled to use PageOnScroll..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.PropertyMustBeBiggerThenZero">
            <summary>
            Looks up a localized string similar to The {0} must be bigger then 0..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.PropertyMustBePositiveNumber">
            <summary>
            Looks up a localized string similar to {0} must be positive number..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.PropertyShouldBeInRange">
            <summary>
            Looks up a localized string similar to {0} should be bigger than {1} and less then {2}.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.Rtl">
            <summary>
            Looks up a localized string similar to The "{0}" class is no longer supported. To enable RTL support you must include telerik.rtl.css and apply the "t-rtl" class to a parent HTML element or the &lt;body&gt;..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.ScrollingMustBeEnabledToUsePageOnScroll">
            <summary>
            Looks up a localized string similar to Scrolling must be enabled to use PageOnScroll..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.SiteMapShouldBeDefinedInViewData">
            <summary>
            Looks up a localized string similar to You must have SiteMap defined with key "{0}" in ViewData dictionary..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.SourceMustBeAVirtualPathWhichShouldStartsWithTileAndSlash">
            <summary>
            Looks up a localized string similar to Source must be a virtual path which should starts with "~/".
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.SpecifiedFileDoesNotExist">
            <summary>
            Looks up a localized string similar to Specified file does not exist: "{0}"..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.StringNotCorrectDate">
            <summary>
            Looks up a localized string similar to Passed string cannot be parsed to DateTime object..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.StringNotCorrectTimeSpan">
            <summary>
            Looks up a localized string similar to Passed string cannot be parsed to TimeSpan object..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.TheSpecifiedMethodIsNotAnActionMethod">
            <summary>
            Looks up a localized string similar to The specified method is not an action method..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.TimeOutOfRange">
            <summary>
            Looks up a localized string similar to Time should be bigger than MinTime and less than MaxTime..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.TooltipContainerShouldBeSet">
            <summary>
            Looks up a localized string similar to You should set Tooltip container. Tooltip.For(container).
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.UrlAndContentUrlCannotBeSet">
            <summary>
            Looks up a localized string similar to You cannot set Url and ContentUrl at the same time..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.ValueNotValidForProperty">
            <summary>
            Looks up a localized string similar to The value '{0}' is invalid..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.WebServiceUrlRequired">
            <summary>
            Looks up a localized string similar to The Url of the WebService must be set.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.YouCannotAddMoreThanOnceColumnWhenSortModeIsSetToSingle">
            <summary>
            Looks up a localized string similar to You cannot add more than once column when sort mode is set to single column..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.YouCannotCallBindToWithoutCustomBinding">
            <summary>
            Looks up a localized string similar to You cannot use non generic BindTo overload without EnableCustomBinding set to true.
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.YouCannotCallRenderMoreThanOnce">
            <summary>
            Looks up a localized string similar to You cannot call render more than once..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.YouCannotCallStartMoreThanOnce">
            <summary>
            Looks up a localized string similar to You cannot call Start more than once..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.YouCannotConfigureASharedWebAssetGroup">
            <summary>
            Looks up a localized string similar to You cannot configure a shared web asset group..
            </summary>
        </member>
        <member name="P:Kendo.Mvc.Resources.Exceptions.YouMustHaveToCallStartPriorCallingThisMethod">
            <summary>
            Looks up a localized string similar to You must have to call Start prior calling this method..
            </summary>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.IUrlResolver.Resolve(System.String)">
            <summary>
            Returns the relative path for the specified virtual path.
            </summary>
            <param name="url">The URL.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.IScriptableComponent.WriteInitializationScript(System.IO.TextWriter)">
            <summary>
            Writes the initialization script.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:Kendo.Mvc.UI.Fluent.WidgetBuilderBase`2">
            <summary>
            View component Builder base class.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetBuilderBase`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="!:WidgetBuilderBase&lt;TViewComponent, TBuilder&gt;" /> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.Fluent.WidgetBuilderBase`2.Component">
            <summary>
            Gets the view component.
            </summary>
            <value>The component.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetBuilderBase`2.ToComponent">
            <summary>
            Returns the internal view component.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetBuilderBase`2.Name(System.String)">
            <summary>
            Sets the name of the component.
            </summary>
            <param name="componentName">The name.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetBuilderBase`2.Deferred">
            <summary>
            Suppress initialization script rendering. Note that this options should be used in conjunction with <see cref="M:Kendo.Mvc.UI.Fluent.WidgetFactory.DeferredScripts(System.Boolean)" /></summary>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetBuilderBase`2.HtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetBuilderBase`2.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Kendo.Mvc.UI.Fluent.WidgetBuilderBase`2.Render">
            <summary>
            Renders the component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.WidgetBase.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Kendo.Mvc.UI.WidgetBase" /> class.
            </summary>
            <param name="viewContext">The view context.</param>
            <param name="clientSideObjectWriterFactory">The client side object writer factory.</param>
        </member>
        <member name="P:Kendo.Mvc.UI.WidgetBase.Events">
            <summary>
            Gets the client events of the grid.
            </summary>
            <value>The client events.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.WidgetBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.WidgetBase.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.WidgetBase.HtmlAttributes">
            <summary>
            Gets the HTML attributes.
            </summary>
            <value>The HTML attributes.</value>
        </member>
        <member name="P:Kendo.Mvc.UI.WidgetBase.ViewContext">
            <summary>
            Gets or sets the view context to rendering a view.
            </summary>
            <value>The view context.</value>
        </member>
        <member name="M:Kendo.Mvc.UI.WidgetBase.Render">
            <summary>
            Renders the component.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.UI.WidgetBase.WriteInitializationScript(System.IO.TextWriter)">
            <summary>
            Writes the initialization script.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Kendo.Mvc.UI.WidgetBase.WriteHtml(System.Web.UI.HtmlTextWriter)">
            <summary>
            Writes the HTML.
            </summary>
        </member>
        <member name="M:Kendo.Mvc.Infrastructure.Implementation.UrlResolver.Resolve(System.String)">
            <summary>
            Returns the relative path for the specified virtual path.
            </summary>
            <param name="url">The URL.</param>
            <returns>
            </returns>
        </member>
    </members>
</doc>
