@using System.Web.Mvc.Extensions.Html
@using Cats.Helpers
@using Cats.Services.Security
@using Cats.Helpers
@using LanguageHelpers.Localization
@model List<Cats.Areas.EarlyWarning.Models.ReliefRequisitionViewModel>
    @{
        ViewBag.Title = Html.Translate("Approve");
        var user = (UserIdentity)HttpContext.Current.User.Identity;
    }
    <div class="modal-dialog" style="width: 90%;" data-ng-app="">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 id="myModalLabel">@Html.Translate("Approve")</h4>
            </div>

            @using (Html.BeginForm("PromotThese", "ReliefRequisition", FormMethod.Post,
                new { enctype = "multipart/form-data", @class = "form", id = "frm_approve_requisition" }))
            {
                <div class="modal-body">
                    @*<div class="form-group">
                            <label class="col-md-3 control-label">@Html.Translate("Comment")</label>
                            <div class="col-md-9">
                                <textarea onchange="OnChange()" rows="4" name="Comment" class="form-control"></textarea>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-3 control-label">@Html.Translate("Attachment File")</label>
                            <div class="col-md-9">
                                <input type="file" name="AttachmentFile" class="form-control" />
                            </div>
                        </div>*@

                    <table class="table table-striped table-condensed" id="RequisitionToBeApproved">
                        <thead>
                            <tr>
                                <th>Action</th>
                                <th>RequisitionNo</th>
                                <th>Commodity</th>
                                <th>Zone</th>
                                <th>Round/Month</th>
                                <th>RequestedDateEt</th>
                                <th>Request No</th>
                                <th>Comment</th>
                                <th>Attachment</th>
                            </tr>
                        </thead>

                        <tbody>

                            @try
                            {
                                if (Model != null)
                                {
                                    for (int i = 0; i < Model.Count; i++)
                                    {
                                        <tr class="item">

                                            @Html.HiddenFor(m => m[i].BusinessProcessID)
                                            @Html.HiddenFor(m => m[i].ApprovedId)

                                            <td>
                                                @Html.CheckBoxFor(m => m[i].IsSelected, new { @class = " form-control" })
                                            </td>

                                            <td>
                                                @Html.TextBoxFor(m => m[i].RequisitionNo, new { @readonly = "readonly" })
                                            </td>

                                            <td>
                                                @Html.Label("Commodity", Model[i].Commodity, new { @id = "Commodity" })
                                            </td>

                                            <td>
                                                @Html.Label("Zone", Model[i].Zone, new { @id = "Zone" })
                                            </td>

                                            <td>
                                                @Html.Label("MonthRound", Model[i].MonthRound, new { @id = "MonthRound" })
                                            </td>

                                            <td>
                                                @Html.Label("RequestedDateEt", Model[i].RequestedDateEt, new { @id = "RequestedDateEt" })
                                            </td>

                                            <td>
                                                @Html.Label("RequestRefNo", Model[i].RequestRefNo, new { @id = "RequestRefNo" })
                                            </td>

                                            <td>
                                                @Html.TextBoxFor(m => m[i].Comment, new { @id = "Comment", @class = " form-control" })
                                            </td>

                                            <td>
                                                @Html.TextBoxFor(m => m[i].AttachmentFile, new { @id = "AttachmentFile", type = "file" })
                                            </td>

                                        </tr>
                                    }
                                }
                            }
                            catch (Exception)
                            {

                            }
                        </tbody>

                    </table>
                </div>

                @*<tr>*@
                @* <td colspan="3">*@
                <div class="modal-footer">
                    <button class="btn green" type="submit">@Html.Translate("Approve")</button>
                    <a class="btn red" data-dismiss="modal" aria-hidden="true">@Html.Translate("Cancel")</a>
                </div>
                @*     </td>
                    </tr>*@
            }
            @*<div class="modal-footer">
                    <input type="submit" onclick="" form="frm_approve_requisition" class="btn btn-circle btn-default blue-sharp-stripe toolbar-btn" value="Save" />
                </div>*@

        </div>

    </div>


    <script type="text/javascript">

        function OnChange() {

            var table = document.getElementById("RequisitionToBeApproved");
            var r=0;
            while(row=table.rows[r++])
            {
                var c=0;
                while(cell=row.cells[c++]) {

                }
            }
        }

    </script>
