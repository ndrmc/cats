@model Cats.Areas.GiftCertificate.Models.GiftCertificateViewModel
@using Cats.Helpers
@using Kendo.Mvc.UI
@using LanguageHelpers.Localization
@{
    Layout = "~/Views/Shared/_CATSLayout.cshtml";
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";
    ViewBag.PageTitle = Html.Translate("Add Gift Certificate");
    ViewBag.PageTitleDescription = "";
    ViewBag.IsInEditMode = false;
}

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Create", "GiftCertificate", FormMethod.Post, new {id = "frm_create_gift", @class= "form-horizontal" }))
        {
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.rowCount)
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption font-green-sharp">
                        <i class="icon-list font-green-sharp"></i>
                        <span class="caption-subject bold uppercase"> @Html.Translate("Gift Certificate Detail")</span>
                    </div>
                    <div class="tools">
                        <a href="#" class="collapse" data-original-title="" title=""></a>
                    </div>
                    <div class="actions">
                        <button class="btn green btn-sm" data-buttontype="btn_save" type="submit" data-submittedform="frm_create_gift"><span class="fa fa-save"></span> @Html.Translate("Save")</button>
                        <a class="btn red btn-sm" data-buttontype="btn_cancel" href="@Url.Action("Index", "GiftCertificate")"><span class="fa fa-lg fa-times-circle"></span> @Html.Translate("Cancel")</a>
                        <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;"></a>
                    </div>
                </div>
                <div class="portlet-body row">
                    
                        @Html.ValidationSummary(true)
                        <div class="col-md-6 col-sm-6 ">
                            <div class="form-group">
                                @Html.LabelFor(model => model.GiftDate, Html.Translate("Gift Date"), new {@class = "col-sm-4 control-label cats-date-pref"})
                                <div class="col-sm-8">

                                    @Html.TextBoxFor(model => model.GiftDate, new {@class = " form-control cats-datepicker2"})
                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.GiftDate)</span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DModeOfTransport, Html.Translate("Mode Of transport"), new {@class = "col-sm-4 control-label"})
                                <div class="col-sm-8">
                                    @Html.DropDownList("DModeOfTransport", (IEnumerable<SelectListItem>) ViewBag.DModeOfTransport, String.Empty, new {@class = "form-control"})
                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.DModeOfTransport)</span>
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.ProgramID, Html.Translate("Program"), new {@class = "col-sm-4 control-label"})

                                <div class="col-sm-8">

                                    @Html.DropDownList("ProgramID", null, String.Empty, new {@class = "form-control"})
                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.ProgramID)</span>
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.DonorID, Html.Translate("Donor"), new {@class = "col-sm-4 control-label"})

                                <div class="col-sm-8">

                                    @Html.DropDownList("DonorID", null, String.Empty, new {@class = "form-control"})
                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.DonorID)</span>
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.DeclarationNumber, Html.Translate("Declaration Number"), new {@class = "col-sm-4 control-label"})

                                <div class="col-sm-8">

                                    @Html.TextBoxFor(model => model.DeclarationNumber, new {@class = " form-control"})

                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.DeclarationNumber)</span>

                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.CommodityTypeID, Html.Translate("Commodity Type"), new {@class = "col-sm-4 control-label"})

                                <div class="col-sm-8">

                                    @Html.DropDownList("CommodityTypeID", null, String.Empty, new {@class = "form-control"})

                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.CommodityTypeID)</span>

                                </div>
                            </div>

                        </div>
                        <div class="col-md-6 col-sm-6 ">
                            <div class="form-group">

                                @Html.LabelFor(model => model.SINumber, Html.Translate("SI/Batch Number"), new {@class = "col-sm-4 control-label"})

                                <div class="col-sm-8">

                                    @(Html.Kendo().AutoComplete()
                                          .Name("SINumber")
                                          .HtmlAttributes(new {@class = " form-control"})
                                          .Filter("startswith")
                                          .Placeholder(Html.Translate("Enter or Select SINumber..."))
                                          .DataSource(source => source.Read(read => read.Action("AutoCompleteSiNumber", "GiftCertificate").Data("onAdditionalData")).ServerFiltering(true))

                                          )

                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.SINumber)</span>
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.PortName, Html.Translate("Port Name"), new {@class = "col-sm-4 control-label"})

                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.PortName, new {@class = " form-control"})
                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.PortName)</span>
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.ReferenceNo, Html.Translate("Reference Number"), new {@class = "col-sm-4 control-label"})

                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.ReferenceNo, new {@class = " form-control"})
                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.ReferenceNo)</span>
                                </div>
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(model => model.Vessel, Html.Translate("Vessel"), new {@class = "col-sm-4 control-label"})

                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.Vessel, new {@class = " form-control"})
                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.Vessel)</span>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-label">
                                    @Html.LabelFor(model => model.ETA, Html.Translate("ETA"), new {@class = "col-sm-4 control-label cats-date-pref"})
                                </div>

                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.ETA, new {@class = "form-control cats-datepicker2"})
                                    <span class="help-block"> @Html.ValidationMessageFor(model => model.ETA)</span>
                                </div>
                            </div>

                        </div>
                   

                </div>
            </div>
        }
    </div>
</div>

           

<script type="text/javascript">
    function onAdditionalData(e) {
        // var filterValue = e.filter.filters[0].value;
        //alert($("#SINumber").val());
        // alert(filterValue);
        return {
            term: $("#SINumber").val()
            //term:filterValue
        };
    }
</script>
@*<script>
        $(document).ready(function() {
            $("#sites").kendoAutoComplete({
                placeholder: "Enter site ...",
                dataTextField: "SiteName",
                filter: "startswith",
                minLength: 3,
                dataSource: {
                    type: "json",
                    serverFiltering: true,
                    serverPaging: true,
                    pageSize: 20,
                    transport: {
                        read:
                            {
                                url: '@Url.Action("AutoCompleteSiNumber", "GiftCertificate")'
                            }, //read
                        parameterMap: function() {// send value of autocomplete as the "startsWith" parameter
                                    return {
                                        term: $("#sites").data("kendoAutoComplete").value()
                                    };
                        }
                    } //transport
                } //datasource
            }); //kendoAutoComplete
        }); //DocumentReady
    </script>*@
@*<script type="text/javascript">
        $(document).ready(function () {
            $("#siNumber").autocomplete({

                source: function (request, response) {
                    $.ajax({
                        url:'@Url.Action("AutoCompleteSiNumber", "GiftCertificate")',
                        type: "GET",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            alert("here");
                            response($.map(data, function (item) {
                                return { label: item.Value, value: item.Value };
                            }))

                        }
                    })
                },
                //messages: {
                //    noResults: "", results: ""
                //}
            });
        })
    </script>*@
@*<script type="text/javascript">
        $(function () {
            $("input#siNumber").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("AutoCompleteSiNumber", "GiftCertificate")', type: "POST", dataType: "json",
                        data: { searchTerm: request.term, maxResults: 10 },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.Value,
                                    value: item.Value
                                }
                            }))
                        }
                    })
                },

            });
        });
    </script>*@
@*<script>
        function onAdditionalData() {
            return {
                text: $("#siAutoComplete").val()
            };
        }
    </script>*@


