@using Cats.Areas.EarlyWarning.Models
@using Cats.Helpers
@using Cats.Models
@using Cats.Security
@using Cats.Services.Security
@using Kendo.Mvc.UI
@using LanguageHelpers.Localization
@using Cats.Models.Constant
@{
    ViewBag.Title = "NeedAssessmentPlan";
    Layout = "~/Views/Shared/_CATSLayout.cshtml";
    int index = 0;
}

@section Title
{
Plans
}

@section PageTitle
{
    <h1 class="hdr-blck big ">1
        @Html.Translate("Draft Need Assessment")
    </h1>
}

<div class="row">
    @Html.Partial("_NeedAssessmentMainLeftBar")

    <div class="col-md-10  col-sm-9">
        <div class=" box box-primary ">
            <div class="box-body row">
                <div class="text-right col-md-12">
                    @if (UserAccountHelper.EarlyWarningPsnpOperationCheck(EarlyWarningConstants.Operation.Create_new_needs_assessment)
                    || UserAccountHelper.RegionalOperationCheck(RegionalConstants.Operation.Add_new_needs_assessment))
                    {
                        <a href="@Url.Action("CreateNeedAssessment", "NeedAssessment", new {Area = "EarlyWarning"})" class="btn" btn-success=""
                           data-buttontype="btn_new_record"><button type="button" class="btn btn-success"><span class="fa fa-plus"></span> New Need Assessment</button></a>
                    }
                </div>
                <div class="col-md-12">
                    <div class="table-responsive">
                        <table class="table table-striped table-condensed">
                            <thead>
                                <tr>
                                    <th>Assessment Name</th>
                                    <th>Start Date</th>
                                    <th>End Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (NeedAssessmentPlanViewModel item in Model)
                                {
                                    index++;
                                    var state = item.BusinessProcess.CurrentState.BaseStateTemplate;
                                    //if (state.Name == "Approved by finance" || state.Name == "Cheque Issued" || state.Name == "Cheque Cashed")
                                    //{
                                    <tr>
                                        <td>
                                            @item.CheckNo
                                        </td>
                                        <td>
                                            @item.PaymentVoucherNo
                                        </td>
                                        <td>
                                            @item.BankName
                                        </td>
                                        <td>
                                            @item.Amount
                                        </td>
                                        <td>
                                            @item.UserProfile.FirstName &nbsp; @item.UserProfile.LastName
                                        </td>
                                        <td>
                                            @state.Name
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <button class="btn btn-default btn-xs yellow-crusta-stripe" data-ng-click="loadChequeEditPage(@item.TransporterChequeId, @state.StateNo)">Edit</button>
                                                <button type="button" id="action_@index" class="btn btn-default dropdown-toggle btn-xs green-stripe" data-toggle="dropdown">
                                                    <i class="fa fa-ellipsis-horizontal"></i> @Html.Translate("Workflow") <i class="fa fa-angle-down"></i>
                                                </button>
                                                <ul class="dropdown-menu pull-right">
                                                    @foreach (FlowTemplate actions in state.InitialStateFlowTemplates)
                                                    {
                                                        if (UserAccountHelper.FinanceOperationCheck(FinanceConstants.Operation.Approve_cheque) && actions.Name == "Approve Cheque")
                                                        {
                                                            <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.TransporterChequeId)" title="@actions.Name">@actions.Name</a></li>
                                                        }
                                                        if (UserAccountHelper.FinanceOperationCheck(FinanceConstants.Operation.Collect_cheque) && actions.Name == "Collect Cheque")
                                                        {
                                                            <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.TransporterChequeId)" title="@actions.Name">@actions.Name</a></li>
                                                        }
                                                    }
                                                    <li class="divider"></li>
                                                    @if (UserAccountHelper.FinanceOperationCheck(FinanceConstants.Operation.View_history))
                                                    {
                                                        <li class="edit_button"><a href="javascript:workflow_history(@item.BusinessProcessID)"> History </a></li>
                                                    }
                                                </ul>
                                                @{
                                                    if (state.StateNo >= 1)
                                                    {
                                                        if (UserAccountHelper.FinanceOperationCheck(FinanceConstants.Operation.Print_Check_Payment))
                                                        {
                                                            <a class="btn btn-default btn-xs blue-steel-stripe" style="margin-left: 5px;" href="@Url.Action("PrintCheckPayment", "Cheque", new {transporterID = ViewBag.TransporterID, checkno = item.CheckNo, pvn = item.PaymentVoucherNo})">Print</a>
                                                        }
                                                    }
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                                        //}

                                                    }
                            </tbody>
                        </table>
                            @(Html.Kendo().Grid<Cats.Areas.EarlyWarning.Models.NeedAssessmentPlanViewModel>()
                              .Name("grid")
                              .Columns(columns =>
                              {
                                  columns.Bound(p => p.AssessmentName).Title(Html.Translate("Assessment Name")).ClientTemplate(
                                      "# if ('" + UserAccountHelper.EarlyWarningPsnpOperationCheck(EarlyWarningConstants.Operation.View_Need_Assessment_Detail) + "' == 'True'" +
                                      " || '" + UserAccountHelper.RegionalOperationCheck(RegionalConstants.Operation.View_Need_Assessment_Detail) + "' == 'True') { #" +
                                      "<a href='" + Url.Action("Detail", "NeedAssessment", new { id = "#=PlanID#" }) + " '> " + "#=AssessmentName#" + "</a>  " +
                                      "# } #"
                                      );
                                  columns.Bound(p => p.StartDate).Title(Html.Translate("Start Date"));
                                  columns.Bound(p => p.EndDate).Title(Html.Translate("End Date"));
                                  columns.Bound(p => p.Status).Title(Html.Translate("Status"));
                                  columns.Command(p =>
                                  {
                                      if (UserAccountHelper.EarlyWarningPsnpOperationCheck(EarlyWarningConstants.Operation.Approve_Need_Assessment)
                                          || UserAccountHelper.RegionalOperationCheck(RegionalConstants.Operation.Approve__need_assesment))
                                      {
                                          p.Custom("Approve").Click("approveNeedAssessment").Text("<span class=\"fa fa-check\"></span> Approve ");
                                      }
                                  });
                                  //p => p.Custom("Approve")
                                  //         .Click("approveNeedAssessment")
                                  //         .Text(

                                  //              @Html.EarlyWarningOperationJsLink(
                                  //                    EarlyWarningConstants.Operation.View_Need_Assessment_Detail, "Approve", "approveNeedAssessment").ToString()

                                  //          )

                                  //columns.Template(
                                  //          @<text>
                                  //          @Html.EarlyWarningOperationJsLink(
                                  //              EarlyWarningConstants.Operation.View_Need_Assessment_Detail, "Approve", "approveNeedAssessment").ToString()
                                  //          </text>
                                  //      ).Width("200px");
                              })
                              .HtmlAttributes(new { style = "height: 430px" })
                              .Pageable()
                              .Sortable()
                              .Scrollable()
                              .Events(e => e.DataBound("onDataBound"))
                              .DataSource(dataSource => dataSource
                                  .Ajax()
                                  .PageSize(30)
                                  .ServerOperation(false)
                                  .Model(model => model.Id(p => p.PlanID))
                                  .Read(read => read.Action("NeedAssessment_Plan", "NeedAssessment", new { id = ViewBag.AssessmentStatus }))
                              )
                            )
</div>
                </div>
            </div>


        </div>
    </div>
</div>

<div class="modal" id="cats-modal">
<div class="modal-dialog modal-sm">
    <div class="modal-content">
      
        <div class="modal-header">
          <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
          <h4 id="myModalLabel" class="modal-title">@Html.Translate("Approve Gift Certificate")</h4>
        </div>


            <div class="modal-body">
              
                <p>
                  @Html.Translate("Are you sure do you want to approve Need Assesssment?") 
                </p>

            </div>
            <div class="modal-footer">
                <button id="yes" class="btn btn-primary" type="submit">@Html.Translate("Yes") </button>
                <button id="no"class="btn" data-dismiss="modal" aria-hidden="true">@Html.Translate("No") </button>
            </div>
   
       
    </div>
</div>
    </div>


<script>
    function onDataBound(e) {
       
        $(".table-responsive .k-button").removeClass("k-button").addClass("btn btn-xs mrgn3-b col-md-11");
        $(".k-grid-Edit").addClass("btn-warning");
        $(".k-grid-Approve").addClass("btn-success");
        $(".k-grid-Summary").addClass("btn-primary");
    }

</script>


<script>
    function approveNeedAssessment(e) {
         e.preventDefault();
        var grid = this;
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var row = $(e.currentTarget).closest("tr");
        $('#cats-modal').modal('show');
        console.log("@Url.Action("ApproveNeedAssessment", "NeedAssessment")" + "/" + dataItem.PlanID);
        $("#yes").click(function () {
            window.location = "@Url.Action("ApproveNeedAssessment", "NeedAssessment")" + "/" + dataItem.PlanID;
          
        });

    }
</script>
