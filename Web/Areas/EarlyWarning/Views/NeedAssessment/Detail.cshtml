@using Cats.Models.Constant
@using Kendo.Mvc.UI
@using LanguageHelpers.Localization
@using Cats.Helpers
@using Cats.Models
@using Cats.Security
@model ICollection<Cats.Models.NeedAssessment>

@{
    ViewBag.Title = "NeedAssessmentPlan";
    Layout = "~/Views/Shared/_CATSLayout.cshtml";
    
    var plan = ViewBag.Plan;
    
    int index = 0;
}

@section Title
{
Plans
}

@section PageTitle
{
    <h1 class="hdr-blck big ">
        @Html.Translate("Detail Need Assessments")
    </h1>
}

<div class="row">
    @Html.Partial("_NeedAssessmentMainLeftBar")

    <div class="col-md-10  col-sm-9">
        <div class=" box box-primary ">
            <div class="box-body row">
                @if (ViewBag.Status == "Draft" || ViewBag.Status == "Approved" || ViewBag.Status == "AssessmentCreated")
                {
                    <div class="text-right col-md-12">
                        @if (ViewBag.userRegionID != null)
                        {
                            <a id="btnAddAssessment" href="@Url.Action("AddNeedAssessment", "NeedAssessment", new {id = plan.PlanID})">
                                <button type="button" class="btn btn-success"><span class="fa fa-plus"></span>@Html.Translate("New Needs Assessment")</button>
                            </a>
                        }
                        
                        @if (ViewBag.userRegionID == null && ViewBag.Status == "Approved")
                        {
                            <a id="btnCreateHrd" href="@Url.Action("CreateHRD", "HRD", new {id = plan.PlanID})">
                                <button type="button" class="btn btn-success"><span class="fa fa-plus"></span>@Html.Translate("Create HRD") </button></a>
                        }
                    </div>
                }
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-12 col-xs-12 form-horizontal" style="padding-right: 500px;">
                            <div class="form-group">
                                   
                                @Html.Label(Html.Translate("Assessment Name"), new { @class = "col-sm-4 control-label" })

                                <div class="col-sm-8">
                                    <input disabled="disabled" class="form-control" data-val="true" data-val-required="Enter Plan Name"
                                            id="PlanName" name="PlanName" type="text" value="@plan.PlanName">
                                    @*@@Html.TextBoxFor(plan.PlanName, new {@class = "form-control", Disabled = true})
                                    @Html.ValidationMessageFor(m => m.PlanName)*@
                                </div>
                            </div>
                         
                            <div class="form-group">
                                    
                                @Html.Label(Html.Translate("Assessment From"), new { @class = "col-sm-4 control-label cats-date-pref" })

                                <div class="col-sm-8">
                                    @* TODO: Use a constant enum rather than using a hard-coded string *@  
                                    @if (plan.BusinessProcess.CurrentState.BaseStateTemplate.Name != "Approved")
                                    {
                                        <input class="form-control cats-datepicker2" data-val="true" data-val-date="The field StartDate must be a date."
                                               data-val-required="Enter Start Date" id="StartDate" name="StartDate" type="text" value="@plan.StartDate">
                                              @*@Html.TextBoxFor(m => m.StartDate, new {@class = "form-control cats-datepicker2"})
                                                  @Html.ValidationMessageFor(m => m.StartDate)*@
                                    }
                                    else
                                    {
                                        <input class="form-control" data-val="true" data-val-date="The field StartDate must be a date."
                                               data-val-required="Enter Start Date" id="StartDate" name="StartDate" type="text" value="@plan.StartDate"
                                               disabled="disabled">
                                            @*@Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", Disabled = true })*@
                                    }

                                </div>
                                </div>

                                <div class="form-group">

                                    @Html.Label(Html.Translate("To"), new { @class = "col-sm-4 control-label cats-date-pref" })

                                    <div class="col-sm-8">
                                        @if (plan.BusinessProcess.CurrentState.BaseStateTemplate.Name != "Approved")
                                        {
                                            <input class="form-control cats-datepicker2" data-val="true" data-val-date="The field EndDate must be a date." 
                                                   data-val-required="Enter End Date" id="EndDate" name="EndDate" type="text" value="@plan.EndDate">
                                            @*@Html.TextBoxFor(m => m.EndDate, new { @class = "form-control cats-datepicker2" })
                                            @Html.ValidationMessageFor(m => m.EndDate)*@
                                        }
                                        else
                                        {
                                            <input class="form-control cats-datepicker2" data-val="true" data-val-date="The field EndDate must be a date."
                                                   data-val-required="Enter End Date" id="EndDate" name="EndDate" type="text" value="@plan.EndDate"
                                                   disabled="disabled">
                                            @*@Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", Disabled = true })*@
                                        }

                                    </div>

                                </div>
                            </div>
                        </div>



                        <div class="table-responsive">
                            <table class="table table-striped table-condensed">
                                <thead>
                                    <tr>
                                        <th>Region</th>
                                        <th>Season</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (NeedAssessment item in Model)
                                    {
                                        index++;
                                        var state = item.BusinessProcess.CurrentState.BaseStateTemplate;
                                        //if (state.Name == "Approved by finance" || state.Name == "Cheque Issued" || state.Name == "Cheque Cashed")
                                        //{
                                        <tr>
                                            <td>
                                                @item.AdminUnit.Name
                                            </td>
                                            <td>
                                                @item.Season
                                            </td>
                                            <td>
                                                @state.Name
                                            </td>
                                            <td>
                                                <a class="k-button-icontext k-grid-Edit btn btn-xs mrgn3 btn-warning" href="#" onclick="NeedAssessmentEdit(@item.NeedAID)">
                                                    <span class=""></span><span class="fa fa-pencil-square-o"></span> Edit
                                                </a>
                                                <a class="k-button-icontext k-grid-Delete btn btn-xs mrgn3 btn-danger" href="#" onclick="DeleteNeedAssessment(@item.NeedAID)">
                                                    <span class=""></span><span class="fa fa-times"></span> Delete
                                                </a>
                                                <div class="btn-group">
                                                    <button type="button" id="action_@index" class="btn btn-default dropdown-toggle btn-xs green-stripe" data-toggle="dropdown">
                                                        <i class="fa fa-ellipsis-horizontal"></i> @Html.Translate("Workflow") <i class="fa fa-angle-down"></i>
                                                    </button>
                                                    <ul class="dropdown-menu pull-right">
                                                        @foreach (FlowTemplate actions in state.InitialStateFlowTemplates)
                                                        {
                                                            if (UserAccountHelper.EarlyWarningPsnpOperationCheck(EarlyWarningConstants.Operation.Approve_Need_Assessment) && actions.Name == "Approve")
                                                            {
                                                                <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.PlanID)" title="@actions.Name">@actions.Name</a></li>
                                                            }
                                                            if (UserAccountHelper.EarlyWarningPsnpOperationCheck(EarlyWarningConstants.Operation.Approve_Need_Assessment) && actions.Name == "Reverse")
                                                            {
                                                                <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.PlanID)" title="@actions.Name">@actions.Name</a></li>
                                                            }
                                                            if (UserAccountHelper.RegionalOperationCheck(RegionalConstants.Operation.Add_new_needs_assessment) && actions.Name == "Submit to EW")
                                                            {
                                                                <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.PlanID)" title="@actions.Name">@actions.Name</a></li>
                                                            }
                                                            if (UserAccountHelper.RegionalOperationCheck(RegionalConstants.Operation.Add_new_needs_assessment) && actions.Name == "Re-Submit to EW")
                                                            {
                                                                <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.PlanID)" title="@actions.Name">@actions.Name</a></li>
                                                            }
                                                        }
                                                        <li class="divider"></li>
                                                        @*@if (UserAccountHelper.EarlyWarningPsnpOperationCheck(EarlyWarningConstants.Operation.View_Need_Assessment_Detail))
                                                        {*@
                                                            <li class="edit_button"><a href="javascript:workflow_history(@item.BusinessProcessID)"> History </a></li>
                                                        @*}*@
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                        //}

            }
        </tbody>
    </table>

    @*@(Html.Kendo().Grid<Cats.Models.NeedAssessmentHeaderViewModel>()
                                .Name("grid")
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.RegionName).Title(Html.Translate("Region"));
                                    columns.Bound(p => p.SeasonName).Visible(true).Width(100).Title(Html.Translate("Season"));
                                    columns.Bound(p => p.Date).Title(Html.Translate("Need Assessment Created Date")).HeaderHtmlAttributes(new { @class = "cats-date-pref-grid", style = "overflow: visible; white-space: normal;", title = "Need Assessment Created Date" });
                                    columns.Bound(p => p.NeedACreaterName).Title(Html.Translate("Created By")).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;", title = "Created By" });
                                    columns.Bound(p => p.IsApproved).Visible(false);

                                    if (Model.Status != (int) PlanStatus.Approved)
                                    {
                                        columns.Command(p =>
                                        {
                                            p.Custom("Edit").Click("NeedAssessmentEdit").Text("<span class=\"fa fa-pencil-square-o\"></span> Edit ");
                                            p.Custom("Delete").Click("DeleteNeedAssessment").Text("<span class=\"fa fa-times\"></span> Delete ");

                                        });
                                    }
                                    else
                                    {
                                        columns.Command(p =>p.Custom("Edit").Click("ViewAssessmentEdit").Text("<span class=\"fa fa-search\"></span> View "));
                                    }
                                })
                                .HtmlAttributes(new { style = "height: 300px" })
                                .Sortable()
                                .Scrollable()
                                .Events(e => e.DataBound("onDataBound"))
                                .DataSource(dataSource => dataSource
                                                            .Ajax()
                                                            .PageSize(10)
                                                            .Model(model => model.Id(p => p.NeedAID))
                                                            .Read(read => read.Action("PlannedNeedAssessmentInfo_Read", "NeedAssessment", new { id = Model.PlanID }))
                                )
                        )*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="cats-modal"></div>
    <div id="modalHistory" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 id="modalHistoryLabel">Activity History</h4>
                </div>
                <div class="modal-body" id="modalHistoryBody">History</div>

            </div>
        </div>
    </div>
    @Html.Partial("~/Views/Shared/_PromotWorkflow.cshtml")
<script type="text/javascript">
    var history_link = "@Url.Action("History", "BusinessProcess", new { Area = "WorkflowManager", id = "0" })";

    function promot_workflow(BusinessProcessID, nextstate, actionname, PlanID) {
        //alert(PaymentRequestID);
        $('#ParentBusinessProcessID').val(BusinessProcessID);
        $('#stateID').val(nextstate);
        $('#modalPromotionLabel').html(actionname);
        $('#TransporterChequeID').val(TransporterChequeID);
        $('#modalPromotion').modal();
        $.ajax({
            type: "POST",
            url: "@Url.Action("ApproveNeedAssessment", "NeedAssessment")",
            data: "{id:" + PlanID + "}",
        dataType: json
    });
    }
    function workflow_history(BusinessProcessID) {
        $('#modalHistory').modal();
        $('#modalHistoryBody').html("<div style='text-align:center;'> <img src='/content/images/loading.gif'/></div>");
        $.post(history_link + BusinessProcessID, {},
            function (data) {
                $("#modalHistoryBody").html(data);
            }
        );
    }
    $(function () {
        //Optional: turn the chache off
        $.ajaxSetup({ cache: false });
        $('#btnAddAssessment').on('click',
            function (e) {
                $('#cats-modal').remove();
                e.preventDefault();
                var $this = $(this)
                    , $remote = $this.data('remote') || $this.attr('href')
                    , $modal = $('<div class="modal" id="cats-modal"><div class="modal-body"></div></div>');
                console.log($remote);
                $('body').append($modal);
                $modal.modal({ backdrop: 'static', keyboard: false });
                $modal.load($remote);
            }
        );
        //$('#btnAddAssessment').click(function () {

        //    // alert("");
        //    $('#dialogContent').load(this.href, function () {
        //        $('#dialogDiv').modal({
        //            backdrop: 'static',
        //            keyboard: true
        //        }, 'show');
        //        //bindForm(this);
        //    });
        //    return false;
        //});

    });
</script>


    <script>
        function onDataBound(e) {

            $(".table-responsive .k-button").removeClass("k-button").addClass("btn btn-xs mrgn3 ");
            $(".k-grid-Edit").addClass("btn-warning");
            $(".k-grid-Delete").addClass("btn-danger");
            $(".k-grid-Summary").addClass("btn-primary");
        }
        function NeedAssessmentEdit(needAID) {
            //e.preventDefault();

            //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            window.location = null;
            window.location = "@Url.Action("EditNeedAssessment", "NeedAssessment")" + "?id=" + needAID;
        }
        function ViewAssessmentEdit(needAID) {
            //e.preventDefault();

            //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            window.location = null;
            window.location = "@Url.Action("EditNeedAssessment", "NeedAssessment")" + "?id=" + needAID;
        }
        function DeleteNeedAssessment(needAID) {
            //e.preventDefault();

            //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            wn.center().open();
            $("#yesDelete").click(function () {
                window.location = "@Url.Action("DeleteNeedAssessment", "NeedAssessment",new {Area="EarlyWarning"})" + "?id=" + needAID;
                wn.close();
            });

            $("#noDelete").click(function () {
                wn.close();
            });
        }

    </script>
    <div id="modalWindowDelete">
        <h6>@Html.Translate("Delete Need Assessment?") <br />
            @Html.Translate("This will delete all the related records with this Region!")  </h6>
        <button id="yesDelete" class="k-button">@Html.Translate("Yes") </button>
        <button id="noDelete" class="k-button">@Html.Translate("No") </button>
    </div>
    <script>
        var wn;
        $(document).ready(function () {
            wn = $("#modalWindowDelete").kendoWindow({
                title: "Delete confirmation",
                modal: true,
                visible: false,
                resizable: false,
                width: 300
            }).data("kendoWindow");
        });


    </script>