@using Cats.Models.Constant
@using Kendo.Mvc.UI
@using LanguageHelpers.Localization
@using Cats.Helpers
@using Cats.Models
@using Cats.Security
@model ICollection<Cats.Models.NeedAssessment>

@{
    ViewBag.Title = "NeedAssessmentPlan";
    int index = 0;
    const string PAGE_NAME = "EarlyWarning.Index";
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";

    ViewBag.PageTitle = Html.Translate("Detail Need Assessment");

    ViewBag.PageTitleDescription = "";

    var plan = ViewBag.Plan;
    
    }

<div class="row">
@Html.Partial("_NeedAssessmentMainLeftBar")

    <div class="col-md-9  col-sm-9">

        <div class="portlet light bordered bg-inverse">
            <div class="portlet-title">
                <div class="caption font-green-sharp">
                    <i class="icon-list font-green-sharp"></i>
                    <span class="caption-subject bold uppercase"> @Html.Translate("Need Assessment Detail")</span>
                </div>
                <div class="tools">
                    <a href="#" class="collapse" data-original-title="" title=""></a>
                </div>
                <div class="actions">
                    @if (ViewBag.Status == "Draft" || ViewBag.Status == "Approved" || ViewBag.Status == "AssessmentCreated")
                    {
                        
                            if (ViewBag.userRegionID != null)
                            {
                                <a id="btnAddAssessment" href="@Url.Action("AddNeedAssessment", "NeedAssessment", new {id = plan.PlanID})" class="btn green">
                                    <i class="fa fa-plus"></i> @Html.Translate("New Needs Assessment")
                                </a>
                            }

                            if (ViewBag.userRegionID == null && ViewBag.Status == "Approved")
                            {
                                <a id="btnCreateHrd" href="@Url.Action("CreateHRD", "HRD", new {id = plan.PlanID})" class="btn green">
                                    <i class="fa fa-plus"></i> @Html.Translate("Create HRD")
                                </a>
                            }
                        
                    }
                </div>
            </div>
            <div class="portlet-body">
                <div class="row">
                    
                    <div class="col-md-12 col-xs-12 form-horizontal">
                        <div class="form-group">

                            @Html.Label(Html.Translate("Assessment Name"), new {@class = "col-sm-3 control-label"})

                            <div class="col-sm-4">
                                <input disabled="disabled" class="form-control" data-val="true" data-val-required="Enter Plan Name"
                                       id="PlanName" name="PlanName" type="text" value="@plan.PlanName">
                                @*@@Html.TextBoxFor(plan.PlanName, new {@class = "form-control", Disabled = true})
                        @Html.ValidationMessageFor(m => m.PlanName)*@
                            </div>
                        </div>

                        <div class="form-group">

                            @Html.Label(Html.Translate("Assessment From"), new {@class = "col-sm-3 control-label cats-date-pref"})

                            <div class="col-sm-3">
                                @* TODO: Use a constant enum rather than using a hard-coded string *@
                                @if (plan.BusinessProcess.CurrentState.BaseStateTemplate.Name != "Approved")
                                {
                                    <input class="form-control cats-datepicker2" data-val="true" data-val-date="The field StartDate must be a date."
                                           data-val-required="Enter Start Date" id="StartDate" name="StartDate" type="text" value="@plan.StartDate">
                                    @*@Html.TextBoxFor(m => m.StartDate, new {@class = "form-control cats-datepicker2"})
                            @Html.ValidationMessageFor(m => m.StartDate)*@
                                }
                                else
                                {
                                    <input class="form-control" data-val="true" data-val-date="The field StartDate must be a date."
                                           data-val-required="Enter Start Date" id="StartDate" name="StartDate" type="text" value="@plan.StartDate"
                                           disabled="disabled">
                                    @*@Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", Disabled = true })*@
                                }

                            </div>
                        </div>

                        <div class="form-group">

                            @Html.Label(Html.Translate("To"), new {@class = "col-sm-3 control-label cats-date-pref"})

                            <div class="col-sm-3">
                                @if (plan.BusinessProcess.CurrentState.BaseStateTemplate.Name != "Approved")
                                {
                                    <input class="form-control cats-datepicker2" data-val="true" data-val-date="The field EndDate must be a date."
                                           data-val-required="Enter End Date" id="EndDate" name="EndDate" type="text" value="@plan.EndDate">
                                    @*@Html.TextBoxFor(m => m.EndDate, new { @class = "form-control cats-datepicker2" })
                            @Html.ValidationMessageFor(m => m.EndDate)*@
                                }
                                else
                                {
                                    <input class="form-control cats-datepicker2" data-val="true" data-val-date="The field EndDate must be a date."
                                           data-val-required="Enter End Date" id="EndDate" name="EndDate" type="text" value="@plan.EndDate"
                                           disabled="disabled">
                                    @*@Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", Disabled = true })*@
                                }

                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="portlet light bordered">
            <div class="portlet-header"></div>
            <div class="portlet-body">
                <div class="table-responsive" style="overflow:visible !important;">
                    <table class="table table-striped table-condensed">
                        <thead>
                            <tr>
                                <th>Region</th>
                                <th>Season</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (NeedAssessment item in Model)
                            {
                                index++;
                                var state = item.BusinessProcess.CurrentState.BaseStateTemplate;
                                //if (state.Name == "Approved by finance" || state.Name == "Cheque Issued" || state.Name == "Cheque Cashed")
                                //{
                                <tr>
                                    <td>
                                        @item.AdminUnit.Name
                                    </td>
                                    <td>
                                        @item.Season
                                    </td>
                                    <td>
                                        @state.Name
                                    </td>
                                    <td>
                                        <a class="k-button-icontext k-grid-Edit btn btn-xs mrgn3 btn-warning" href="#" onclick="NeedAssessmentEdit(@item.NeedAID)">
                                            <span class=""></span><span class="fa fa-pencil-square-o"></span> Edit
                                        </a>
                                        <a class="k-button-icontext k-grid-Delete btn btn-xs mrgn3 btn-danger" href="#" onclick="DeleteNeedAssessment(@item.NeedAID)">
                                            <span class=""></span><span class="fa fa-times"></span> Delete
                                        </a>
                                        <div class="btn-group">
                                            <button type="button" id="action_@index" class="btn btn-default dropdown-toggle btn-xs green-stripe" data-toggle="dropdown">
                                                <i class="fa fa-ellipsis-horizontal"></i> @Html.Translate("Workflow") <i class="fa fa-angle-down"></i>
                                            </button>
                                            <ul class="dropdown-menu pull-right">
                                                @foreach (FlowTemplate actions in state.InitialStateFlowTemplates)
                                                {
                                                    if (UserAccountHelper.EarlyWarningPsnpOperationCheck(EarlyWarningConstants.Operation.Approve_Need_Assessment) && actions.Name == "Approve")
                                                    {
                                                        <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.PlanID)" title="@actions.Name">@actions.Name</a></li>
                                                    }
                                                    if (UserAccountHelper.EarlyWarningPsnpOperationCheck(EarlyWarningConstants.Operation.Approve_Need_Assessment) && actions.Name == "Reverse")
                                                    {
                                                        <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.PlanID)" title="@actions.Name">@actions.Name</a></li>
                                                    }
                                                    if (UserAccountHelper.RegionalOperationCheck(RegionalConstants.Operation.Add_new_needs_assessment) && actions.Name == "Submit to EW")
                                                    {
                                                        <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.PlanID)" title="@actions.Name">@actions.Name</a></li>
                                                    }
                                                    if (UserAccountHelper.RegionalOperationCheck(RegionalConstants.Operation.Add_new_needs_assessment) && actions.Name == "Re-Submit to EW")
                                                    {
                                                        <li class="edit_button"><a href="javascript:promot_workflow(@item.BusinessProcessID ,@actions.FinalStateID,'@actions.Name',@item.PlanID)" title="@actions.Name">@actions.Name</a></li>
                                                    }
                                                }
                                                <li class="divider"></li>
                                                @*@if (UserAccountHelper.EarlyWarningPsnpOperationCheck(EarlyWarningConstants.Operation.View_Need_Assessment_Detail))
                                        {*@
                                                <li class="edit_button"><a href="javascript:workflow_history(@item.BusinessProcessID)"> History </a></li>
                                                @*}*@
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                                //}

                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    
    </div>
</div>

    <div id="cats-modal"></div>

<div id="modalHistory" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 id="modalHistoryLabel">Activity History</h4>
            </div>
            <div class="modal-body" id="modalHistoryBody">History</div>

        </div>
    </div>
</div>
    <div class="modal fade" tabindex="-1" aria-hidden="true" id="needAssessmentModal">
       
    </div>
    @Html.Partial("~/Views/Shared/_PromotWorkflow.cshtml")

    <script type="text/javascript">
        var history_link = "@Url.Action("History", "BusinessProcess", new { Area = "WorkflowManager", id = "0" })";

        function promot_workflow(BusinessProcessID, nextstate, actionname, PlanID) {
            //alert(PaymentRequestID);
            $('#ParentBusinessProcessID').val(BusinessProcessID);
            $('#stateID').val(nextstate);
            $('#modalPromotionLabel').html(actionname);
            $('#TransporterChequeID').val(TransporterChequeID);
            $('#modalPromotion').modal();
            $.ajax({
                type: "POST",
                url: "@Url.Action("ApproveNeedAssessment", "NeedAssessment")",
                data: "{id:" + PlanID + "}",
                dataType: json
            });
        }
        function workflow_history(BusinessProcessID) {
            $('#modalHistory').modal();
            $('#modalHistoryBody').html("<div style='text-align:center;'> <img src='/content/images/loading.gif'/></div>");
            $.post(history_link + BusinessProcessID, {},
                function (data) {
                    $("#modalHistoryBody").html(data);
                }
            );
        }
        $(function () {
            //Optional: turn the chache off
            $.ajaxSetup({ cache: false });
            $('#btnAddAssessment').on('click',
                function (e) {
                    $('#cats-modal').remove();
                    e.preventDefault();
                    var $this = $(this);
                    $remote = $this.data('remote') || $this.attr('href');
                    //$modal = $('<div class="modal fade" tabindex="-1" aria-hidden="true" id="cats-modal">');
                    //console.log($remote);
                    //$('body').append($modal);

                    $.get($remote, function(data) {
                        console.log(data);
                        $("#needAssessmentModal").html(data);
                        $("#needAssessmentModal").modal();
                    });
                    //$modal.modal({ backdrop: 'static', keyboard: false });
                    //$modal.load($remote);
                }
            );
            //$('#btnAddAssessment').click(function () {

            //    // alert("");
            //    $('#dialogContent').load(this.href, function () {
            //        $('#dialogDiv').modal({
            //            backdrop: 'static',
            //            keyboard: true
            //        }, 'show');
            //        //bindForm(this);
            //    });
            //    return false;
            //});

        });
    </script>


    <script>
        function onDataBound(e) {

            $(".table-responsive .k-button").removeClass("k-button").addClass("btn btn-xs mrgn3 ");
            $(".k-grid-Edit").addClass("btn-warning");
            $(".k-grid-Delete").addClass("btn-danger");
            $(".k-grid-Summary").addClass("btn-primary");
        }
        function NeedAssessmentEdit(needAID) {
            //e.preventDefault();

            //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            window.location = null;
            window.location = "@Url.Action("EditNeedAssessment", "NeedAssessment")" + "?id=" + needAID;
        }
        function ViewAssessmentEdit(needAID) {
            //e.preventDefault();

            //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            window.location = null;
            window.location = "@Url.Action("EditNeedAssessment", "NeedAssessment")" + "?id=" + needAID;
        }
        function DeleteNeedAssessment(needAID) {
            //e.preventDefault();

            //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            wn.center().open();
            $("#yesDelete").click(function () {
                window.location = "@Url.Action("DeleteNeedAssessment", "NeedAssessment",new {Area="EarlyWarning"})" + "?id=" + needAID;
                wn.close();
            });

            $("#noDelete").click(function () {
                wn.close();
            });
        }

    </script>

<div id="modalWindowDelete">
        <h6>
            @Html.Translate("Delete Need Assessment?") <br />
        @Html.Translate("This will delete all the related records with this Region!")
    </h6>
    <button id="yesDelete" class="k-button">@Html.Translate("Yes") </button>
    <button id="noDelete" class="k-button">@Html.Translate("No") </button>
</div>
<script>
    var wn;
    $(document).ready(function() {
        wn = $("#modalWindowDelete").kendoWindow({
            title: "Delete confirmation",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");
    });


</script>

<script type="text/javascript">
    $(function() {

        toastr.options = {
            "closeButton": true,
            "debug": false,
            "positionClass": "toast-bottom-right",
            "showDuration": "1000",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut",
            "text": "hi"
        };
        @if(ViewBag.Error != null){
            <text>
                var Command = toastr["error"]("@ViewBag.Error", "Error");
            </text>
        }
        

    });
</script>
