@using System.Data
@using Cats.Helpers
@using Kendo.Mvc.UI

@model  System.Data.DataTable

@{
    ViewBag.Title = "Home";

    //Layout = "~/Views/Shared/_CATSLayout.cshtml";
    //const string pageName = "EarlyWarning.Index";

    #region Data Activity Indicator ViewBags

    //Data Activity Indicator uses ViewBag.PageName to get  Workflows configured for the page
    ViewBag.PageName = Cats.Services.Workflows.Constants.EarlywarningPage;
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";
    ViewBag.PageTitle = "Earlywarning Dashboard";//@Html.Translate((string)@ViewBag.Title);
    ViewBag.PageTitleDescription = "";

    #endregion
}

@{
    var ben = new[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
    int index = 0;
}


<div ng-app="myApp">
    <div ng-controller="ImportantNumbersController" class="">

        <div class="row">
            <div class="col-lg-3 col-xs-6">
                <div class="dashboard-stat green-haze">
                    <div class="visual">
                        <i class="fa fa-group"></i>
                    </div>
                    <div class="details">
                        <div class="number">
                            {{RequiredNumber.TotalRequest}}
                        </div>
                        <div class="desc">
                            @Html.Translate("Total Requests")
                        </div>
                    </div>
                    <a class="more" href="javascript:;">
                        @*View more <i class="m-icon-swapright m-icon-white"></i>*@
                    </a>
                </div>
            </div><!-- ./col -->
            <div class="col-lg-3 col-xs-6">
                <div class="dashboard-stat green-haze">
                    <div class="visual">
                        <i class="fa fa-file"></i>
                    </div>
                    <div class="details">
                        <div class="number">
                            {{RequiredNumber.TotalRequisitionNumber}}
                        </div>
                        <div class="desc">
                            @Html.Translate("Total Requisitions")
                        </div>
                    </div>
                    <a class="more" href="javascript:;">
                        @*View more <i class="m-icon-swapright m-icon-white"></i>*@
                    </a>
                </div>
            </div><!-- ./col -->
            <div class="col-lg-3 col-xs-6">
                <div class="dashboard-stat green-haze">
                    <div class="visual">
                        <i class="fa fa-cubes"></i>
                    </div>
                    <div class="details">
                        <div class="number">
                            {{RequiredNumber.HrdTotalCommodity|number:0}}
                        </div>
                        <div class="desc">
                            @Html.Translate("Required Commodity")
                        </div>
                    </div>
                    <a class="more" href="javascript:;">
                        @*View more <i class="m-icon-swapright m-icon-white"></i>*@
                    </a>
                </div>
            </div><!-- ./col -->
            <div class="col-lg-3 col-xs-6">
                <div class="dashboard-stat green-haze">
                    <div class="visual">
                        <i class="fa fa-users"></i>
                    </div>
                    <div class="details">
                        <div class="number">
                            {{RequiredNumber.TotalHrdBeneficaryNumber|number}}
                        </div>
                        <div class="desc">
                            @Html.Translate("People in Need")
                        </div>
                    </div>
                    <a class="more" href="javascript:;">
                        @*View more <i class="m-icon-swapright m-icon-white"></i>*@
                    </a>
                </div>
            </div><!-- ./col -->
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-map font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Maps")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>

                    <div class="portlet-body">
                        <div class="" id="mapleaf">
                            @Html.Partial("_dashboardmapleaf")
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row" ng-controller="EWDashboardController">
            <div class="col-md-12">
                @Html.Partial("_DataActivityIndicator")
            </div>


            <div class="col-md-8">
                <div class="portlet light bordered bg-inverse">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Data Entry Status")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>

                    <div class="portlet-body">
                        <!---Filter by round-->
                        <form class="form-inline" role="form">
                            <div class="form-group col-md-7">
                                <label for="selround" class="col-md-4 control-label">Filter By Round:</label>
                                <div class="col-md-8">
                                    <select class="form-control" id="selectRound" ng-model="rnd.Round">
                                        @{
                                            var requestRounds = ViewBag.RecentRequestRounds;
                                            foreach (var round in requestRounds)
                                            {
                                                <option>@round</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                        </form>
                        <table class="table table-striped table-checkable">
                            <thead>
                                <tr>
                                    <th class="hidden-xs">Region</th>
                                    <th class="number">Round</th>
                                    <th class="number">Total Requested</th>
                                    <th class="number">Allocated</th>
                                    <th class="number">Completed</th>
                                    <th class="number">Allocation Progress</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="requested in RegionalRequestStatus|filter:rnd">
                                    <td>{{requested.Region}}</td>
                                    <td class="number">{{requested.Round}}</td>
                                    <td class="number">{{requested.TotalRequested|number}}</td>
                                    <td class="number">{{requested.Allocated|number}}</td>
                                    <td class="number">{{requested.Completed|number}}</td>
                                    <td class="number">{{requested.AllocationProgress|number:2}}</td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td> Total</td>
                                    <td class="number">{{getTotalRegionalRequest()}}</td>
                                    <td class="number">{{getTotalRegionalRequestAllocated()}}</td>
                                    <td class="number">{{getTotalRegionalRequestCompleted()}}</td>
                                    <td class="number">{{getTotalRegionalRequestProgress()|number:2}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("HRD Data Entry Status")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>

                    <div class="portlet-body">
                        <table class="table table-striped table-checkable">
                            <thead>
                                <tr>
                                    <th class="hidden-xs">Region</th>
                                    <th class="number">Total Requested</th>
                                    <th class="number">Completed</th>
                                    <th class="number">Allocation Progress</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="requested in HRDDataEntryStatus">
                                    <td>{{requested.Region}}</td>
                                    <td class="number">{{requested.TotalRequested|number}}</td>
                                    <td class="number">{{requested.Completed|number}}</td>
                                    <td class="number">{{requested.AllocationProgress|number:2}}</td>
                                </tr>
                                <tr>
                                    <td>Total:</td>
                                    <td class="number">{{getHRDStatusExpected()}}</td>
                                    <td class="number">{{getHRDStatusExpected()}}</td>
                                    <td class="number">{{getHRDStatusProgess()|number:2}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="portlet light bordered bg-inverse">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @ViewBag.HRDName</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="portlet-body table-responsive">
                        <table id="" class="table table-striped table-checkable">
                            <thead>
                                <tr>
                                    @foreach (System.Data.DataColumn col in Model.Columns)
                                    {
                                        if (col.IsNumeric())
                                        {

                                            <th class="number">@col.Caption </th>
                                        }
                                        else
                                        {
                                            <th>@col.Caption </th>
                                        }
                                    }

                                </tr>
                            </thead>
                            <tbody>

                                @foreach (System.Data.DataRow row in Model.Rows)
                                {
                                    <tr>
                                        @{ index = 0; }
                                        @foreach (var cell in row.ItemArray)
                                        {
                                            if (cell is decimal || cell is int)
                                            {
                                                ben[index] = ben[index] + double.Parse(@String.Format("{0:n0}", @cell));
                                                index++;
                                                <td class="number">@String.Format("{0:n0}", @cell)</td>
                                            }
                                            else
                                            {
                                                <td>@String.Format("{0:n0}", @cell)</td>
                                            }
                                        }
                                    </tr>
                                            }
                            </tbody>
                            <tr>
                                <th>Total:</th>
                                @foreach (double t in @ben)
                                {
                                    <th class="number">@String.Format("{0:n0}", @t) </th>
                                }
                            </tr>
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>

                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Number of Beneficiaries")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="box-body table-responsive" style="display: block;" ng-controller="stageController">
                            <div id="containerHRD" class="chartWrap" draw-percentage-chart=""></div>
                        </div>
                    </div>
                </div>

                <div class="portlet light bordered bg-inverse">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Recent Requests")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="portlet-body table-responsive">
                        <form class="form-inline" role="form">
                            <div class="form-group">
                                <label for="selround">Filter By Round:</label>
                                <select class="form-control" id="selround" ng-model="search.Round">
                                    @{
                                        var recentRequestRounds = ViewBag.RecentRequestRounds;
                                        foreach (var round in recentRequestRounds)
                                        {
                                            <option>@round</option>
                                        }
                                    }
                                </select>
                            </div>
                        </form>
                        <table class="table table-striped table-checkable">
                            <thead>
                                <tr>
                                    <th class="hidden-xs">Region</th>
                                    <th class="number">N<u>o</u> of Beneficaries</th>
                                    <th class="number">Total N<u>o</u> of FDPS</th>
                                    <th class="number">Round</th>
                                    <th>Month</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="request in Requests | filter:search" class="">
                                    @*<td class="hidden-xs"><a ng-href="@Url.Action("Allocation", "Request", new { Area = "EarlyWarning", id = "{{request.Region}}"})"> {{request.Region}} </a> </td>*@
                                    <td class="hidden-xs"><a ng-href="@Url.Content("~/EarlyWarning/Request/Allocation/{{request.RegionalRequestID}}")">{{request.Region}} </a></td>
                                    <td class="number">{{request.Beneficiary|number}}</td>
                                    <td class="number">{{request.NumberOfFDPS|number}}</td>
                                    <th class="number">{{request.Round}}</th>
                                    <th>{{request.MonthName}}</th>
                                    <td><span class="label" ng-class="{'label-warning':request.Status == 'Draft', 'label-success':request.Status == 'Approved', 'label-danger':request.Status == 'Closed'}">{{request.Status}}</span></td>

                                </tr>

                            </tbody>
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>

                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Recent Requisitions")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="portlet-body table-responsive">
                        <!---Filter by round-->
                        <form class="form-inline" role="form">
                            <div class="form-group">
                                <label for="selround">Filter By Round:</label>
                                <select class="form-control" id="selround" ng-model="searchReq.Round">
                                    @{
                                        var rounds = ViewBag.Rounds;
                                        foreach (var round in rounds)
                                        {
                                            <option>@round</option>
                                        }
                                    }
                                </select>
                            </div>
                        </form>
                        <table id="" class="table table-striped table-checkable">
                            <thead>
                                <tr>
                                    <th class="hidden-xs">Requisition N<u>o</u></th>
                                    <th>Region</th>
                                    <th>Zone</th>
                                    <th>Commodity</th>
                                    <th class="number">Beneficiaries</th>
                                    <th class="number">Amount (MT)</th>
                                    <th>Round</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="requisition in Requisitions | filter: searchReq" class="">
                                    <td class="hidden-xs"><a ng-href="@Url.Content("~/EarlyWarning/ReliefRequisition/Allocation/{{requisition.RequisitionID}}")">{{requisition.RequisitonNumber}} </a></td>
                                    <td>{{requisition.Region}}</td>
                                    <td>{{requisition.Zone}}</td>
                                    <td>{{requisition.Commodity}}</td>
                                    <td class="number">{{requisition.Beneficiary|number}}</td>
                                    <td class="number">{{requisition.Amount|number}} </td>
                                    <td>{{requisition.Round}}</td>
                                    <td><span class="label" ng-class="{'label-warning':requisition.Status == 'Draft', 'label-success':requisition.Status == 'Approved', 'label-danger':requisition.Status == 'Closed'}">{{requisition.Status}}</span></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>

                <div class="portlet light bordered bg-inverse">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Recent Gift Certificates")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>

                    <div class="portlet-body table-responsive">
                        <div class="row form-horizontal ">
                            <div class="col-md-4 form-group">
                                <label class="control-label col-md-6">Select Start Date</label>
                                <div class="col-md-6">
                                    <input id="txtDate1" class="cats-datepicker2  form-control" type="text" placeholder="mm/dd/yyyy">
                                </div>
                            </div>
                            <div class="col-md-4 form-group">
                                <label class="control-label col-md-6">Select End Date</label>
                                <div class="col-md-5">
                                    <input id="txtDate2" class="cats-datepicker2  form-control" type="text" placeholder="mm/dd/yyyy">
                                </div>
                            </div>
                            <div class="col-md-4 form-group">
                                <div class="col-md-6">
                                    <button type="button" class="btn btn-primary" ng-click="getRecentCerteficates()">Get</button>
                                </div>
                            </div>
                        </div>
                        <table id="" class="table table-striped table-checkable">
                            <thead>
                                <tr>
                                    <th class="hidden-xs">SI N<u>o</u></th>
                                    <th>Donor</th>
                                    <th>Gift Date</th>
                                    <th>Declaration N<u>o</u></th>
                                    <th class="number">Total Weight (MT)</th>
                                    <th class="number">Total Estimated Price(Birr)</th>
                                    <th class="number">Total Estimated Tax (Birr)</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="giftCertificate in GiftCertificates" class="">
                                    <td class="hidden-xs"><a ng-href="@Url.Content("~/EarlyWarning/GiftCertificate/Edit/{{giftCertificate.GiftCertificateID}}")">{{giftCertificate.SINumber}}</a></td>
                                    <td>{{giftCertificate.DonorName}}</td>
                                    <td>{{giftCertificate.GiftDate}}</td>
                                    <td>{{giftCertificate.DclarationNumber}}</td>
                                    <td class="number">{{giftCertificate.Wieght|number}} </td>
                                    <td class="number">{{giftCertificate.EstimatedPrice|number}} </td>
                                    <td class="number">{{giftCertificate.TotalEstimatedTax|number}} </td>
                                    <td><span class="label" ng-class="{'label-warning':giftCertificate.Status == 'Draft', 'label-sucess':giftCertificate.Status == 'Approved'}">{{giftCertificate.Status}}</span></td>
                                </tr>


                            </tbody>
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>

            </div>

            <div class="col-md-4">

                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Data Entry Status")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="portlet-body">
                        {{drawPieChart()}}
                        <div id="chart"></div>
                    </div>
                </div>

                <div class="portlet light bordered bg-inverse">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("HRD Data Entry Status")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="portlet-body">
                        {{drawHRDPieChart()}}
                        <div id="hrdChart"></div>
                    </div>
                </div>
                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Requisitions Percentage")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="portlet-body" ng-controller="stageController">
                        <div id="container" class="chartWrap" draw-requisitions-chart=""></div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <div class="portlet light bordered bg-inverse">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Ration Detail")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="portlet-body" ng-controller="stageController">
                        <table id="" class="table table-checkable table-condensed" style="margin-bottom: 5px">
                            <thead>
                                <tr>
                                    <th class="hidden-xs">Commodity</th>
                                    <th class="number">Ration (Kg/Beneficiary)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="ration in Rations" class="">
                                    <td class="hidden-xs">{{ration.Commodity}}</td>
                                    <td class="number">{{ration.Amount}} </td>
                                </tr>
                            </tbody>
                        </table>
                        <span class="text-info align-center"> <span class="fa fa-info-circle"> </span> For blended food the ration is calculated as 35%*0.45Kg</span>
                    </div>
                    <!-- /.box-body -->
                </div>
                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Requested So far")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="portlet-body" ng-controller="stageController">
                        <table class="table table-striped table-checkable table-condensed">
                            <thead>
                                <tr>
                                    <th class="hidden-xs">Region</th>
                                    <th class="number">Requested</th>
                                    <th class="number">Remaining</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="requested in RequestedAmount">
                                    <td class="hidden-xs">{{requested.RegionName}}</td>
                                    <td class="number">{{requested.NoOfRequests| number}}</td>
                                    <td class="number">{{requested.Remaining | number}}</td>

                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
                <div class="portlet light bordered bg-inverse">
                    <div class="portlet-title">
                        <div class="caption font-green-haze">
                            <i class="icon-edit font-green-haze"></i>
                            <span class="caption-subject bold uppercase"> @Html.Translate("Dispatched,Delivered & Distributed")</span>
                        </div>
                        <div class="actions">
                            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
                        </div>
                    </div>
                    <div class="box-body" ng-controller="stageController">
                        <table class="table table-striped table-checkable table-condensed">
                            <thead>
                                <tr>
                                    <th>Region</th>
                                    <th class="number">Dispatched(MT)</th>
                                    <th class="number">Delivered(MT)</th>
                                    <th class="number">Distributed(MT)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="DispatchTillDistribution in DispatchTillDistributions">
                                    <td>{{DispatchTillDistribution.Region}}</td>
                                    <td class="number">{{DispatchTillDistribution.DispatchedAmount| number}}</td>
                                    <td class="number">{{DispatchTillDistribution.DeliveredAmount | number}}</td>
                                    <td class="number">{{DispatchTillDistribution.DistributedAmount | number}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
            <!-- /.col -->

        </div>
    </div>
</div>

<script>
        function EWDashboardController($scope, $http) {
            $scope.reqParam = { startDate: new Date(), endDate: new Date() };
            $scope.Rations = [];
            $scope.Requests = [];
            $scope.Requisitions = [];
            $scope.RequestedAmount = [];
            $scope.RequestStatus = [];
            $scope.RequisitionStatus = [];
            $scope.Regions = [];
            $scope.GiftCertificates = [];
            $scope.DispatchTillDistributions = [];
            $scope.rnd = 0;
            $scope.RegionalRequestStatus = [];
            $scope.HRDDataEntryStatus = [];

            var onRequestsSuccess = function (data) {
                $scope.Requests = data;
            };

            var onRationSuccess = function (data) {
                $scope.Rations = data;
            };

            var onRequisitionSuccess = function (data) {
                $scope.Requisitions = data;
            };

            var onRequestedAmoutSuccess = function (data) {
                $scope.RequestedAmount = data;
            };

            //var onRequestStatusSuccess = function (data) {
            //    $scope.RequestStatus = data;
            //};
            //var onRequisitionStatusSuccess = function (data) {
            //    $scope.RequisitionStatus = data;
            //};
            var onRegionTotalSuccess = function (data) {
                $scope.Regions = data;
            };
            var onGiftCertificateSuccess = function (data) {
                $scope.GiftCertificates = data;
                $scope.isApproved = true;
                $scope.isDraft = false;
            };
            var onDispatchTillDistributionSuccess = function (data) {
                $scope.DispatchTillDistributions = data;
            };
            var onRegionalRequestDataEntryStatus = function (data) {
                $scope.RegionalRequestStatus = data;
            }
            var onHRDDataEntryStatusRequest = function(data) {
                $scope.HRDDataEntryStatus = data;
            }
            $scope.getTotalRegionalRequest = function () {
                var total = 0;
                var round = 0;
                var index = $("#selectRound option:selected").index();

                if (index >=0)
                    round = $("#selectRound").val();

                for (var i = 0; i < $scope.RegionalRequestStatus.length; i++) {
                    var request = $scope.RegionalRequestStatus[i];
                    if (round == 0 || request.Round == round) {
                        total += request.TotalRequested;
                    }
                }
                return total;
            }
            $scope.getTotalRegionalRequestAllocated = function () {
                var total = 0;
                var round = 0;
                var index = $("#selectRound option:selected").index();

                if (index >= 0)
                    round = $("#selectRound").val();
                for (var i = 0; i < $scope.RegionalRequestStatus.length; i++) {
                    var request = $scope.RegionalRequestStatus[i];
                    if (round == 0 || request.Round == round)
                        total += request.Allocated;
                }
                return total;
            }
            $scope.getTotalRegionalRequestCompleted = function () {
                var total = 0;
                var round = 0;
                var index = $("#selectRound option:selected").index();
                if (index >= 0)
                    round = $("#selectRound").val();
                for (var i = 0; i < $scope.RegionalRequestStatus.length; i++) {
                    var request = $scope.RegionalRequestStatus[i];
                    if (round == 0 || request.Round == round)
                        total += request.Completed;
                }
                return total;
            }

            $scope.getTotalRegionalRequestProgress = function () {
                var completed = 0;
                var requested = 0;

                var round = 0;
                var index = $("#selectRound option:selected").index();
                if (index >= 0)
                    round = $("#selectRound").val();

                for (var i = 0; i < $scope.RegionalRequestStatus.length; i++) {
                    var request = $scope.RegionalRequestStatus[i];
                    if (round == 0 || request.Round == round) {
                        requested += request.TotalRequested;
                        completed += request.Completed;
                    }
                }
                return (completed / requested) * 100;
            }


            $scope.getHRDStatusExpected = function () {
                var total = 0;
                for (var i = 0; i < $scope.HRDDataEntryStatus.length; i++) {
                    var request = $scope.HRDDataEntryStatus[i];
                    total += request.Completed;
                }
                return total;
            }

            $scope.getHRDStatusCompleted = function () {
                var total = 0;
                for (var i = 0; i < $scope.HRDDataEntryStatus.length; i++) {
                    var request = $scope.HRDDataEntryStatus[i];
                    total += request.Completed;
                }
                return total;
            }

            $scope.getHRDStatusProgess = function () {
                var total = 0;
                var completed = 0;
                var progress = 0;
                for (var i = 0; i < $scope.HRDDataEntryStatus.length; i++) {
                    var request = $scope.HRDDataEntryStatus[i];
                    completed += request.Completed;
                    total += request.TotalRequested;
                }
                if (total != 0) progress = (completed / total) * 100;
                return progress;
            }
            $scope.drawPieChart = function () {
                var completed = 0;
                var requested = 0;
                var completedInPercent = 0;
                var remaining = 0;
                for (var i = 0; i < $scope.RegionalRequestStatus.length; i++) {
                    var request = $scope.RegionalRequestStatus[i];
                    requested += request.TotalRequested;
                    completed += request.Completed;
                }
                var inpercent = (completed / requested) * 100;
                completedInPercent = (completed / requested) * 100;
                remaining = 100 - completedInPercent;
                $("#chart").kendoChart({
                    title: {
                        position: "bottom",
                        text: ""
                    },
                    legend: {
                        visible: true,
                        position:"bottom"
                    },
                    chartArea: {
                        background: ""
                    },
                    seriesDefaults: {
                        labels: {
                            visible: true,
                            background: "transparent",
                            template: "#= category #: \n #= value#%"
                        }
                    },
                    series: [
                        {
                            type: "pie",
                            startAngle: 150,
                            data: [
                                {
                                    category: "Completed",
                                    value: completedInPercent,
                                    color: "#0033ff"
                                }, {
                                    category: "Remaining",
                                    value: remaining,
                                    color: "#90cc38"
                                }
                            ]
                        }
                    ],
                    tooltip: {
                        visible: true,
                        format: "{0}%"
                    }
                });
            }

            $scope.drawHRDPieChart = function () {
                var completed = 0;
                var requested = 0;
                var completedInPercent = 0;
                var remaining = 0;
                for (var i = 0; i < $scope.HRDDataEntryStatus.length; i++) {
                    var request = $scope.HRDDataEntryStatus[i];
                    requested += request.TotalRequested;
                    completed += request.Completed;
                }
                var inpercent = (completed / requested) * 100;
                completedInPercent = (completed / requested) * 100;

                remaining = 100 - completedInPercent;
                $("#hrdChart").kendoChart({
                    title: {
                        position: "bottom",
                        text: ""
                    },
                    legend: {
                        visible: true,
                        position: "bottom"
                    },
                    chartArea: {
                        background: ""
                    },
                    seriesDefaults: {
                        labels: {
                            visible: true,
                            background: "transparent",
                            template: "#= category #: \n #= value#%"
                        }
                    },
                    series: [
                        {
                            type: "pie",
                            startAngle: 150,
                            data: [
                                {
                                    category: "Completed",
                                    value: completedInPercent,
                                    color: "#0033ff"
                                }, {
                                    category: "Remaining",
                                    value: remaining,
                                    color: "#90cc38"
                                }
                            ]
                        }
                    ],
                    tooltip: {
                        visible: true,
                        format: "{0}%"
                    }
                });
            }



            $scope.getRequests = function () {
                $http.post("@Url.Action("GetRegionalRequests", "EWDashboard", new { Area = "EarlyWarning" })").success(onRequestsSuccess);
            };

            $scope.getRations = function () {
                $http.post("@Url.Action("GetRation", "EWDashboard", new { Area = "EarlyWarning" })").success(onRationSuccess);

            };
            $scope.getRequisitions = function () {
                $http.post("@Url.Action("GetRequisition", "EWDashboard", new { Area = "EarlyWarning" })").success(onRequisitionSuccess);

            };
            $scope.getRequestedInfo = function () {
                $http.post("@Url.Action("GetRequestedInfo", "EWDashboard", new { Area = "EarlyWarning" })").success(onRequestedAmoutSuccess);

            };

            $scope.getRegionalRequestDataEntryStatus = function() {
                $http.post("@Url.Action("GetRegionalRequestDataEntryStatus", "EWDashboard", new { Area = "EarlyWarning" })").success(onRegionalRequestDataEntryStatus);
            };

            $scope.getHRDDataEntryStatus = function() {
                $http.post("@Url.Action("GetHRDDataEntryStatus", "EWDashboard", new { Area = "EarlyWarning" })").success(onHRDDataEntryStatusRequest);
            };

            $scope.getRecentCerteficates = function () {

                $scope.reqParam.startDate = $("#txtDate1").val();
                $scope.reqParam.endDate = $("#txtDate2").val();
                $http.post("@Url.Action("GetRecentGiftCertificates", "EWDashboard", new {Area = "EarlyWarning" })", $scope.reqParam).success(onGiftCertificateSuccess);
            };

            @*$scope.getStatusInPercentage = function () {
            $http.post("@Url.Action("GetStatusInPercentage", "EWDashboard", new { Area = "EarlyWarning" })").success(onRequestStatusSuccess);

        };*@
        @*$scope.getRequisitionStatusInPercentage = function () {
            $http.post("@Url.Action("GetRequisitionStatusPercentage", "EWDashboard", new { Area = "EarlyWarning" })").success(onRequisitionStatusSuccess);

        };*@
            $scope.getHrdRegionPercentage = function () {
                $http.post("@Url.Action("GetHrdRegionPercentage", "EWDashboard", new { Area = "EarlyWarning" })").success(onRegionTotalSuccess);

            };
            $scope.getRecentGiftCertificates = function () {
                $http.post("@Url.Action("GetRecentGiftCertificates", "EWDashboard", new { Area = "EarlyWarning" })").success(onGiftCertificateSuccess);

            };

            $scope.getDispatchedTillDistributed = function () {
                $http.post("@Url.Action("GetCurrentHrdStatistics", "EWDashboard", new { Area = "EarlyWarning" })").success(onDispatchTillDistributionSuccess);

             };

            $scope.getRations();
            $scope.getRequests();
            $scope.getRequisitions();
            $scope.getRequestedInfo();
            $scope.getRegionalRequestDataEntryStatus();
            $scope.getHRDDataEntryStatus();
            //$scope.getStatusInPercentage();
            //$scope.getRequisitionStatusInPercentage();
            //$scope.getHrdRegionPercentage();
            $scope.getRecentGiftCertificates();
            $scope.getDispatchedTillDistributed();
        }

        function ImportantNumbersController($scope, $http) {

            $scope.RequiredNumber = [];

            var onRequirednumberSuccess = function (data) {
                $scope.RequiredNumber = data;
            };

            $scope.getRequiredNumber = function () {
                $http.post("@Url.Action("GetEarlyWarningRequiredNumbers", "EWDashboard", new { Area = "EarlyWarning" })").success(onRequirednumberSuccess);

        };

        $scope.getRequiredNumber();
    }

</script>
<script>

    angular.module('myApp', ['myApp.directives', 'DataEntryIndicatorApp']);


    /* Controllers */
    function stageController($scope, $http) {
        $scope.type = 'Requests Percentage';
        var onRequestStatusSuccess = function (d) {
            $scope.data = [
                ['Pending', d["Pending"]],
                ['Approved', d["Approved"]],
                ['Requisition Created', d["RequisitionCreated"]]
            ];

        };
        var onRequisitonStatusSucess = function (d) {
            $scope.dataRequisition = [
               ['Pending', d["Pending"]],
               ['Approved', d["Approved"]],
               ['Hub Assigned', d["HubAssigned"]],
               ['Project Code Assigned', d['ProjectCodeAssigned']],
               ['Transport Requistion Created', d['TransportRequistionCreated']],
               ['Transport Order Created', d['TransportOrderCreated']]
            ];
        };

        var onRegionTotalSuccess = function (d) {

            $scope.dataP = d;

            $scope.Regions = [];

            $scope.Figure = [];

            for (var i in $scope.dataP) {
                $scope.Regions.push($scope.dataP[i].RegionName);
                $scope.Figure.push($scope.dataP[i].TotalBeneficary);
            }
        };

        $scope.getStatusInPercentage = function () {
            $http.post("@Url.Action("GetStatusInPercentage", "EWDashboard", new { Area = "EarlyWarning" })").success(onRequestStatusSuccess);
        };

        $scope.getRequisitionStatusInPercentage = function () {
            $http.post("@Url.Action("GetRequisitionStatusPercentage", "EWDashboard", new { Area = "EarlyWarning" })").success(onRequisitonStatusSucess);

        };

        $scope.getHrdRegionPercentage = function () {
            $http.post("@Url.Action("GetHrdRegionPercentage", "EWDashboard", new { Area = "EarlyWarning" })").success(onRegionTotalSuccess);

        };

        $scope.getStatusInPercentage();
        $scope.getRequisitionStatusInPercentage();
        $scope.getHrdRegionPercentage();
    }
    angular.module('myApp.directives', []).
    directive('drawPieChart', function () {
        // return the directive link function. (compile function not needed)
        return function (scope, element, attrs) {
            var container = $(element).attr("id");
            // watch the expression, and update the UI on change.
            scope.$watch('data', function () {
                drawPlot();
            }, true);
            var drawPlot = function () {
                var chart;
                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: container
                    },
                    credits: {
                        enabled: false
                    },
                    title: {
                        text: ''
                    },
                    exporting: {
                        enabled: false
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',
                        percentageDecimals: 1
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: false
                            },
                            showInLegend: true
                        }
                    },
                    series: [{
                        type: 'pie',
                        name: 'Requests Percentage',
                        data: scope.data
                    }]
                });
            };
        };
    });

    angular.module('myApp.directives').
    directive('drawRequisitionsChart', function () {
        // return the directive link function. (compile function not needed)
        return function (scope, element, attrs) {

            var container = $(element).attr("id");
            // watch the expression, and update the UI on change.
            scope.$watch('dataRequisition', function () {
                drawPlot();
            }, true);

            var drawPlot = function () {
                var chart;
                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: container
                    },
                    credits: {
                        enabled: false
                    },
                    title: {
                        text: ''
                    },
                    exporting: {
                        enabled: false
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',
                        percentageDecimals: 1
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: false
                            },
                            showInLegend: true
                        }
                    },
                    series: [{
                        type: 'pie',
                        name: 'Requisitions Percentage',
                        data: scope.dataRequisition
                    }]
                });
            }
        }
    });

    angular.module('myApp.directives').
    directive('drawPercentageChart', function () {
        // return the directive link function. (compile function not needed)
        return function (scope, element, attrs) {

            var container = $(element).attr("id");
            // watch the expression, and update the UI on change.
            scope.$watch('dataP', function () {
                drawPlot();
                //alert("Here");
            }, true);

            var drawPlot = function () {
                var chart;
                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: container,
                        type: 'column'
                    },
                    title: {
                        text: 'Beneficiaries Comparision'
                    },
                    //subtitle: {
                    //    text: 'Source: WorldClimate.com'
                    //},
                    credits: {
                        enabled: false
                    },
                    exporting: {
                        enabled: false
                    },
                    xAxis: {
                        categories: scope.Regions
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Beneficiaries'
                        }
                    },
                    tooltip: {
                        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                            '<td style="padding:0"><b>{point.y} </b></td></tr>',
                        footerFormat: '</table>',
                        shared: true,
                        useHTML: true
                    },
                    plotOptions: {
                        column: {
                            pointPadding: 0.2,
                            borderWidth: 0
                        }
                    },
                    series: [{
                        name: 'Beneficiaries Number',
                        data: scope.Figure
                    }]
                });
            };
        };
    });
    //$(document).ready(drawPieChart);
    //$(document).bind("kendo:skinChange", drawPieChart);
</script>
<script src="~/Scripts/js/DataActivityIndictor/DataActivityIndicator.JS"></script>

