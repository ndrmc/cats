@model Cats.Models.Hubs.ViewModels.LossesAndAdjustmentsViewModel
@using Cats.Web.Hub.Helpers

<div class="form-horizontal">

    @using (Html.BeginForm())
    {
        <div class="alert-error">
            @Html.ValidationSummary()
        </div>

        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption font-green-sharp">
                    <i class="icon-list font-green-sharp"></i>
                    <span class="caption-subject bold uppercase"> Stock Status</span>
                </div>
                <div class="tools">
                    <a href="#" class="collapse" data-original-title="" title=""></a>
                </div>
                <div class="actions">
                    <input type="submit" class="btn btn-sm green" value="@Html.Translate("Save")" />
                    <a href='@Html.Action("CreateLoss", "LossesAndAdjustments")' class="btn btn-sm red">@Html.Translate("Cancel")</a>
                    <a class="btn btn-icon-only btn-default fullscreen"></a>
                </div>
            </div>
            <div class="portlet-body">
                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.Commodities)</div>
                        <div class="col-md-8">
                            @(Html.Telerik().ComboBoxFor(model => model.Commodities)
                                  .Name("CommodityId")
                                  .BindTo(new SelectList(Model.Commodities, "CommodityId", "Name"))
                                  .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                                  .HighlightFirstMatch(true)
                                  .ClientEvents(ev => ev.OnChange("clearStore"))
                                  .CascadeTo("ProjectCodeId")
                                  //.HtmlAttributes(new { @class = "form-control" })
                                  )
                            <span class="help-block"> @Html.ValidationMessageFor(model => model.Commodities)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.SelectedDate)</div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.SelectedDate)
                            <span class="help-block"> @Html.ValidationMessageFor(model => model.SelectedDate)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.ProjectCodes)</div>
                        <div class="col-md-8">
                            @(Html.Telerik().ComboBoxFor(model => model.ProjectCodes)
                              .Name("ProjectCodeId")
                              .AutoFill(true)
                              .BindTo(new SelectList(Model.ProjectCodes, "ProjectCodeId", "ProjectName"))
                              .HighlightFirstMatch(true)
                              .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                              .DataBinding(binding => binding.Ajax().Select("GetProjecCodetForCommodity", "LossesAndAdjustments"))
                              //.ClientEvents(ev => ev.OnChange("clearStore"))
                              .CascadeTo("ShippingInstructionId")
                            )
                            <span class="help-block">@Html.ValidationMessageFor(model => model.ProjectCodes)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.MemoNumber)</div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.MemoNumber)
                            <span class="help-block">@Html.ValidationMessageFor(model => model.MemoNumber)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                        @* <td rowspan="5">
                    <div style="margin-left: 20px;" id="BalanceContent">
                    </div>
                </td>*@
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.ShippingInstructions)</div>
                        <div class="col-md-8">
                            @(Html.Telerik().ComboBoxFor(model => model.ShippingInstructions)
                          .Name("ShippingInstructionId")
                          .BindTo(new SelectList(Model.ShippingInstructions, "ShippingInstructionId", "ShippingInstructionName"))
                          .AutoFill(true)
                          .HighlightFirstMatch(true)
                          .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                          .DataBinding(binding => binding.Ajax().Select("GetSINumberForProjectCode", "LossesAndAdjustments"))
                          .ClientEvents(ev => ev.OnChange("onShippingInstructionChange"))
                          .ClientEvents(ev => ev.OnDataBinding("onProjectCodeChange"))
                            )
                            <span class="help-block">@Html.ValidationMessageFor(model => model.ShippingInstructions)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.Programes)</div>
                        <div class="col-md-8">
                            @(Html.Telerik().ComboBox()
                              .Name("ProgramId")
                              .SelectedIndex(0)
                              .BindTo(new SelectList(Model.Programes, "ProgramId", "ProgramName"))
                              .AutoFill(true)
                              .HighlightFirstMatch(true)
                              .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                            )
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.Stores)</div>
                        <div class="col-md-8">
                            @(Html.Telerik().ComboBoxFor(model => model.Stores)
                                  .Name("StoreId")
                                  .BindTo(new SelectList(Model.Stores, "StoreId", "StoreName"))
                                  .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                                  .HighlightFirstMatch(true)
                                  .Placeholder("Select Store")
                                  .SelectedIndex(0)
                                  .ClientEvents(ev => ev.OnChange("onStoreComboChange"))
                            )
                            <span class="help-block"></span>@Html.ValidationMessageFor(model => model.Stores)
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.StoreMan)</div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.StoreMan)
                            <span class="help-block"> @Html.ValidationMessageFor(model => model.StoreMan)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.Reasons)</div>
                        <div class="col-md-8">
                            @(Html.Telerik().ComboBoxFor(model => model.Reasons)
                              .Name("ReasonId")
                              .BindTo(new SelectList(Model.Reasons, "AdjustmentReasonId", "Name"))
                              .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                              .HighlightFirstMatch(true)
                            )
                            <span class="help-block"></span>@Html.ValidationMessageFor(model => model.Reasons)
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.Units)</div>
                        <div class="col-md-8">
                            @(Html.Telerik().ComboBoxFor(model => model.Units)
                              .Name("UnitId")
                              .BindTo(new SelectList(Model.Units, "UnitId", "Name"))
                              .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                              .HighlightFirstMatch(true)
                            )
                            <span class="help-block">@Html.ValidationMessageFor(model => Model.Units)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.QuantityInUint)</div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.QuantityInUint)
                            <span class="help-block">@Html.ValidationMessageFor(model => model.QuantityInUint)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.QuantityInMt)</div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.QuantityInMt)
                            <span class="help-block">@Html.ValidationMessageFor(model => model.QuantityInMt)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.ApprovedBy)</div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ApprovedBy)
                            <span class="help-block">@Html.ValidationMessageFor(model => model.ApprovedBy)</span>
                            <span class="required" style="width: 10px;">*</span>
                        </div>
                    </div>
                    <div class="col-md-6 form-group">
                        <div class="col-md-4 control-label">@Html.LabelFor(model => model.Description)</div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Description)
                            <span class="help-block">@Html.ValidationMessageFor(model => model.Description)</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    
        @*<div style="margin-left: 100px; margin-top: 50px;">
            <input type="submit" class="t-button" value="@Html.Translate("Save")" />
            <input type="button" value="@Html.Translate("Cancel")" class="t-button"/>
        </div>*@
    }

</div>

<script type="text/javascript">
    function onStoreComboChange(m) {
        $.ajax({
            type: 'POST',
            url: '/LossesAndAdjustments/GetStoreMan',
            data: { storeId: m.value },
            dataType: 'json',
            success: function (data) {
                $('#StoreMan').val(data);
            }
        });
        LoadBalance();
    }

    function onShippingInstructionChange() {

        var commodityId = $("#CommodityId").data("tComboBox").value();
        var siId = $("#ShippingInstructionId").data("tComboBox").value();
        var StoreCombo = $("#StoreId").data("tComboBox");

        $.ajax({
            type: 'POST',
            url: '/LossesAndAdjustments/GetStoreForParentCommodity',
            data: { commodityParentId: commodityId, SINumber: siId },
            dataType: 'json',
            success: function (data) {
                StoreCombo.dataBind(data, true);
                //if (siId > 0) {
                //    $("#StoreId").data("tComboBox").enable();
                //}
                $("#StoreId").data("tComboBox").enable();
            }
        });
        LoadBalance();
    }

    function onProjectCodeDatabinding() {
        var CommodityId = $("#CommodityId").data("tComboBox").value();
        var projectCodeId = $("#ProjectCodeId").data("tComboBox").value();
        var SICombo = $("#ShippingInstructionId").data("tComboBox");

    }

    function onProjectCodeChange(e) {
        e.preventDefault();
        var commodityId = $("#CommodityId").data("tComboBox").value();
        var projectCodeId = $("#ProjectCodeId").data("tComboBox").value();
        var SICombo = $("#ShippingInstructionId").data("tComboBox");

        $.ajax({
            type: 'POST',
            url: '/LossesAndAdjustments/GetSINumberForProjectCode',
            data: { ProjectCodeId: projectCodeId, CommodityId: commodityId },
            dataType: 'json',
            success: function (data) {
                SICombo.dataBind(data, true);
                if (projectCodeId > 0) {
                    //alert("here");
                    $("#ShippingInstructionId").data("tComboBox").enable();
                }
            }
        });
    }

    function clearStore() {
        $("#StoreId").data("tComboBox").select(0);
        $("#StoreId").data("tComboBox").disable();
        clearBalance();
    }

    function LoadBalance() {

        var CommodityId = $("#CommodityId").data("tComboBox").value();
        var projectId = $("#ProjectCodeId").data("tComboBox").value();
        var siId = $("#ShippingInstructionId").data("tComboBox").value();
        var StoreId = $("#StoreId").data("tComboBox").value();
        var StackId = null;
        //        var FromStackId = $("#FromStackId").data("tComboBox").value();
        if (CommodityId != "" && projectId != "" && siId != "") {
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/InternalMovement/SINumberBalance")',
                data: { parentCommodityId: CommodityId, projectcode: projectId, SINumber: siId, StoreId: StoreId, StackId: StackId },
                success: function (data) {
                    $('#BalanceContent').empty();
                    $('#BalanceContent').append(data);
                }
            });
        }
    }

    function clearBalance() {
        $('#BalanceContent').empty();
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#StoreId").data("tComboBox").disable();
        $("#ShippingInstructionId").data("tComboBox").disable();
    });
</script>
