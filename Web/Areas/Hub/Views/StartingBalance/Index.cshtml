@using Cats.Models.Hubs.ViewModels
@using Cats.Web.Hub.Helpers
@using Cats.Security
@model IEnumerable<Cats.Models.Hubs.ViewModels.StartingBalanceViewModel>

@{
    //ViewBag.Title = "Starting Balances";
    ViewBag.PageTitle = "Starting Balances";
    Layout = "~/Views/Shared/DefaultLayout.cshtml";

}
 @section Toolbar
{
<a class="btn btn-fit-height grey-salt" href="#" onclick="CreateStartingBalance()">@Html.Translate(" Create New Starting Balance")</a>

}
@{
    Html.Telerik().Window()
            .Name("StartingBalance")
            .Title(Html.Translate("Edit/New StartingBalance"))
            .Content(@<text>
                <div style="padding: 10px;" id="create-edit-form"></div>
            </text>)
                    .Width(800)
                    .Height(640)
                    .Draggable(true)
                    .Modal(true)
                    .Visible(false)
                    .Render();
}
 

    <div class="portlet light bordered bg-inverse">
        <div class="portlet-title">
            <div class="caption font-green-sharp"><i class="fa fa-list font-green-sharp"></i> @ViewBag.PageTitle </div>
            <div class="actions">
                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href=" javascript:;" data-original-title="" title=""></a>
            </div>
        </div>
        <div class="portlet-body" style="text-align:center;">

            @(Html.Telerik().Grid<StartingBalanceViewModelDto>()
            .Name("StartingBalanceGrid")
           .Columns(columns =>
           {
               columns.Bound(o => o.CommodityName).Width(150);
               columns.Bound(o => o.ChildCommodity).HeaderHtmlAttributes(new { style = "height:60px; background-color:lightgray, align = center; overflow: visible; white-space: normal;" }).Width(100);

               columns.Bound(o => o.SINumber).HeaderHtmlAttributes(new { style = "height:60px; background-color:lightgray, align = center; overflow: visible; white-space: normal;" });
               columns.Bound(o => o.DonorName).HeaderHtmlAttributes(new { style = "height:60px; background-color:lightgray, align = center; overflow: visible; white-space: normal;" });
               columns.Bound(o => o.ProjectCode).HeaderHtmlAttributes(new { style = "height:60px; background-color:lightgray, align = center; overflow: visible; white-space: normal;" });
               columns.Bound(o => o.ProgramName).HeaderHtmlAttributes(new { style = "height:60px; background-color:lightgray, align = center; overflow: visible; white-space: normal;" });
               columns.Bound(o => o.StoreName).HeaderHtmlAttributes(new { style = "height:60px; background-color:lightgray, align = center; overflow: visible; white-space: normal;" });
               columns.Bound(o => o.StackNumber).Title("Stack ");
               columns.Bound(o => o.UnitName).Title("Unit");
               columns.Bound(o => o.QuantityInUnit).HeaderHtmlAttributes(new { style = "height:60px; background-color:lightgray, align = center; overflow: visible; white-space: normal;" });
               columns.Bound(o => o.QuantityInMT).HeaderHtmlAttributes(new { style = "height:60px; background-color:lightgray, align = center; overflow: visible; white-space: normal;" })
                .Width(105);
           })
            .Scrollable(p => p.Height(450)).HtmlAttributes(new { style = "overflow: visible; white-space: normal;" })
            //   .HeaderHtmlAttributes(); }
            //.ClientEvents(ev => ev.OnDataBinding("dataBinding"))
            .DataBinding(dataBinding => dataBinding.Ajax().Select("GetListOfStartingBalances", "StartingBalance"))
            .Sortable(sorting => sorting.Enabled(true))
            //.Pageable(paging => paging.Enabled(true))
            .Filterable().ColumnContextMenu(z => z.Enabled(true))
            .Footer(true)
            )
        </div>
    </div>
</div>

<script type="text/javascript">

    function CreateStartingBalance() {

        $('#StartingBalance').data('tWindow').center().open();
        $('#StartingBalance').data('tWindow').title('@Html.Translate("New StartingBalance")');
        var url = '@Url.Action("Create", "StartingBalance")';
        $('#create-edit-form').load(url);

    }

    function submitStartingBalanceForm(button) {

        var form = $(button).closest("form");
        // var theNewSi = null;//$('#SINumber').val();

        if (form.valid()) {
            $(button).attr('disabled', 'disabled');
            $.ajax({
                type: 'POST',
                url: form.attr('action'),
                data: $(form).serialize(),
                success: function (response) {
                    //rebind the GRID
                    $(button).removeAttr('disabled');
                    if (response != null && response == true) {
                        $('#StartingBalance').data('tWindow').close();
                        var gr = $('#StartingBalanceGrid').data('tGrid');
                        gr.rebind();

                    }
                }
            });
        }
    }

    function cancelStartingBalanceForm() {
        $('#StartingBalance').data('tWindow').close();
        $('#create-edit-form').html("");
    }
</script>