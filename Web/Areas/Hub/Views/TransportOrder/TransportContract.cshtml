@model Cats.Areas.Procurement.Models.TransportContractViewModel
@using System.Collections
@using Kendo.Mvc.UI
@using Cats.Helpers
@using GridEditMode = Kendo.Mvc.UI.GridEditMode

@{
    ViewBag.Title = "TransportContract";
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";
    ViewBag.PageTitle = Html.Translate("Transport Contract");
    ViewBag.PageTitleDescription = "";
}

<div class="portlet light bordered bg-inverse">
    <div class="portlet-title">
        <div class="caption font-green-sharp">
            <i class="icon-list font-green-sharp"></i>
            <span class="caption-subject bold uppercase"> @Html.Translate("Transport Contract Header")</span>
        </div>
        <div class="tools">
            <a href="#" class="collapse" data-original-title="" title=""></a>
        </div>
        <div class="actions">
            @*< a class="btn btn-icon-only btn-default fullscreen" href="javascript:;"></a>*@
        </div>
    </div>
    <div class="portlet-body">
        <div class="form-horizontal">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label col-md-4">
                            @Html.LabelFor(m => m.Transporter)
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.Transporter, new { Disabled = true, @class="form-control"  })
                            @*<a href="@Url.Action("TransportContract","TransportOrder")">Change</a>*@
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label col-md-4">
                            @Html.LabelFor(m => m.BidDocumentNo)
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.BidDocumentNo, new { Disabled = true, @class="form-control"  })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label col-md-4">
                            @Html.Label(Html.Translate("Requisition No"))
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.RequisitionNo, new { Disabled = true, @class="form-control"  })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label col-md-4">
                            @Html.Label(Html.Translate("Contract Number"))
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.ContractNumber, new { Disabled = true, @class="form-control"  })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label col-md-4">
                            @Html.Label(Html.Translate("Dispatch Date"), new { @class = "cats-date-pref" })
                        </div>
                        <div class="col-md-6">
                            @*@foreach (var detail in Model.TransportOrderDetails)
                                {

                                }*@
                            @Html.TextBoxFor(m => m.RequestedDispatchDate, new { Disabled = true, @class="form-control"  })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label col-md-4">
                            @Html.Label(Html.Translate("Transport Order Expiry"))
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.OrderExpiryDate, new { Disabled = true, @class="form-control"  })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label col-md-4">
                            @Html.Label(Html.Translate("Region"))
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.Region, new { Disabled = true, @class="form-control"  })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <div class="control-label col-md-4">
                            @Html.Label(Html.Translate("Zone"))
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.Zone, new { Disabled = true, @class="form-control"  })
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="portlet light bordered">
    <div class="portlet-title">
        <div class="caption font-green-sharp">
            <i class="icon-list font-green-sharp"></i>
            <span class="caption-subject bold uppercase"> @Html.Translate("Transport Contract Detail")</span>
        </div>
        <div class="tools">
            <a href="#" class="collapse" data-original-title="" title=""></a>
        </div>
        <div class="actions">

            <a class="btn btn-icon-only btn-default fullscreen" href="javascript:;"></a>
        </div>
    </div>
    <div class="portlet-body">

        @(Html.Kendo().Grid<Cats.Areas.Procurement.Models.TransportOrderDetailViewModel>()
    .Name("grid")
    .Columns(columns =>
    {

    columns.Bound(p => p.Woreda);
    columns.Bound(p => p.RequisitionNo);
    columns.Bound(p => p.Commodity);
    columns.Bound(p => p.FDP);
    columns.ForeignKey(p => p.HubID, (IEnumerable)ViewBag.HubID, "hubID", "Name").Width(100).Title(Html.Translate("Origin Warehouse")).ClientFooterTemplate(Html.Translate("<div style='text-align:right;'><b>Total</b></div>"));
    // columns.Bound(p => p.DistanceFromOrigin);
    columns.Bound(p => p.QuantityQtl).Title("Qantity").ClientFooterTemplate("<div style='text-align:right;'><b>#=kendo.format('{0:N0}', sum)#</b></div>").HtmlAttributes(new { align = "right" }).Format("{0:n2}").HeaderHtmlAttributes(new { @class = "cats-unit-pref-grid" });
            // columns.Bound(p => p.TariffPerQtl).Title("Tariff").HtmlAttributes(new { style = "background-color:lightgray" }).Format("{0:n2}").Width(100).HtmlAttributes(new { align = "Right" });
            columns.Bound(p => p.TotalAmount).Title("Total Amount (Qty * Tariff)").ClientFooterTemplate("<div style='text-align:right;'><b>#=kendo.format('{0:N0}', sum)#</b></div>").Format("{0:N0}").HtmlAttributes(new { align = "Right" });

        })


             .Events(events => events.DataBound("onDataBound"))
            .Pageable()
            .Sortable()
            .Filterable()
            .DataSource(dataSource => dataSource
                  .Ajax()
                  .Aggregates(aggregates => aggregates.Add(p => p.QuantityQtl).Sum())
                  .Aggregates(aggregates => aggregates.Add(p => p.TotalAmount).Sum())
                  .PageSize(8)
                    .Model(model =>
                    {
            model.Id(p => p.TransportOrderID);
            model.Field(p => p.TransportOrderDetailID).Editable(false);
            model.Field(p => p.TariffPerQtl).Editable(false);
            model.Field(p => p.RequisitionNo).Editable(false);
            model.Field(p => p.Woreda).Editable(false);
            model.Field(p => p.Commodity).Editable(false);
            model.Field(p => p.FDP).Editable(false);
            model.Field(p => p.QuantityQtl).Editable(false);
            model.Field(p => p.TotalAmount).Editable(false);
            model.Field(p => p.HubID).Editable(false);
        })
                    .Read(read => read.Action("Contract_Read", "TransportOrder", new { id = Model.TransportOrderID }))
             //.Update(update => update.Action("TransportOrder_Update", "TransportOrder"))

             )

        )


    </div>
</div>
<script>
    $(function () {
        var printurl = "@Url.Action("Print", "TransportOrder",new{id= ViewBag.TransportOrderID })";
        $("#toolbar_button_print").attr("href", printurl);
    });
    function onDataBound(e) {

        var grid = $("#grid").data("kendoGrid");
        $(grid.tbody).on("focus", "input", function (e) {
            var input = $(this);
            setTimeout(function () { input.select(); }, 100);

        });
    }
</script>
