@using Cats.Helpers
@{
    ViewBag.Title = "Index";
    const string PAGE_NAME = "HubDashBoard.Index";
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";
    ViewBag.PageTitle = "Hub Dashboard";
    ViewBag.PageTitleDescription = "" + @ViewBag.HubName + " Hub";
    ViewBag.PageName = Cats.Services.Workflows.Constants.HubPage;
}

@section styles
{
    <link href="~/Content/Dashboard/dashboardcomponents.css" rel="stylesheet" />
}
<style>
    .chartWrap {
        margin: 0 auto;
        width: 100%;
        height: 300px;
    }
    .table td.rightAlign {
       
        text-align: center;
       
    }
</style>

<div ng-app="myApp">
    <div ng-controller="HubDashboardController" class="">

        <div class="portlet light bordered ">
            <div class="portlet-title">
                <div class="caption font-green-sharp">
                    <i class="icon-list font-green-sharp"></i>
                    <span class="caption-subject bold uppercase"> Stock Status</span>
                </div>
                <div class="tools">
                    <a href="#" class="collapse" data-original-title="" title=""></a>
                </div>
                <div class="actions">
                    <a class="btn btn-sm green" href="@Url.Action("Index", "LogisticsStockStatus", new {Area = "Logistics"})">Show more</a>
                    <a class="btn btn-icon-only btn-default fullscreen"></a>
                </div>
            </div>
            <div class="portlet-body">
                <div class="" id="StockStatusContent">
                    <div class="progress">
                        <div class="progress-bar progress-bar-success" style="width: {{StockStatus.freestockPercent;}}% ; ">
                            <span>
                                Free Stock {{ StockStatus.freestockPercent|number:2; }}%
                            </span>
                        </div>
                        <div class="progress-bar progress-bar-warning" style="width: {{StockStatus.physicalStockPercent;}}% ; ">
                            <span>
                                Committed Stock {{ StockStatus.physicalStockPercent|number:2; }}%
                            </span>
                        </div>
                    </div>
                </div>

                <h4>Stock Status per commodity</h4>
                <div class="portlet-content" ng-controller="stageController">
                    <div id="containerPIE" class="chartWrap" draw-column-chart=""></div>
                </div>
            </div>
        </div>

        @Html.Partial("_DataActivityIndicator")

        <div id="RequestContent" class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption font-green-sharp">
                    <i class="icon-list font-green-sharp"></i>
                    <span class="caption-subject bold uppercase"> Recent Dispatches</span>
                </div>
                <div class="tools">
                    <a href="#" class="collapse" data-original-title="" title=""></a>
                </div>
                <div class="actions">
                    <a class="btn btn-icon-only btn-default fullscreen"></a>
                </div>
            </div>
            <div class="portlet-body">
                <div class="table-responsive">
                    <table id="" class="table table-striped table-checkable">
                        <thead>
                            <tr>
                                <th class="hidden-xs">Bid Number</th>
                                <th>Requisition</th>
                                <th>GIN</th>
                                <th>FDP</th>
                                <th>Commodity</th>
                                @*<th>Planned</th>*@
                                <th>Dispatched (MT)</th>
                                <th>Transporter Name</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="" ng-repeat="dispach in Dispatches">
                                <td class="hidden-xs">{{dispach.BidNumber}}</td>
                                <td>{{dispach.RequisitionNo}}</td>
                                <td>{{dispach.GIN}}</td>
                                <td>{{dispach.FDPName}}</td>
                                <td>{{dispach.Commodity}}</td>
                                <td class="rightAlign">{{dispach.DispatchedAmount}}</td>
                                <td>{{dispach.Transporter}}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div id="DispatchContent" class="portlet light bordered bg-inverse">
            <div class="portlet-title">
                <div class="caption font-green-sharp">
                    <i class="icon-list font-green-sharp"></i>
                    <span class="caption-subject bold uppercase"> Outgoing Dispatches</span>
                </div>
                <div class="tools">
                    <a href="#" class="collapse" data-original-title="" title=""></a>
                </div>
                <div class="actions">
                    <a class="btn btn-icon-only btn-default fullscreen"></a>
                </div>
            </div>
            <div class="portlet-body">
                <div class="table-responsive">
                    <table id="" class="table table-striped table-checkable">
                        <thead>
                            <tr>
                                <th>BID Number</th>
                                <th>Requisition No</th>
                                <th>FDP</th>
                                <th>Commodity</th>
                                <th>Amount</th>
                                <th>Transporter</th>

                            </tr>
                        </thead>
                        <tbody>
                            <tr class="" ng-repeat="dispatchAllocation in DispatchAllocations">
                                <td class="hidden-xs">{{dispatchAllocation.BidNumber}}</td>
                                <td>{{dispatchAllocation.RequisitionNo}}</td>
                                <td>{{dispatchAllocation.FDPName}}</td>
                                <td>{{dispatchAllocation.Commodity}}</td>
                                <td class="rightAlign">{{dispatchAllocation.DispatchedAmount}}</td>
                                <td>{{dispatchAllocation.Transporter}}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    $("#StockStatusHeader").click(function () {
        $("#StockStatusContent").slideToggle("slow", "linear");
    });

    $("#RequisitionHeader").click(function () {
        $("#RequisitionContent").slideToggle("slow", "linear");
    });

    $("#DispatchHeader").click(function () {
        $("#DispatchContent").slideToggle("slow", "linear");
    });

    $("#DistributionHeader").click(function () {
        $("#DistributionContent").slideToggle("slow", "linear");
    });
</script>

<script>
    function HubDashboardController($scope, $http) {
        
        $scope.requestParam = { hub: '@ViewBag.HubID', program: 1, date: new Date() };
        $scope.hubParm = { hub: 1 };
        $scope.reqParam = { regionID: 2 };
        $scope.CommodityStock = [];
        $scope.StockStatus = [];
        $scope.Dispatches = [];
        $scope.Data = [];
        $scope.DispatchAllocations = [];
       

        var onCommodityStkStatusSuccess = function (data) {
            $scope.CommodityStock = data;
        };

        var onStockStatusSuccess = function (data) {
            $scope.StockStatus = data;
            
            console.log(data);
            console.log($scope.StockStatus.physicalStockPercent);
            console.log($scope.StockStatus.freestockPercent);
        };

        var onDispatchesSuccess = function (data) {
            $scope.Dispatches = data;
        };
        var onDispatchAllocationSuccess = function (data) {
            $scope.DispatchAllocations = data;
        };
        

        $scope.getCommodityStockStatus = function () {
            $http.post("@Url.Action("CommodityStockStatus", "HubDashboard", new { Area = "Hub" })", $scope.requestParam).success(onCommodityStkStatusSuccess);
        };

        $scope.getStockStatus = function () {
            $http.post("@Url.Action("StockStatus", "HubDashboard", new { Area = "Hub" })", $scope.requestParam).success(onStockStatusSuccess);
        };

        $scope.getDispatches = function () {
            $http.post("@Url.Action("RecentDispatches", "HubDashboard", new { Area = "Hub" })").success(onDispatchesSuccess);
        };

        $scope.getDispatchAllocations = function () {
            $http.post("@Url.Action("RecentDispatchAllocation", "HubDashboard", new { Area = "Hub" })").success(onDispatchAllocationSuccess);
        };
        $scope.getCommodityStockStatus();
        $scope.getStockStatus();
        $scope.getDispatches();
        $scope.getDispatchAllocations();
    }
</script>

<script>
    'use strict';

    // Declare app level module which depends on filters, and services
    angular.module('myApp', ['myApp.directives', 'DataEntryIndicatorApp']);


    /* Controllers */
    function stageController($scope,$http) {
        $scope.type = 'Commodity Stock Status';

        var onCommodityStkStatusSuccess = function (d) {

            $scope.data = d;

            $scope.commodities = [];

            $scope.freestock = [];

            $scope.committedstock = [];

            for (var i in $scope.data) {
                $scope.commodities.push($scope.data[i].CommodityName);
                $scope.freestock.push($scope.data[i].FreeStock);
                $scope.committedstock.push($scope.data[i].PhysicalStock);// it holds the value of committed stock 
            }
        };

        $scope.initData = function () {
            $http.post("@Url.Action("CommodityStockStatus", "HubDashboard", new { Area = "Hub" })", $scope.requestParam).success(onCommodityStkStatusSuccess);
        };

        $scope.initData();
    }

    /* Directives */

    angular.module('myApp.directives', []).
    directive('drawColumnChart', function () {
      // return the directive link function. (compile function not needed)
      return function (scope, element, attrs) {

          var container = $(element).attr("id");
          //alert("DD");
          // watch the expression, and update the UI on change.
          scope.$watch('data', function () {
              drawPlot();
          }, true);

          var drawPlot = function () {
              var chart;
              chart = new Highcharts.Chart({
                  chart: {
                      type: 'column',
                      renderTo: container
                  },
                  credits: {
                      enabled: false
                  },
                  title: {
                      text: ''
                  },
                  exporting: {
                      enabled: false
                  },
                  xAxis: {
                      categories: scope.commodities
                  },
                  yAxis: {
                      min: 0,
                      title: {
                          text: 'Stock Status Per Commodity'
                      },
                      stackLabels: {
                          enabled: true,
                          style: {
                              fontWeight: 'bold',
                              color: (Highcharts.theme && Highcharts.theme.textColor) || 'orange'
                          }
                      }
                  },
                  legend: {
                      align: 'right',
                      x: -70,
                      verticalAlign: 'top',
                      y: 20,
                      floating: true,
                      backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                      borderColor: '#CCC',
                      borderWidth: 1,
                      shadow: false
                  },
                  tooltip: {
                      headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                      pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                          '<td style="padding:0"><b>{point.y:.1f} </b> </td></tr>',
                      footerFormat: '</table>',
                      shared: true,
                      useHTML: true
                  },
               
                  series: [{
                         plotOptions: {
                      column: {
                          pointPadding: 0.2,
                          borderWidth: 0
                      }
                  },name: 'Free Stock',
                      data: scope.freestock
                  }, {
                      name: 'Committed Stock', // Physical Stock 
                      data: scope.committedstock
                  }]
              });
          }
      }
  });

</script>

    <script src="~/Scripts/js/DataActivityIndictor/DataActivityIndicator.JS"></script>

<style type="text/css">
    body {
        background-color: #364150;
    }
</style>