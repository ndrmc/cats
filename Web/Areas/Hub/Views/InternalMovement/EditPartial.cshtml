@model Cats.Models.Hubs.ViewModels.InternalMovementViewModel
@using Cats.Web.Hub.Helpers

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>




@using (Html.BeginForm("Create", "InternalMovement", FormMethod.Post, new { @class = "form-horizontal row" }))
            {
    <div class="col-md-6">

        <div class="form-group">
            <label class="control-label col-sm-4" for="Commodities">@Html.LabelFor(model => model.Commodities)</label>
            <div class="col-sm-8 ">
                @(Html.Telerik().ComboBoxFor(model => model.Commodities)
                    .Name("CommodityId")

                    .BindTo(new SelectList(Model.Commodities, "CommodityId", "Name"))
                    .Filterable(filtering =>
                    {
                        filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                    })
                    .HighlightFirstMatch(true)
                    .ClientEvents(ev => ev.OnChange("clearStore"))
                    .CascadeTo("ProjectCodeId")
                    .HtmlAttributes(new { style = "width:200px" })
                )

                @Html.ValidationMessageFor(model => model.Commodities)
            </div>
        </div>



        @*---------------------------------*@
        <div class="form-group">
            <label class="control-label col-sm-4" for="ProjectCodes">@Html.LabelFor(model => model.ProjectCodes)</label>
            <div class="col-sm-8 ">
                @(Html.Telerik().ComboBoxFor(model => model.ProjectCodes)
                    .Name("ProjectCodeId")
                    .AutoFill(true)
                    .BindTo(new SelectList(Model.ProjectCodes))
                    .HighlightFirstMatch(true)
                    .Filterable(filtering =>
                    {
                        filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                    })
                    .DataBinding(binding => binding.Ajax().Select("GetProjecCodetForCommodity", "InternalMovement"))
                    .HtmlAttributes(new { style = "width:200px" })
                    .ClientEvents(ev => ev.OnChange("onProjectCodeChange"))
                //.CascadeTo("ShippingInstructionId")
                )
                @Html.ValidationMessageFor(model => model.ProjectCodes)
            </div>
        </div>
        @*---------------------------------*@



        @*------------------ShippingInstructions---------------*@

        <!-- #region ShippingInstructions -->

        <div class="form-group">
            <label class="control-label col-sm-4" for="ShippingInstructions">@Html.LabelFor(model => model.ShippingInstructions)</label>
            <div class="col-sm-8 ">
                @(Html.Telerik().ComboBoxFor(model => model.ShippingInstructions)
                    .Name("ShippingInstructionId")
                    .BindTo(new SelectList(Model.ShippingInstructions))
                    .AutoFill(true)
                    .HighlightFirstMatch(true)
                    .Filterable(filtering =>
                    {
                        filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                    })
                    .DataBinding(binding => binding.Ajax().Select("GetSINumberForProjectCode", "InternalMovement"))
                    .ClientEvents(ev => ev.OnChange("onShippingInstructionChange"))
                    .HtmlAttributes(new { style = "width:200px" })
                     .ClientEvents(ev => ev.OnDataBinding("onProjectCodeDatabinding"))

                //.CascadeTo("FromStoreId")
                )
                @Html.ValidationMessageFor(model => model.ShippingInstructions)
            </div>
        </div>

        <!-- #endregion -->
        @*---------------------------------*@




        <!-- #region FromStore -->

        <div class="form-group">
            <label class="control-label col-sm-4" for="FromStore">@Html.LabelFor(model => model.FromStore)</label>
            <div class="col-sm-8 ">
                @(Html.Telerik().ComboBoxFor(model => model.FromStore)
                    .Name("FromStoreId")
                    //.BindTo(new SelectList(Model.FromStore, "StoreId", "StoreName"))
                    .SelectedIndex(0)
                    .Placeholder(Html.Translate("Select Store"))
                    .Filterable(filtering =>
                    {
                        filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                    })
                    .HighlightFirstMatch(true)
                    .ClientEvents(ev => ev.OnChange("onFromStoreChange"))
                    .HtmlAttributes(new { style = "width:200px" })
                    .CascadeTo("FromStackId")
                    .DataBinding(binding => binding.Ajax().Select("GetFromStoreForSINumber", "InternalMovement"))
                    .ClientEvents(ev => ev.OnDataBinding("onStoreDataBinding"))
                )
                @Html.ValidationMessageFor(model => model.FromStore)
            </div>
        </div>

        <!-- #endregion -->
        <!-- #region FromStack -->

        <div class="form-group">
            <label class="control-label col-sm-4" for="FromStack">@Html.LabelFor(model => model.FromStack)</label>
            <div class="col-sm-8 ">
                @(Html.Telerik().ComboBoxFor(model => model.FromStack)
                           .Name("FromStackId")
                           .BindTo(new SelectList(Model.FromStack))
                           .Placeholder(Html.Translate("Select Stack"))
                           .Filterable(filtering =>
                           {
                               filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                           })
                    .HtmlAttributes(new { style = "width:200px" })
                           .HighlightFirstMatch(true)
                           //.DataBinding(binding => binding.Ajax().Select("GetStacksForFromStore", "InternalMovement"))
                           .ClientEvents(ev => ev.OnChange("onToStoreChange"))

                )
                @Html.ValidationMessageFor(model => model.FromStack)

            </div>
        </div>

        <!-- #endregion -->
        <!-- #region Units -->

        <div class="form-group">
            <label class="control-label col-sm-4" for="Units">@Html.LabelFor(model => model.Units)</label>
            <div class="col-sm-8 ">
                @(Html.Telerik().ComboBoxFor(model => model.Units)
                    .Name("UnitId")
                    .BindTo(new SelectList(Model.Units, "UnitId", "Name"))
                    .Filterable(filtering =>
                    {
                        filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                    })
                    .HtmlAttributes(new { style = "width:200px" })
                    .HighlightFirstMatch(true)
                )
                @Html.ValidationMessageFor(model => model.Units)

            </div>
        </div>

        <!-- #endregion -->
        <!-- #region QuantityInUnit -->

        <div class="form-group">
            <label class="control-label col-sm-4" for="QuantityInUnit">@Html.LabelFor(model => model.QuantityInUnit)</label>
            <div class="col-sm-8 ">
                @Html.EditorFor(model => model.QuantityInUnit)
                @Html.ValidationMessageFor(model => model.QuantityInUnit)

            </div>
        </div>

        <!-- #endregion -->
        <!-- #region QuantityInMt -->

        <div class="form-group">
            <label class="control-label col-sm-4" for="QuantityInMt">@Html.LabelFor(model => model.QuantityInMt)</label>
            <div class="col-sm-8">
                @Html.EditorFor(model => model.QuantityInMt)
                @Html.ValidationMessageFor(model => model.QuantityInMt)

            </div>
        </div>

        <!-- #endregion -->


    </div>  //the left portion of the page

                        <div class="col-md-6">
                            <div class="form-group ">
                                <label class="control-label col-md-4 " for="Commodities">@Html.LabelFor(model => model.SelectedDate)</label>
                                <div class="col-md-8  ">


                                    @Html.EditorFor(model => model.SelectedDate))
                                    @Html.ValidationMessageFor(model => model.SelectedDate)

                                </div>
                            </div>
                            @*--------------ref number-------------------*@
                            <div class="form-group">
                                <label class="control-label col-sm-4" for="ReferenceNumber">@Html.LabelFor(model => model.ReferenceNumber)</label>
                                <div class="col-sm-5">
                                    @Html.EditorFor(model => model.ReferenceNumber)
                                    @Html.ValidationMessageFor(model => model.ReferenceNumber)
                                </div>

                                <div class="col-sm-5 " style="margin-left: 20px;" id="BalanceContent">


                                </div>

                            </div>
                            @*---------------------------------*@
                            @*--------------Programs number-------------------*@
                            <div class="form-group">
                                <label class="control-label col-sm-4" for="Programs">@Html.LabelFor(model => model.Programs)</label>
                                <div class="col-sm-5">
                                    @(Html.Telerik().ComboBoxFor(model => model.Programs)
                    .Name("ProgramId")
                    .BindTo(new SelectList(Model.Programs, "ProgramId", "ProgramName"))
                    .Filterable(filtering =>
                    {
                        filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                    })
                    .HtmlAttributes(new { style = "width:200px" })
                    .HighlightFirstMatch(true)
                                    )
                                    @Html.ValidationMessageFor(model => model.Programs)
                                </div>

                            </div>
                            @*---------------------------------*@



                        </div>

                        <div class="col-md-12 ">
                            <div class="col-md-6 ">

                                <!-- #region ToStore -->

                                <div class="form-group">
                                    <label class="control-label col-sm-4" for="ToStore">@Html.LabelFor(model => model.ToStore)</label>
                                    <div class="col-sm-8">
                                        @(Html.Telerik().ComboBoxFor(model => model.ToStore)
                .Name("ToStoreId")
                .BindTo(new SelectList(Model.ToStore, "StoreId", "StoreName"))
                .Filterable(filtering =>
                {
                    filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                })
                    .HtmlAttributes(new { style = "width:200px" })
                .HighlightFirstMatch(true)
                .ClientEvents(ev => ev.OnChange("onToStoreChange"))
                                        )
                                    </div>


                                </div>

                                <!-- #endregion -->
                                <!-- #region Reason -->

                                <div class="form-group">
                                    <label class="control-label col-sm-4" for="Reason">@Html.LabelFor(model => model.Reason)</label>
                                    <div class="col-sm-8">
                                        @(Html.Telerik().ComboBoxFor(model => model.Reason)
               .Name("ReasonId")
               .BindTo(new SelectList(Model.Reason, "ReasonId", "ReasonName"))
               .Filterable(filtering =>
               {
                   filtering.FilterMode(AutoCompleteFilterMode.StartsWith);

               }).HtmlAttributes(new { style = "width:200px" })
               .HighlightFirstMatch(true)
                                        )
                                        @Html.ValidationMessageFor(model => model.Reason)

                                    </div>
                                </div>

                                <!-- #endregion -->




                            </div>
                            <div class="col-md-6">


                                <!-- #region ToStack -->

                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="ToStack">@Html.LabelFor(model => model.ToStack)</label>
                                    <div class="col-sm-5">
                                        @(Html.Telerik().ComboBoxFor(model => model.ToStack)
                .Name("ToStackId")
                .BindTo(new SelectList(Model.ToStack)).HtmlAttributes(new { style = "width:200px" })
                .Filterable(filtering =>
                {
                    filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                })
                .HighlightFirstMatch(true)
                                        //.DataBinding(binding => binding.Ajax().Select("GetStacksForToStore", "InternalMovement"))
                                        )
                                        @Html.ValidationMessageFor(model => model.ToStack)
                                    </div>
                                </div>

                                <!-- #endregion -->

                            </div>
                        </div>


                        <div class="col-md-12">
                            <div class="form-group ">
                                <label class="control-label col-md-2 " for="Note">@Html.LabelFor(model => model.Note)</label>
                                <div class="col-md-10  ">
                                    @Html.EditorFor(model => model.Note)
                                    @Html.ValidationMessageFor(model => model.Note)

                                </div>
                            </div>

                            <div class="form-group ">
                                <label class="control-label col-md-2 " for="ApprovedBy">@Html.LabelFor(model => model.ApprovedBy)</label>
                                <div class="col-md-10  ">
                                    @Html.EditorFor(model => model.ApprovedBy)
                                    @Html.ValidationMessageFor(model => model.ApprovedBy)

                                </div>
                            </div>

                        </div>

                        <hr />
                        <div class="col-md-12 ">


                            <div class="col-md-9"> </div>

                            <div class="col-md-3 ">

                                <input class="col-md-5 " type="submit" value="@Html.Translate("Save")" />
                                <div class="col-md-2"> </div>
                                <button class="col-md-5  " onclick="location.href='@Url.Action("Index")';return false;">Cancel</button>

                            </div>
                        </div>
}





<script type="text/javascript">

    function onStoreDataBinding() {
        var CommodityId = $("#CommodityId").data("tComboBox").value();
        var StoreCombo = $("#FromStoreId").data("tComboBox");


    }
    function onProjectCodeDatabinding() {
        var CommodityId = $("#CommodityId").data("tComboBox").value();
        var projectCodeId = $("#ProjectCodeId").data("tComboBox").value();
        var SICombo = $("#ShippingInstructionId").data("tComboBox");


    }

    function onShippingInstructionChange() {

        var CommodityId = $("#CommodityId").data("tComboBox").value();
        var siId = $("#ShippingInstructionId").data("tComboBox").value();
        var StoreCombo = $("#FromStoreId").data("tComboBox");

        $.ajax({
            type: 'POST',
            url: '/InternalMovement/GetFromStoreForParentCommodity',
            data: { commodityParentId: CommodityId, SINumber: siId },
            dataType: 'json',
            success: function (data) {
                StoreCombo.dataBind(data, true);
                if (siId > 0) {
                    $("#FromStoreId").data("tComboBox").enable();
                }
            }
        });
        LoadBalance();
    }



    function LoadBalance() {

        var CommodityId = $("#CommodityId").data("tComboBox").value();
        var projectId = $("#ProjectCodeId").data("tComboBox").value();
        var siId = $("#ShippingInstructionId").data("tComboBox").value();
        var FromStoreId = $("#FromStoreId").data("tComboBox").value();
        var FromStackId = $("#FromStackId").data("tComboBox").value();
        if (CommodityId != "" && projectId != "" && siId != "") {
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/InternalMovement/SINumberBalance")',
                data: { parentCommodityId: CommodityId, projectcode: projectId, SINumber: siId, StoreId: FromStoreId, StackId: FromStackId },
                success: function (data) {
                    $('#BalanceContent').empty();
                    $('#BalanceContent').append(data);
                }
            });
        }

    }

    function clearBalance() {
        $('#BalanceContent').empty();
    }

    function clearStore() {
        $("#FromStoreId").data("tComboBox").select(0);
        $("#FromStoreId").data("tComboBox").disable();
        clearBalance();
    }

    function onProjectCodeChange() {
        var CommodityId = $("#CommodityId").data("tComboBox").value();
        var projectCodeId = $("#ProjectCodeId").data("tComboBox").value();
        var SICombo = $("#ShippingInstructionId").data("tComboBox");

        $.ajax({
            type: 'POST',
            url: '/InternalMovement/GetSINumberForProjectCode',
            data: { ProjectCodeId: projectCodeId, parentCommodityId: CommodityId },
            dataType: 'json',
            success: function (data) {
                SICombo.dataBind(data, true);
                if (projectCodeId > 0) {
                    $("#ShippingInstructionId").data("tComboBox").enable();
                }
            }
        });
    }

    function onToStoreChange() {

        var ToStoreId = $("#ToStoreId").data("tComboBox").value();;
        var ToStackCombo = $("#ToStackId").data("tComboBox");
        var FromStoreId = $("#FromStoreId").data("tComboBox").value();
        var FromStackId = $("#FromStackId").data("tComboBox").value();
        $("#ToStackId").data("tComboBox").value("");
        $.ajax({
            type: 'POST',
            url: '/InternalMovement/GetStacksForToStore',
            data: { ToStoreId: ToStoreId, FromStoreId: FromStoreId, FromStackId: FromStackId },
            dataType: 'json',
            success: function (data) {
                ToStackCombo.dataBind(data, true);
                if (FromStoreId > 0 && FromStackId > 0 && ToStoreId > 0) {
                    $("#ToStackId").data("tComboBox").enable();
                }
            }
        });
        LoadBalance();
    }

    function onFromStackChange() {

    }

    function onFromStoreChange() {
        var SINumber = $("#ShippingInstructionId").data("tComboBox").value();
        var FromStoreId = $("#FromStoreId").data("tComboBox").value();
        var FromStackCombo = $("#FromStackId").data("tComboBox");
        $("#FromStackId").data("tComboBox").value("");
        $.ajax({
            type: 'POST',
            url: '/InternalMovement/GetStacksForFromStore',
            data: { FromStoreId: FromStoreId, SINumber: SINumber },
            dataType: 'json',
            success: function (data) {
                FromStackCombo.dataBind(data, true);
                if (FromStoreId > 0 && SINumber > 0) {
                    FromStackCombo.dataBind(data, true);
                    $("#FromStackId").data("tComboBox").enable();
                }
            }
        });
        LoadBalance();
    }
</script>
@*<script src="../../Scripts/jquery-1.7.1-vsdoc.js" type="text/javascript"></script>*@
<script type="text/javascript">
    $(document).ready(function () {
        $("#FromStoreId").data("tComboBox").disable();
        $("#ToStackId").data("tComboBox").disable();
        $("#FromStackId").data("tComboBox").disable();
        $("#ShippingInstructionId").data("tComboBox").disable();
    });
</script>
