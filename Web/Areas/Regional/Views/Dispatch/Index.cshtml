
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    const string PAGE_NAME = "EarlyWarning.Index";
}

@section styles
{
    <link href="~/Content/Dashboard/dashboardcomponents.css" rel="stylesheet" />
}



<div ng-app="myApp">

    <div ng-controller="DispatchController" class="container">
        <div>
            <div class="pull-left {{Flag}}"></div>
            <div>
                <h3>Incomming Dispatches for @ViewBag.RegionName</h3>
            </div>
        </div>

        <div class="span8" style="width: 100%;">
            <div class="portlet">
                <div class="portlet-header">
                    <ul class="portlet-tools pull-right">
                        <li>
                            @*<a class="btn btn-sm btn-default" href="@Url.Action("Index", "DeliveryReconcile", new {Area = "Logistics", regionID = ViewBag.RegionID})">FDP Commodity Receipt</a>*@
                        </li>
                    </ul>
                </div>

                <div class="portlet-content">
                    <th class="table-responsive">
                        <table id="" class="table table-striped table-checkable">
                            <thead>
                                <tr>
                                    <th>FDP</th>
                                    <th>Woreda</th>
                                    <th>Commodity</th>
                                    <th>GIN</th>
                                    <th class="number">Quantity(QT)</th>
                                    <th>Source Hub</th>
                                    <th>Transporter</th>
                                </tr>
                            </thead>
                            <tbody>


                                <tr class="" ng-repeat="dispatch in Dispatches">
                                    <td>{{dispatch[0].Value}}</td>
                                    <th>{{dispatch[1].Value}}</th>
                                    <td>{{dispatch[2].Value}}</td>
                                    <td>{{dispatch[6].Value}}</td>
                                    <th class="number">{{dispatch[5].Value|number:2}} QT</th>
                                    <td>{{dispatch[3].Value}}</td>
                                    <th>{{dispatch[4].Value}}</th>
                                </tr>

                            </tbody>
                        </table>
                </div>
                <!-- /.table-responsive -->
            </div>
            <!-- /.portlet-content -->
        </div>
    </div>
</div>
<script>
    $("#RequestHeader").click(function () {
        $("#RequestContent").slideToggle("slow", "linear");
    });

    $("#RequisitionHeader").click(function () {
        $("#RequisitionContent").slideToggle("slow", "linear");
    });

    $("#AllocationChangeHeader").click(function () {
        $("#AllocationChangeContent").slideToggle("slow", "linear");
    });

    $("#DispatchHeader").click(function () {
        $("#DispatchContent").slideToggle("slow", "linear");
    });

    $("#DistributionHeader").click(function () {
        $("#DistributionContent").slideToggle("slow", "linear");
    });
</script>

<script>
        angular.module('myApp', ['myApp.directives']);
        function DispatchController($scope, $http) {

            $scope.reqParam = { regionID: '@ViewBag.RegionID' };
            $scope.Dispatches = [];

            var onDispatchesSuccess = function (data) {
                $scope.Dispatches = data;
            };


            $scope.getDispatches = function () {
                $http.post("@Url.Action("Dispatches", "Dispatch", new { Area = "Regional" })", $scope.reqParam).success(onDispatchesSuccess);
            };

            $scope.getDispatches();

        }
</script>

<script>
    'use strict';

    // Declare app level module which depends on filters, and services
    angular.module('myApp', ['myApp.directives']);

    /* Controllers */
    function stageController($scope, $http) {
        $scope.type = 'Requests Percentage';
        var onDashboardDataSuccess = function (d) {

            $scope.data = [
                ['Hub Assigned', d["HubAssignedRequests"]],
                ['Pending', d["PendingRequests"]],
                ['Approved', d["ApprovedRequests"]],
                ['Federal Approved', d["FederalApproved"]]
            ];

            $scope.dataRequisition = [
                ['Assigned', d["HubAssignedRequisitions"]],
                ['Pending', d["PendingRequisitions"]],
                ['Approved', d["ApprovedRequisitions"]]
            ];

            $scope.age = [
                ['Older than 18', d["Above18"]],
                ['Between 5 and 8', d["Bet5And8"]],
                ['Younger than 5', d["Below5"]]
            ];

        };
        $scope.initData = function () {
            $http.post("@Url.Action("RegionalData", "FetchData", new { Area = "Regional" })", $scope.reqParam).success(onDashboardDataSuccess);
        };
        $scope.initData();
    }

    /* Directives */

    angular.module('myApp.directives', []).
        directive('drawRequisitionsChart', function () {
            // return the directive link function. (compile function not needed)
            return function (scope, element, attrs) {

                var container = $(element).attr("id");
                // watch the expression, and update the UI on change.
                scope.$watch('dataRequisition', function () {
                    drawPlot();
                }, true);

                var drawPlot = function () {
                    var chart;
                    chart = new Highcharts.Chart({
                        chart: {
                            renderTo: container
                        },
                        credits: {
                            enabled: false
                        },
                        title: {
                            text: ''
                        },
                        exporting: {
                            enabled: false
                        },
                        tooltip: {
                            pointFormat: '{series.name}: <b>{point.percentage}</b>%<b> ({point.y})</b> requisitions ',
                            percentageDecimals: 1
                        },
                        plotOptions: {
                            pie: {
                                allowPointSelect: true,
                                cursor: 'pointer',
                                dataLabels: {
                                    enabled: false
                                },
                                showInLegend: true
                            }
                        },
                        series: [{
                            type: 'pie',
                            name: 'Percentage',
                            data: scope.dataRequisition
                        }]
                    });
                }
            }
        });

    angular.module('myApp.directives').
        directive('drawPieChart', function () {
            // return the directive link function. (compile function not needed)
            return function (scope, element, attrs) {
                var container = $(element).attr("id");
                // watch the expression, and update the UI on change.
                scope.$watch('data', function () {
                    drawPlot();
                }, true);
                var drawPlot = function () {
                    var chart;
                    chart = new Highcharts.Chart({
                        chart: {
                            renderTo: container
                        },
                        credits: {
                            enabled: false
                        },
                        title: {
                            text: ''
                        },
                        exporting: {
                            enabled: false
                        },
                        tooltip: {
                            pointFormat: '{series.name}: <b>{point.percentage}</b>% <b>({point.y})</b> Requests',
                            percentageDecimals: 1
                        },
                        plotOptions: {
                            pie: {
                                allowPointSelect: true,
                                cursor: 'pointer',
                                dataLabels: {
                                    enabled: false
                                },
                                showInLegend: true
                            }
                        },
                        series: [{
                            type: 'pie',
                            name: 'Percentage',
                            data: [
                                ['Afar', 25.0],
                                ['Oromiya', 20.0],
                                ['Amhara', 40.0],
                                ['Somali', 5.0],
                                ['Benishangul', 10.0]
                            ]
                        }]
                    });
                }
            }
        });



</script>
