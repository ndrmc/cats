@using Cats.Helpers
@using Cats.Models.Constant
@using Kendo.Mvc.UI


@{
    //ViewBag.Title = "Requistions";
    //Layout = "~/Views/Shared/_MainLayout.cshtml";
    var user = UserAccountHelper.GetUser(HttpContext.Current.User.Identity.Name);
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";
    ViewBag.PageTitle = "Requistions";
    ViewBag.PageTitleDescription = "";
}


    @*<h4 class="page-header">Requistions</h4>*@
<div class="well">
    <div class="row">

        <div class="col-md-2 ">
            <div class="form-group form-md-line-input has-info" style="padding-top: 0px;">
                <div class="input-group input-group-md" style="padding-top: 0px;">
                    <div class="input-group-control">
                        <input id="reqNoFilter" type="search" class="form-control input-md" placeholder='@Html.Translate("Requisition Number")'>
                        <label for="reqNoFilter">@Html.Translate("Requisition Number")</label>
                    </div>

                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group form-md-line-input has-info">
                @Html.DropDownList("ProgramID", null, new { @class = "form-control" })
                <label for="ProgramID">@Html.Translate("Program")</label>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group form-md-line-input has-info">
                <input id="roundFilter" type="search" class="form-control input-md" placeholder='@Html.Translate("Round")'>
                <label for="roundFilter">@Html.Translate("Round")</label>

            </div>

        </div>
        <div class="col-md-2">
            <span class="input-group-btn btn-right">
                <a class="btn green-haze" style=" margin-top: 15px;" onclick=" reloadGrid() "><i class="fa fa-search"></i> @Html.Translate("Search")</a>
            </span>
        </div>
    </div>
</div>

<div class="portlet light bordered">
    <div class="portlet-title">
        <div class="caption font-green-sharp">
            <i class="fa fa-list font-green-sharp"></i>
            <span class="caption-subject bold uppercase"> @Html.Translate("Requistions")</span>
            <span class="caption-helper">  </span>
        </div>
    </div>
    <div class="portlet-body">


        @(Html.Kendo().Grid<Cats.Areas.EarlyWarning.Models.ReliefRequisitionViewModel>().Name("Grid").Columns(columns =>
        {
            columns.Template(t => { }).Title("No").ClientTemplate("#= renderNumber(data) #").Width(50);
            columns.Bound(requisition => requisition.RequisitionNo).ClientTemplate("<a href='" + Url.Action("Allocation", "RegionRequisitions", new { id = "#=RequisitionID#" }) + " '>#=RequisitionNo#</a>  ");
            columns.Bound(requisition => requisition.Commodity);
            columns.Bound(requisition => requisition.Region);
            columns.Bound(requisition => requisition.Zone);
            columns.Bound(requisition => requisition.MonthRound).Title("Round/Month");
            columns.Bound(requisiton => requisiton.Program);
            columns.Bound(t => t.RequestedDateEt).HeaderHtmlAttributes(new { @class = "cats-date-pref-grid" }).Width(160);
            columns.Bound(requisition => requisition.Status).Template(

            @<text>
                @if (item.StateName == "Draft")
                {
                    <a href="@Url.Action("Edit", "ReliefRequisition", new {Area = "EarlyWarning", id = item.RequisitionID})"><i class="icon-edit"></i></a>
                    <a href="@Url.Action("SendToLogistics", "ReliefRequisition", new {Area = "EarlyWarning", id = item.RequisitionID})"><i class="icon-ok"></i></a>
                    <a href="@Url.Action("RequistionDetailEdit", "ReliefRequisition", new {Area = "EarlyWarning", id = item.RequisitionID})"><i class="icon-pencil"></i></a>
                }
                else
                {
                    @item.Status
                }
            </text>);
            //columns.Command(command =>
            //                    {
            //                        command.Edit().Text(" ");
            //                        command.Destroy().Text(" ");
            //                    }).Width(60);

        })
                                .Editable(editable => editable.Mode(GridEditMode.PopUp))
                //.Pageable(t=>t.PageSizes(new int[]{10,30,50}))
                                .Groupable()
                                .Sortable()
                                .Scrollable()
                                .HtmlAttributes(new { style = "height:430px;" })
                                .Events(ev => ev.DataBound("resetRowNumber"))
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    //.PageSize(10)

                                    .Model(model =>
                                    {
                                        model.Id(p => p.RegionalRequestID);
                                        //  model.Field(r => r.Status).Editable(false);
                                        model.Field(r => r.Commodity).Editable(false);
                                        model.Field(r => r.Region).Editable(false);
                                        model.Field(r => r.RequestedDateEt).Editable(false);
                                        model.Field(r => r.Region).Editable(false);
                                        model.Field(r => r.Zone).Editable(false);
                                        model.Field(r => r.Round).Editable(false);
                                        model.Field(r => r.Program).Editable(false);
                                        model.Field(r => r.Status).Editable(false);
                                    })

                                    .Read(read => read.Action("Requisition_Read", "RegionRequisitions").Data("filteringGrid"))

                                )
        )
    </div>
</div>
<script type="text/javascript">
    function filteringGrid() {
        return { reqNo: $() }
    }
</script>
<script>
    function filteringGrid() {
        //alert($("#AdminUnitTreeView").data("kendoTreeView").dataSource.id);
        var reqNo = $("#reqNoFilter").val();
        var programId = $("#ProgramID").val();
        var round = $("#roundFilter").val();
        var obj = { reqNoFilter: reqNo, programFilter: programId, roundFilter: round };
        return obj;
    }

    function reloadGrid() {
        //alert($("#searchIndex").val());
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }
</script>

