@using Cats.Helpers
@using Kendo.Mvc.UI
@using Cats.Security
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@section Toolbar
{
    @if (LogisticsConstants.Operation.Add_new_donation.ToString() == "Add_new_donation")
    {
    <a data-buttontype="btn_new_record" id="btnAddDonation" class="btn toolbar-btn " href="@Url.Action("AddNewDonation", "Donation")"></a>
    }
}
@section LeftBar
{}
<fieldset>
    
        <legend>
            @Html.Translate("Receive Plan for Donation")
        </legend>
    
</fieldset>
  
@(Html.Kendo().Grid<Cats.Areas.Logistics.Models.DonationHeaderViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.SINumber).Title(Html.Translate("SI Number")).Width(150);
        columns.Bound(p => p.DateOfAllocation).Title(Html.Translate("Allocation Date")).Width(100);
        columns.Bound(p => p.ProgramName).Title(Html.Translate("Program")).Width(100);
        columns.Bound(p => p.DonorName).Title(Html.Translate("Donor")).Width(250);
        columns.Bound(p => p.CommodityName).Title(Html.Translate("Commodity")).Width(150);
        columns.Bound(p => p.StrETA).Title(Html.Translate("ETA")).Width(100);
        columns.Bound(p => p.DonationHeaderPlanID).Visible(false);
        columns.Bound(p => p.SINumber).ClientTemplate(
                @"<div class='btn-group'># if ('" + LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Edit_donation).ToString() + "' == 'Edit_donation' && Status == 'Draft') { #" +
                    "<a href='' onclick='Edit()' title='Edit Donation'>Edit</a></li>" +
                " # } #" +
                "# if ('" + LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Revert_Donation).ToString() + "' == 'Revert_Donation' && Status == 'Send to hub') { #" +
                    "<a href='' onclick='OnRevert()' title='Revert Donation'>Revert</a></li>" +
                " # } #" +
                "# if ('" + LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Delete_Donation).ToString() + "' == 'Delete_Donation' && Status == 'Draft') { #" +
                    "<a href='' onclick='OnDelete()' title='Delete Donation'>Delete</a></li>" +
                " # } #" +
                "</div>");
        //columns.Command(p =>
        //{
        //    if (LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Edit_donation).ToString() == "Edit_donation")
        //    {
        //        p.Custom("Edit").Click("Edit");
        //    }
        //    if (LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Revert_Donation).ToString() == "Revert_Donation")
        //    {
        //        p.Custom("Revert").Click("OnRevert");
        //    }
        //    if (LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Delete_Donation).ToString() == "Delete_Donation")
        //    {
        //        p.Custom("Delete").Click("OnDelete");
        //    }
        //});
    })

    //.Editable(editable => editable.Mode(GridEditMode.InCell))

    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .Events(e=>e.DataBound("onDataBound"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.DonationHeaderPlanID))
        .Create(update => update.Action("EditingInline_Create", "Grid"))
        .Read(read => read.Action("ReadDonationPlan", "Donation"))
        .Update(update => update.Action("EditingInline_Update", "Grid"))
        .Destroy(update => update.Action("EditingInline_Destroy", "Grid"))
    )
)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>

<script type="text/javascript">
    
    function onDataBound(e) {
        //alert("show");
        var grid = $("#grid").data("kendoGrid");
        var gridData = grid.dataSource.view();
        //alert(gridData.length);
        for (var i = 0; i < gridData.length; i++) {
            var currentUid = gridData[i].uid;
            //alert(gridData[i].Status);
            if (gridData[i].IsCommited == false) {
                var currentRow = grid.table.find("tr[data-uid='" + currentUid + "']");
                var revertButton = $(currentRow).find(".k-grid-Revert");
                revertButton.hide();

            } else {
                var currentRow2 = grid.table.find("tr[data-uid='" + currentUid + "']");
                var deleteButton = $(currentRow2).find(".k-grid-Delete");
                var editButton = $(currentRow2).find(".k-grid-Edit");
                deleteButton.hide();
                editButton.hide();
            }



        }
    }

    function Edit(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var siNumber = dataItem["SINumber"];
        window.location = null;
        window.location = "@Url.Action("AddNewDonationPlan", "Donation")" + "?siNumber=" + siNumber + "&typeOfLoad=0";
    }
    
    function OnDelete(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        wnd.center().open();

        $("#yes").click(function () {

            window.location = "@Url.Action("Remove", "Donation")" + "/" + dataItem.DonationHeaderPlanID;
            wnd.close();
        });

        $("#no").click(function () {
            window.wnd.close();
        });
    }

    function OnRevert(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        wndRevert.center().open();

        $("#yesRevert").click(function () {

            window.location = "@Url.Action("Revert", "Donation")" + "/" + dataItem.DonationHeaderPlanID;
            wndRevert.close();
        });

        $("#noRevert").click(function () {
            wndRevert.close();
        });
    }
   
</script>

<div id="modalWindow">
    <h4>Are You Sure You Want to Delete this Donation Plan?</h4>
    <button id="yes" class="k-button">Yes</button>
    <button id="no" class="k-button">No</button>
</div>
<script>
    var wnd;
    $(document).ready(function () {
        wnd = $("#modalWindow").kendoWindow({
            title: "Delete confirmation",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");
    });
</script>

<div id="modalWindowRevert">
    <h4>Are You Sure You Want to Revert this Donation Plan?</h4>
    <button id="yesRevert" class="k-button">Yes</button>
    <button id="noRevert" class="k-button">No</button>
</div>
<script>
    var wndRevert;
    $(document).ready(function () {
        wndRevert = $("#modalWindowRevert").kendoWindow({
            title: "Revert confirmation",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");
    });
</script>


<script type="text/javascript">
    $(function () {

        //Optional: turn the chache off
        $.ajaxSetup({ cache: false });

        $('#btnAddDonation').click(function () {

            // alert("");
            $('#dialogContent').load(this.href, function () {
                $('#dialogDiv').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                //bindForm(this);
            });
            return false;
        });

      
    });
</script>

<div id='dialogDiv' class='modal hide fade in' style="width: 820px;margin-right: 10px">
    <div id='dialogContent'></div>
</div>