@using Cats.Helpers
@using Kendo.Mvc.UI
@using Cats.Security
@{
    ViewBag.Title = Html.Translate("Index");
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";
    ViewBag.PageTitle = Html.Translate("Receive Plan for Donation");
    ViewBag.PageTitleDescription = "";

}

<style>
    .k-grid td {
        overflow: visible;
    }
</style>

<div class="portlet light bordered">
    <div class="portlet-title">
        <div class="caption font-green-sharp">
            <i class="fa fa-list font-green-sharp"></i>
            <span class="caption-subject bold uppercase"> @Html.Translate("List of Receipt Plan From Transfer")</span>
            <span class="caption-helper">  </span>
        </div>
        <div class="tools">
                <a href="#" class="collapse" data-original-title="" title=""></a>
                <a href="javascript:;" class="remove" data-original-title="" title=""></a>
            </div>
        <div class="actions">
            @if (LogisticsConstants.Operation.Add_new_donation.ToString() == "Add_new_donation")
            {
                <a data-buttontype="btn_new_record" id="btnAddDonation" class="btn green" href="@Url.Action("AddNewDonation", "Donation")"> @Html.Translate("Add New Receive Plan")</a>
            }
        </div>
    </div>
    <div class="portlet-body">
        @(Html.Kendo().Grid<Cats.Areas.Logistics.Models.DonationHeaderViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.SINumber).Title(Html.Translate("SI Number")).Width(150);
        columns.Bound(p => p.DateOfAllocation).Title(Html.Translate("Allocation Date")).Width(100);
        columns.Bound(p => p.ProgramName).Title(Html.Translate("Program")).Width(100);
        columns.Bound(p => p.DonorName).Title(Html.Translate("Donor")).Width(250);
        columns.Bound(p => p.CommodityName).Title(Html.Translate("Commodity")).Width(150);
        columns.Bound(p => p.StrETA).Title(Html.Translate("ETA")).Width(100);
        columns.Bound(p => p.DonationHeaderPlanID).Visible(false);
        columns.Bound(p => p.Status).Title(Html.Translate("Status"));
        columns.Bound(p => p.Status).Title(Html.Translate("Actions")).ClientTemplate(
                @"<div class='btn-group'># if ('" + LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Edit_donation).ToString() + "' == 'Edit_donation' && Status == 'Draft' || Status == 'Edited') { #" +
                    "<span href='' onclick='Edit(\"#=SINumber#\")' title='Edit Donation' class='btn btn-xs btn-warning edit_btn'>Edit</span></li>" +
                " # } #" +
                "# if ('" + LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Revert_Donation).ToString() + "' == 'Revert_Donation' && Status == 'Sent to hub') { #" +
                    "&nbsp;<span href='' onclick='OnRevert(#=DonationHeaderPlanID#)' title='Revert Donation' class='btn btn-xs btn-error revert_btn'>Revert</span></li>" +
                " # } #" +
                "# if ('" + LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Delete_Donation).ToString() + "' == 'Delete_Donation' && Status == 'Draft' || Status == 'Edited') { #" +
                    "&nbsp;<span href='' onclick='OnDelete(#=DonationHeaderPlanID#)' title='Delete Donation' class='btn btn-xs red delete_btn'>Delete</span></li>" +
                " # } #" +
                "</div>" +
                @"<div class='btn-group'>
                <button type='button' id='workflow-#=DonationHeaderPlanID#' class='btn btn-default dropdown-toggle btn-xs green-stripe' data-toggle='dropdown'>
                    <i class='fa fa-ellipsis-horizontal'></i>Workflow<i class='fa fa-angle-down'></i>
                </button>
                <ul class='dropdown-menu pull-right' style='overflow: visible;'>" +
                    " <li class='edit_button'><a href=\"javascript: workflow_history('#=BusinessProcessID#')\"> History </a></li>" +
                "</ul></div>");
        //columns.Command(p =>
        //{
        //    if (LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Edit_donation).ToString() == "Edit_donation")
        //    {
        //        p.Custom("Edit").Click("Edit");
        //    }
        //    if (LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Revert_Donation).ToString() == "Revert_Donation")
        //    {
        //        p.Custom("Revert").Click("OnRevert");
        //    }
        //    if (LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Delete_Donation).ToString() == "Delete_Donation")
        //    {
        //        p.Custom("Delete").Click("OnDelete");
        //    }
        //});
    })

    //.Editable(editable => editable.Mode(GridEditMode.InCell))

    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .Events(e => e.DataBound("onDataBound"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.DonationHeaderPlanID))
        .Create(update => update.Action("EditingInline_Create", "Grid"))
        .Read(read => read.Action("ReadDonationPlan", "Donation"))
        .Update(update => update.Action("EditingInline_Update", "Grid"))
        .Destroy(update => update.Action("EditingInline_Destroy", "Grid"))
    )
        )


    </div>
</div>

<div id="modalHistory" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 id="modalHistoryLabel">Activity History</h4>
            </div>
            <div class="modal-body" id="modalHistoryBody">History</div>

        </div>
    </div>
</div>

@Html.Partial("~/Views/Shared/_PromotWorkflow.cshtml")

<script type="text/javascript">
    var history_link = "@Url.Action("History", "BusinessProcess", new { Area = "WorkflowManager", id = "0" })";

    function workflow_history(BusinessProcessID) {
        console.log("BusinessProcessID: " + BusinessProcessID);
        $('#modalHistory').modal();
        $('#modalHistoryBody').html("<div style='text-align:center;'> <img src='/content/images/loading.gif'/></div>");
        $.post(history_link + BusinessProcessID, {},
            function (data) {
                $("#modalHistoryBody").html(data);
            }
        );
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>

<script type="text/javascript">
    
    function onDataBound(e) {
        //alert("show");
        var grid = $("#grid").data("kendoGrid");
        var gridData = grid.dataSource.view();
        //alert(gridData.length);
        for (var i = 0; i < gridData.length; i++) {
            var currentUid = gridData[i].uid;
            //alert(gridData[i].Status);
            if (gridData[i].IsCommited == false) {
                var currentRow = grid.table.find("tr[data-uid='" + currentUid + "']");
                var revertButton = $(currentRow).find(".k-grid-Revert");
                revertButton.hide();

            } else {
                var currentRow2 = grid.table.find("tr[data-uid='" + currentUid + "']");
                var deleteButton = $(currentRow2).find(".k-grid-Delete");
                var editButton = $(currentRow2).find(".k-grid-Edit");
                deleteButton.hide();
                editButton.hide();
            }



        }
    }

    function Edit(siNumber) {
        //e.preventDefault();

       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //var siNumber = dataItem["SINumber"];
        window.location = null;
        window.location = "@Url.Action("AddNewDonationPlan", "Donation")" + "?siNumber=" + siNumber + "&typeOfLoad=0";
    }
    
    function OnDelete(donationHeaderPlanId) {
        //e.preventDefault();

        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        wnd.center().open();

        $("#yes").click(function () {

            window.location = "@Url.Action("Remove", "Donation")" + "/" + donationHeaderPlanId;
            wnd.close();
        });

        $("#no").click(function () {
            window.wnd.close();
        });
    }

    function OnRevert(donationHeaderPlanId) {
        //e.preventDefault();

        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        wndRevert.center().open();

        $("#yesRevert").click(function () {

            window.location = "@Url.Action("Revert", "Donation")" + "/" + donationHeaderPlanId;
            wndRevert.close();
        });

        $("#noRevert").click(function () {
            wndRevert.close();
        });
    }
   
</script>

<div id="modalWindow">
    <h4>Are You Sure You Want to Delete this Donation Plan?</h4>
    <button id="yes" class="k-button">Yes</button>
    <button id="no" class="k-button">No</button>
</div>

<script>
    var wnd;
    $(document).ready(function () {
        wnd = $("#modalWindow").kendoWindow({
            title: "Delete confirmation",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");
    });
</script>

<div id="modalWindowRevert">
    <h4>Are You Sure You Want to Revert this Donation Plan?</h4>
    <button id="yesRevert" class="k-button">Yes</button>
    <button id="noRevert" class="k-button">No</button>
</div>

<script>
    var wndRevert;
    $(document).ready(function () {
        wndRevert = $("#modalWindowRevert").kendoWindow({
            title: "Revert confirmation",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");
    });
</script>

<div class="modal fade" tabindex="-1" aria-hidden="true" id="dialogDiv"></div>

@*<div id='dialogDiv' class='modal fade in'>
    <div id='dialogContent'></div>
</div>*@
<script type="text/javascript">
    $(function () {

        //Optional: turn the chache off
        //$.ajaxSetup({ cache: false });

        $('#btnAddDonation').click(function (e) {
            e.preventDefault();
            // alert("");
            $.get(this.href, function (data) {
                $('#dialogDiv').html(data);
                $('#dialogDiv').modal();
                //bindForm(this);
            });
            return false;
        });

      
    });
</script>

