@using System.Collections
@using Kendo.Mvc.UI
@using Cats.Areas.Procurement.Models
@using Cats.Helpers
@using Cats.Security

@model List<Cats.Areas.Procurement.Models.WarehouseProgramViewModel>


@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";
    //Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.PageTitle = Html.Translate("Warehouse Assignment");
    ViewBag.PageTitleDescription = "";
    var currentUser = UserAccountHelper.GetCurrentUser();
}
@section Toolbar
{

    @*<li class="nav-header">@Html.Translate("Bid Plan") @ViewBag.bidPlan.ShortName</li>
    <li>@Html.Translate("Year"): @ViewBag.bidPlan.Year</li>
    <li>@Html.Translate("Period"): @ViewBag.bidPlan.YearHalf</li>
    <li class="nav-header">@Html.Translate("Tasks")</li>*@
     <div id="" class="pull-right tooltips" data-placement="top">
        <a class="btn default  grey-salt toolbar-btn" href="@Url.Action("Index", "TransportBidPlan", new {Area = "Procurement"})"><i class="fa fa-list"></i> @Html.Translate("Back to List")</a>
    </div>
    <div id="" class="pull-right tooltips" data-placement="top">

        @if (currentUser.CaseTeam != null)
        {
            if (currentUser.CaseTeam == 4)
            {
                if (UserAccountHelper.ProcurementOperationCheck(ProcurementConstants.Operation.Create_new_bid))
                {
                    <a class="btn default  grey-salt toolbar-btn" href="@Url.Action("Create/" + ViewBag.bidPlan.TransportBidPlanID, "bid", new {Area = "Procurement"})"><i class="fa fa-plus-circle"></i> @Html.Translate("Create Bid")</a>
                }
            }
        }
    </div>
    @*<li> <a href="@Url.Action("Create/" + ViewBag.bidPlan.TransportBidPlanID, "bid", new { Area = "Procurement" })"><i class="icon-chevron-left"></i>@Html.Translate("Create Bid")</a></li>*@
    @*<li> <a href="@Url.Action("Index", "TransportBidPlan", new { Area = "Procurement" })"><i class="icon-chevron-left"></i>@Html.Translate("Back to List")</a></li>*@

}
@*<div class="row">
    <h3>@Html.Translate("Warehouse Assignment")</h3>
    @Html.Translate("Select A woreda from the tree to specify quantity of goods to be transported from each warehouse")
</div>*@

<div class="well">

    <h4 style="display: inline;"><strong>@Html.Translate("Bid Plan"): @ViewBag.bidPlan.ShortName</strong></h4>
    <span>&nbsp;&nbsp;</span>
    <label>@Html.Translate("Year"): @ViewBag.bidPlan.Year</label>
    <span>&nbsp;&nbsp;</span>
    <label>@Html.Translate("Period"): @ViewBag.bidPlan.YearHalf</label>

    <p><i>@Html.Translate("Select A woreda from the tree to specify quantity of goods to be transported from each warehouse")</i></p>
</div>


<div class="row">
    <div class="col-md-4">
        <div class="portlet bordered light">
            <div class="portlet-title">
                <div class="caption font-green-sharp">
                    <i class="icon-globe-alt font-green-sharp"></i>
                    <span class="caption-subject bold uppercase"> @Html.Translate("Select Woreda")</span>
                    @*<span class="caption-helper">  @Html.Translate("Select A woreda from the tree to specify quantity of goods to be transported from each warehouse")</span>*@
                </div>
            </div>
            <div class="portlet-body">
                @Html.Partial("_AdminUnitTree")
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="portlet bordered light">
            <div class="portlet-title">
                <div class="caption font-green-sharp">
                    <i class="icon-home font-green-sharp"></i>
                    <span class="caption-subject bold uppercase"> @Html.Translate("Warehouse")</span>
                    <span class="caption-helper">  </span>
                </div>
            </div>
            <div class="portlet-body">
                <div id="div_warehouse_selection" style="display:none;" class="span8 ">

                    <h3></h3>
                    @(Html.Kendo().Grid<WarehouseProgramViewModel>()
    .Name("grid")

    .Columns(columns =>
    {
        //columns.Bound(p => p.BidPlanID).Width(100);
        // columns.Bound(p => p.WoredaID).Width(100);
        columns.ForeignKey(p => p.WarehouseID, (IEnumerable)ViewBag.WarehouseID, "Id", "Name").Title(Html.Translate("Warehouse")).Width(250);
        //columns.Bound(p => p.WarehouseName).Width(100);
        columns.Bound(p => p.PSNP).Width(100).Title(Html.Translate("PSNP"));
        columns.Bound(p => p.Relief).Title(Html.Translate("Relief")).Width(100);
        columns.Bound(p => p.Total).Title(Html.Translate("Total")).Width(100);
        columns.Command(command =>
        {
            command.Edit();
            command.Custom("Delete").Click("deleteRecord");
        }).Width(172);
    })
                            // .ToolBar(toolbar => toolbar.Create())

          .ToolBar(toolBar => toolBar.Template("<a class='k-button k-button-icontext k-grid-add' href='#' onlick='customCommand()'>Add Warehouse</a>"))

    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.WarehouseID);
            model.Field(p => p.WarehouseName).Editable(false);
            model.Field(p => p.PSNP).Editable(true);
            model.Field(p => p.Relief).Editable(true);

        })
        .Create(update => update.Action("CreateWarehouseSelectionAjax", "TransportBidPlan").Data("filterInfo"))
        .Read(read => read.Action("ReadJson", "TransportBidPlan").Data("filterInfo"))
        .Update(update => update.Action("UpdateWarehouseSelectionAjax", "TransportBidPlan"))
        .Destroy(update => update.Action("DeleteWarehouseSelectionAjax", "TransportBidPlan"))
    ).Resizable(resize => resize.Columns(true))
                    )

                </div>
            </div>
        </div>
    </div>
</div>







<script type="text/javascript">
    var TransportBidPlanID = @ViewBag.bidPlan.TransportBidPlanID;
    var selectedWoreda;
    var deleteURL="@Url.Action("DeleteWarehouseSelectionAjax", "TransportBidPlan", new { Area = "Procurement" })"
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    function filterInfo() {
        return {TransportBidPlanID:TransportBidPlanID,selectedWoreda:selectedWoreda};
    }
    function onSelect(e) {
        var id = this.dataItem(e.node).id;
        if (id) {
            selectedWoreda=id;
            $("#div_warehouse_selection").show();
            $("#grid").data("kendoGrid").dataSource.read();
        }
        else {
            $("#div_warehouse_selection").hide();
        }
        //$("#div_tree_log").html(id + "<br/>" + show_obj(this.dataItem(e.node)));
        //"Selecting: " + this.text(e.node) + " " + this.id(e.node));

    }
    function deleteRecord(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        if(confirm("@Html.Translate("Are you sure you want to delete this record?")")==true)
        {
            var post_values={TransportBidPlanID:dataItem.BidPlanID,selectedWoreda:dataItem.WoredaID,sourceWarehouse:dataItem.WarehouseID};

            $.post(
                    deleteURL
                    ,post_values
                    ,function (data)
                    {
                        $("#grid").data("kendoGrid").dataSource.read();
                    }
                 );

        }
    }
</script>