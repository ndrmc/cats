@using Cats.Areas.EarlyWarning.Models
@model RegionalRequestViewModel
@using Cats.Helpers
@using Cats.Models
@using Cats.Services.Security
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Regional Relief Requests";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<link href="~/Content/tokeninput/styles/token-input.css" rel="stylesheet" />
<link href="~/Content/tokeninput/styles/token-input-facebook.css" rel="stylesheet" />

@section Toolbar    {
    <!--
    <div class="btn-group">
    <button class="btn dropdown-toggle " data-toggle="dropdown">
        @Html.Translate("Actions")
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu">
        <li><a id="btnAddFDP" href="@Url.Action("AddBeneficary", "Request", new { id = Model.RegionalRequestID, programId = @ViewBag.programId })">@Html.Translate("Add FDP")</a></li>
        <li><a id="btnAddCommodity" href="@Url.Action("AddCommodity", "Request", new { id = Model.RegionalRequestID })">@Html.Translate("Add Commodity")</a></li>
    </ul>
    </div>
    <a class="btn toolbar-btn " data-buttontype="btn_save" href="javascript:saverecords()"></a>

    <a class="btn toolbar-btn " href="@Url.Action("Details", "Request", new { Area = "EarlyWarning", id = Model.RegionalRequestID })" data-buttontype="btn_back_to_list"></a>

-->    
    <a class="btn toolbar-btn " href="@Url.Action("Details", "Request", new { Area = "EarlyWarning",id = Model.RegionalRequestID })" data-buttontype="btn_back_to_list"></a>


}


<fieldset>
    <legend>
        @Html.Translate("Resource Allocation") 
       
    </legend>
</fieldset>
@Html.HiddenFor(m => m.RegionalRequestID)


<style>
    .summaryview
    {
        /*   width:90%;
        border:solid 1px #888;
        border-radius:4px;
     */
        padding: 4px;
    }

        .summaryview .fldlabel
        {
            text-align: right;
            font-weight: bold;
        }

        .summaryview .fldvalue
        {
        }

    .section-hilite
    {
        border-radius: 4px;
        background-color: #F8F8F8;
        margin: 5px;
    }

    .flat-input, .token-inputs input
    {
        background: transparent;
        border: none;
        box-shadow: none;
    }

        .flat-input:active, .flat-input:focus, .token-inputs input:active, .token-inputs input:focus
        {
            color: #666;
            border: none;
            box-shadow: none;
        }
    .token-inputs .token-input-token-facebook
    {
        padding:0px;
        padding-left:5px;
        padding-right:5px;

        border-radius:2px;
        color:#666;
    }
    .token-inputs .token-input-list-facebook
    {
        border:solid 1px #ccc;
        border-radius:2px;
        width:500px;

    }
    .activity_indicator
    {
        position:fixed;
        left:50%;
        top:45px;
        width:100px;
        height:30px;
        line-height:30px;
        margin-left:-50px;
        border-radius:2px;
        background:rgba(0,0,0,0.5);
        text-align:center;
        color:#FFF;
    }
    .pending-requests0 .activity_indicator
    {
        display:none;
        opacity:0.2;
    }
    .k-grid tbody tr:nth-child(2n)
    {
        background:#EEE;
    }
</style>

<div ng-app ng-controller="RequestAllocationController">

        <div class="section-hilite summaryview" style="width:90%; background:#FFF">
            <!--
            <div class="loading"><i class="fa fa-book fa-fw fa-border"></i> loading</div>
            -->
                <table style="width:90%; background:#FFF">
                <tr>
                    <td class="fldlabel">Reference : </td><td class="fldvalue">@Model.ReferenceNumber</td>
                    <td class="fldlabel">Region : </td><td class="fldvalue">@Model.Region</td>
                    <td class="fldlabel">Program : </td><td class="fldvalue">@Model.Program</td>
                </tr>
                <tr>
                    <td class="fldlabel">@Html.Translate("Request Date") : </td><td class="fldvalue">@Model.RequestDate</td>
                    <td class="fldlabel">@Html.Translate("Year") : </td><td class="fldvalue">@Model.Year</td>
                    <td class="fldlabel">@Html.Translate("Ration") : </td><td class="fldvalue">@Model.Ration </td>
                </tr>
            </table>
        </div>
        
       
    <div class="section-hilite token-inputs" style="padding:1px;">
         <table >
             <tr><td style="padding-left:20px; padding-right:4px;">
                 
                 @Html.Translate("Commodities") </td><td><input id="txt_requested_commodities" class="flat-input" /></td></tr>
         </table> 
    </div>

    
        <div class="k-widget k-grid" style="height:400px; overflow:scroll;">
            <table id="tbl_allocation" >
                <thead class="k-grid-header">
                <tr>
                    <th style="width:50px; padding:7px;">No.</th>
                    <th style="width:150px; padding:7px;">Zone</th>
                    <th style="width:150px">Woreda</th>
                    <th style="width:150px">FDP</th>
                   <!-- <th style="width:150px">Planned</th>-->
                    <th style="width:150px">Beneficiary</th>
                    <th></th>
                </tr>
                </thead>
                <tbody class="k-grid-content">
                    
                <tr  ng-repeat="allocation in allocations | orderBy:['Zone', 'Woreda']"  ng-show="isUniqueZone($index) || allocation.showA ">
                    <td>{{$index+1}} </td>
                    
                    <td ng-show="isUniqueZone($index)"><button ng-click="ChangeVisible(allocation.Zone)" ng-show="allocation.showA"> -</button> <button ng-click="ChangeVisible(allocation.Zone)" ng-show="!allocation.showA"> + </button> " "{{allocation.Zone}} </td>
                    <td ng-show="!isUniqueZone($index)"></td>
                    <td ng-show="allocation.showA">{{allocation.Woreda}}</td>
                    <td ng-show="allocation.showA">
                        <a ng-click="onFdpListShow($index)" id="fdp_selector_button{{$index}}" class="edit_button" href="javascript:_Void()">{{allocation.FDP}}</a>
                    </td>
                    <!--<td>{{allocation.PlannedBeneficiaries}}</td>-->
                    <td ng-show="allocation.showA"><input class="flat-input txt_beneficiaries" onfocus="onGridInputFocus(this)"  onchange="onAllocationBeneficiaryChange({{$index}})" ng-model="allocation.Beneficiaries"  /></td>
                    <td ng-show="allocation.showA"><button class="edit_button btn btn-danger"  ng-click="deleteRequestedFDP($index)"><i class="icon-trash icon-white"></i> Delete</button></td>
                </tr>
                <tr id="newAllocationEdit" style="display:none;">
                    <td></td>
                    <td>{{newAllocation.Zone}} </td>
                    <td>{{newAllocation.Woreda}}</td>
                    <td><a ng-click="onFdpListShow('new')" id="fdp_selector_buttonnew" class="edit_button" href="#">{{newAllocation.FDP}}</a></td>
                   <!-- <td></td>-->
                    <td><input class="flat-input" ng-model="newAllocation.Beneficiaries" id="txtNewAllocationBeneficiaries"  /></td>
                    <td>
                        <button class="edit_button btn btn-primary"   ng-click="saveAllocation(newAllocation,true)"><i class="icon-ok icon-white"></i>Save</button>
                        <button class="edit_button btn"   ng-click="onCreateAllocationCancel()"><i class="icon-trash icon-white"></i>Cancel</button>

                    </td>
                </tr>
                <tr style="display:none;"><td colspan="6"></td></tr>
                <tr id="cmdAddAllocation">
                    <td colspan="5"></td>
                    <td>
                        <button class="edit_button btn btn-primary"  ng-click="onCreateNewAllocation()"><i class="icon-plus icon-white"></i> New</button>
                    </td>
                </tr>
                    </tbody>
            </table>
            <div style="height:350px; "></div>
        </div>
    
    <div id="div_form_template" style="display:none;">
        <button type="button" class="close" data-dismiss="popover" style="margin-top:-30px; margin-right:10px;" onclick="hidePopover()">×</button>
        <div class="controls" style="width: 276px; min-height:100px; overflow:hidden;">
            @Html.Partial("~/Views/Shared/_AdminUnitTree.cshtml")
        </div>
   </div>

    <div id="activity_indicator" class="pending-requests">
        <div class="activity_indicator" show="{{pendingRequests>0}}"><img src="~/Content/images/loading.gif" /></div>

    </div>
    <div style="height:200px;"></div>
</div>

<script>
    $(function(){
        $(".onAllocatoinChange").change(function(){});
        //$("#tbl_allocation").kendoGrid();
    });
    function onGridInputFocus(input)
    {
        setTimeout(function () { $(input).select(); },50);
    }
    var RegionalRequestID=@ViewBag.RequestID;//@Model.RegionalRequestID;
    var RequestRation=@Model.RationID;
    var ServerUrls =
        {
            Allocation_Read: "@Url.Action("Allocation_Read", "Request")"
            ,Allocation_Create: "@Url.Action("Allocation_Create2", "Request")"
            ,Allocation_Update: "@Url.Action("Allocation_Update2", "Request")"
            ,Allocation_Delete: "@Url.Action("Allocation_Delete", "Request")"
           
            ,getAllCommodities:"@Url.Action("getRationCommodities", "Request")"
            ,getRequestedCommodities:"@Url.Action("Commodity_Read", "Request")"
            ,Commodity_Create:"@Url.Action("Commodity_Create2", "Request")"
            ,Commodity_Delete:"@Url.Action("Commodity_Destroy2", "Request")"
               
        };

    var adminTreeSelectionCallback=
        {
            OnFdp:function(fdpData){
                $$scope.onFdpChange(fdpData);
                hidePopover();
                //alert(fdpData.fdpName);
            }
        }
    var lastTarget;
    var onAllocationBeneficiaryChange=function(index)
    {
        console.log("onAllocationBeneficiaryChange", index);
        $$scope.onAllocatoinChange(index);

    };
    var onAllocationFDPChange = function (type, selection) {
        console.log("onDispatchFDPChange", selection);
        if (type != "fdp")
        { return;}
        $$scope.onFdpChange(selection);
    }
    
</script>
<script src="~/Content/tokeninput/js/jquery.tokeninput.js"></script>
<script src="~/Scripts/RequestAllocation/RequestAllocationController.js"></script>