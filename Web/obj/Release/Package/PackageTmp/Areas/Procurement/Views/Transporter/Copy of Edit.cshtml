@model Cats.Models.Transporter
@using Cats.Helpers
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@section LeftBar
{
    @Html.Partial("_TransporterLeftBar")
}
@section Toolbar
{
    <a class="btn toolbar-btn " data-buttontype="btn_save" data-submittedform="frm_edit_transporter"></a>
}

<div class="form-horizontal">
@using (Html.BeginForm("Edit", "Transporter", FormMethod.Post, new { id = "frm_edit_transporter" }))
{
    @*<p>
        <input type="submit" value="Save" /> 
    </p>*@
    
    @Html.ValidationSummary(true)
    
    <div style="border:solid 1px #CCC; padding:4px;">
        
     <div id="navbar" class="tabbable tabs-left">

            <!--
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#tab1" data-toggle="tab">Address</a></li>
                    <li><a href="#tab2" data-toggle="tab">Capacity</a></li>
                    <li><a href="#tab3" data-toggle="tab">Management</a></li>
                </ul>-->
            <div class="tab-contents">
                <div class="tab-pane active" id="tab1">
                    <fieldset>
                        <legend>Address</legend>
                        @Html.HiddenFor(model => model.TransporterID)
                        <!-- Input Name-->
          
                        <div class="control-group">
                            <label class="control-label" for="Name">Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.Name, new { @class = "input-xlarge", @placeholder = "Name" })    
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                        </div>
                        <!-- Input Region-->
                        <div class="control-group">
                            <label class="control-label" for="Region">Region</label>
                            <div class="controls" id="div_region">
                                @Html.DropDownList( "Region",ViewBag.Regions as SelectList, new {@id="RegionID"})
                                @Html.ValidationMessageFor(model => model.Region)
                            </div>

                        </div>
        
                        <!-- Input Zone-->
                        <div class="control-group">
                            <label class="control-label" for="Zone">Zone</label>
                            <div class="controls" id="div_zone">
                                @Html.DropDownList( "Zone",ViewBag.zones as SelectList,new {@id="ZoneID"})
                                @Html.ValidationMessageFor(model => model.Zone)
                            </div>
                        </div>        
       
                        <!-- Input Woreda-->
                        <div class="control-group">
                            <label class="control-label" for="Woreda">Woreda</label>
                            <div class="controls" id="div_woreda">
                                @Html.DropDownList( "Woreda",ViewBag.woredas as SelectList, new {@id="WoredaID"})
                                @Html.ValidationMessageFor(model => model.Woreda)
                            </div>
                        </div> 
        
          
                        <!-- Input SubCity-->
                        <div class="control-group">
                            <label class="control-label" for="SubCity">Sub City</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.SubCity, new { @class = "input-xlarge", @placeholder = "Sub City" })    
                                @Html.ValidationMessageFor(model => model.SubCity)
                            </div>
                        </div>

                        <!-- Input Kebele-->
                        <div class="control-group">
                            <label class="control-label" for="Kebele">Kebele</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.Kebele, new { @class = "input-xlarge", @placeholder = "Kebele" })    
                                @Html.ValidationMessageFor(model => model.Kebele)
                            </div>
                        </div> 

                        <!-- Input HouseNo-->
                        <div class="control-group">
                            <label class="control-label" for="HouseNo">House No</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.HouseNo, new { @class = "input-xlarge", @placeholder = "-" })    
                                @Html.ValidationMessageFor(model => model.HouseNo)
                            </div>
                        </div>        

                        <!-- Input TelephoneNo-->
                        <div class="control-group">
                            <label class="control-label" for="TelephoneNo">Telephone No</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.TelephoneNo, new { @class = "input-xlarge", @placeholder = "-" })    
                                @Html.ValidationMessageFor(model => model.TelephoneNo)
                            </div>
                        </div> 

                        <!-- Input MobileNo-->
                        <div class="control-group">
                            <label class="control-label" for="MobileNo">Mobile No</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.MobileNo, new { @class = "input-xlarge", @placeholder = "-" })    
                                @Html.ValidationMessageFor(model => model.MobileNo)
                            </div>
                        </div>
        
                    </fieldset>  
                </div>

                <div class="tab-pane" id="tab2">
                    <fieldset>
                        <legend>Capacity</legend>   
               
                        <!-- Input Ownership-->
                        <div class="control-group">
                            <label class="control-label" for="Ownership">Ownership</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.Ownership, new { @class = "input-xlarge", @placeholder = "-" })    
                                @Html.ValidationMessageFor(model => model.Ownership)
                            </div>
                        </div>       
        
                        <!-- Input VehicleCount-->
                        <div class="control-group">
                            <label class="control-label" for="VehicleCount">Vehicle Count</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.VehicleCount, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.VehicleCount)
                            </div>
                        </div>

        
                        <!-- Input LiftCapacityFrom-->
                        <div class="control-group">
                            <label class="control-label" for="LiftCapacityFrom">Lift Capacity</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.LiftCapacityFrom, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.LiftCapacityFrom)
                            </div>
                        </div>
                        <!-- Input LiftCapacityTo-->

                        <div class="control-group">
                            <label class="control-label" for="LiftCapacityTo">To</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.LiftCapacityTo, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.LiftCapacityTo)
                            </div>
                        </div>
        

                        <!-- Input LiftCapacityTotal-->
                        <div class="control-group">
                            <label class="control-label" for="LiftCapacityTotal">Total Lift Capacity</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.LiftCapacityTotal, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.LiftCapacityTotal)
                            </div>
                        </div>

                        <!-- Input Capital-->
                        <div class="control-group">
                            <label class="control-label" for="Capital">Capital</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.Capital, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.Capital)
                            </div>
                        </div>

                        <!-- Input EmployeeCountMale-->
                        <div class="control-group">
                            <label class="control-label" for="EmployeeCountMale">Employee Count Male</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.EmployeeCountMale, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.EmployeeCountMale)
                            </div>
                        </div>

                        <!-- Input EmployeeCountFemale-->
                        <div class="control-group">
                            <label class="control-label" for="EmployeeCountFemale">Employee Count Female</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.EmployeeCountFemale, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.EmployeeCountFemale)
                            </div>
                        </div>
  
                    </fieldset>
                </div>
                <div class="tab-pane" id="tab3">
                    <fieldset>
                        <legend>Management</legend> 
                        <!-- Input OwnerName-->
                        <div class="control-group">
                            <label class="control-label" for="OwnerName">Owner Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OwnerName, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.OwnerName)
                            </div>
                        </div>
        
                        <!-- Input OwnerMobile-->
                        <div class="control-group">
                            <label class="control-label" for="OwnerMobile">Owner Mobile</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OwnerMobile, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.OwnerMobile)
                            </div>
                        </div>

                        <!-- Input ManagerName-->
                        <div class="control-group">
                            <label class="control-label" for="OwnerMobile">Manager Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.ManagerName, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.ManagerName)
                            </div>
                        </div>
        
                        <!-- Input ManagerMobile-->
                        <div class="control-group">
                            <label class="control-label" for="ManagerMobile">Manager Mobile</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.ManagerMobile, new { @class = "input-xlarge", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.ManagerMobile)
                            </div>
                        </div>
        
                        <!-- Input ExperienceFrom-->
                        <div class="control-group">
                            <label class="control-label" for="ExperienceFrom">Experience From</label>
                            <div class="controls">

                                @Html.TextBoxFor(model => model.ExperienceFrom, new { @class = "input-xlarge cats-datepicker2", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.ExperienceFrom)
                            </div>
                        </div>

                        <!-- Input ExperienceTo-->
                        <div class="control-group">
                            <label class="control-label" for="ExperienceTo">Experience To</label>
                            <div class="controls">
                                <!--<input class="cats-datepicker" type="text" id="strExperienceTo" name="strExperienceTo" value="@Model.ExperienceTo"/>   -->     
                                @Html.TextBoxFor(model => model.ExperienceTo, new { @class = "input-xlarge cats-datepicker2", @placeholder = "0" })    
                                @Html.ValidationMessageFor(model => model.ExperienceTo)
                            </div>
                        </div>        

                    </fieldset>
                </div>
            </div>
        </div>

    </div>
}
    </div>
<div>
   <!-- @Html.ActionLink("Back to List", "Index")-->
</div>

<script>

    var admin_region_hash = {};
    var admin_zone_hash = {};
    
    $(function() {
        $.getJSON("/Procurement/Transporter/GetAdminUnits", {}, function(data) {
            //nData = data;
            document.getElementById("ZoneID").disabled = true;
            document.getElementById("WoredaID").disabled = true;
            var msg = "";
            //for (i = 0; i < 3; i++) {
            //    msg += data[0].Zones[0].Woredas[i].WoredaName + " ";
            //}
            //alert(msg);

            //woredas = data[0].Zones[0].Woredas;
            //var s = "";
            //for (w in woredas) {
            //    s += woredas[w].WoredaName + " ";
            //}
            //alert(s);
            //var ia=0, ja=0;
            
            for (var i in data) {
                msg += "\n" + data[i].RegionName;
                var key = data[i].RegionID;
                admin_region_hash[key] = data[i];

                var count = data[i].Zones.length;
                
                for (var j=0; j<count;j++){
                    var keyz = data[i].Zones[j].ZoneID;
                    admin_zone_hash[keyz] = data[i].Zones[j].Woredas;
                }
            }

            //$("#ZoneID").
            //$("#ZoneID").combobox('disable');
            //$("#ZoneID").data("Combobox").disable();
            //$("#ZoneID").combobox("option", "disabled", true);
            
        });

        $("#RegionID").change(function() {
            var regionId = $("#RegionID").val();
            var region = admin_region_hash[regionId];
            var zones = region.Zones;

            //var msg = "";
            var htm = "<select name='Zone' id ='ZoneID' > ";
            for (var z in zones) {
                //htm += "<option value='" + zones[z].AdminUnitID + "'>" + zones[z].Name + "</option>";
                htm += "<option value='" + zones[z].ZoneID + "'>" + zones[z].ZoneName + "</option>";
                //msg += "\n" + zones[z].ZoneName;
            }

            htm += "</select>";
            $("#div_zone").html(htm);
            
            $("#ZoneID").change(function () {
                popoulateWoredas();
            });
        });

        function popoulateWoredas() {
            var zoneId = $("#ZoneID").val();
            //alert(zoneId);
            var woredas = admin_zone_hash[zoneId];
            var s = "<select id ='WoredaID' name='Woreda' >";
            for (w in woredas) {
                s += "<option value='" + woredas[w].WoredaID + "'>" + woredas[w].WoredaName + "</option>";
            }
            s += "</select>";
            $("#div_woreda").html(s);
        }
        
        $("#ZoneID").change(function () {
            popoulateWoredas();
        });

        //    $("#ZoneID").change(function () {
        //        //populateZones();
        //        //alert("Hey");
        //        //var woredas = data[0].Zones[0].Woredas;
        //        //var s = "<select id ='WoredaID' name='Woreda' >";
        //        //for (w in woredas) {
        //        //    s +="<option value='" + woredas[w].WoredaID + "'>" + woredas[w].WoredaName + "</option>";
        //        //}
        //        //s += "</select>";
        //        //$("#div_woreda").html(s);
        //});

        //$("#ZoneID").change(function () {
        //    //populateZones();
        //    alert("Hey");
        //    var woredas = data[0].Zones[0].Woredas;
        //    var s = "<select id ='WoredaID' name='Woreda' >";
        //    for (w in woredas) {
        //        s +="<option value='" + woredas[w].WoredaID + "'>" + woredas[w].WoredaName + "</option>";
        //    }
        //    s += "</select>";
        //    $("#div_woreda").html(s);
        //});


        //function populateZones() {

        //    //var zoneId = $("#ZoneID").val();
        //    //alert(zoneId);
        //    //var zone = admin_zone_hash[0];
        //    //var woredas = zone.Woredas;

        //    //alert(region);

        //    var woredas = data[0].Zones[0].Woredas;
        //    //var s = "";
        //    //for (w in woredas) {
        //    //s += woredas[w].WoredaName + " ";
        //    //}
        //    //alert(s);

        //    //var woredas = zone.Woredas;
        //    //alert("Woreda");
        //    //alert("Woreda ID " + woredas.WoredaID);
        //    //alert("Woreda");
        //    //var msg = "";

        //    var htm = "<select id ='WoredaID' name='Woreda' >";
        //    for (w in woredas) {
        //        //htm += "<option value='" + zones[z].AdminUnitID + "'>" + zones[z].Name + "</option>";
        //        htm += "<option value='" + woredas[w].WoredaID + "'>" + woredas[w].WoredaName + "</option>";
        //        //msg += "\n" + zones[z].ZoneName;
        //    }
        //    htm += "</select>";
        //    $("#div_woreda").html(htm);
        //}
        
       
        
    });
</script>
