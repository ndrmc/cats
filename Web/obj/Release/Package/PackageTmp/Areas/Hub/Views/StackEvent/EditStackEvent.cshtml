@model Cats.Models.Hubs.ViewModels.StackEventViewModel

<script src="../../Scripts/jquery.validate.unobtrusive.bQuery.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
<script type="text/javascript">
    function onEventTypeComboChange(e) {
        var eventDate = $('#EventDate').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetFollowUpDate","StackEvent")',//'/StackEvent/GetFollowUpDate',
            data: { StackEventTypeId: e.value, selectedDate: eventDate },
            dataType: 'json',
            success: function (data) {
                $('#FollowUpDate').val(data);
            }
        });
    }
</script>
<div>
@using (Ajax.BeginForm("EditStackEvent", "StackEvent", new AjaxOptions { HttpMethod = "Post", OnSuccess = "OnSuccessSave" }))
{
    <table class="borderless">
        <tbody>
            <tr>
                <td>@Html.LabelFor(model => model.EventDate)</td>
                <td>
                    @Html.EditorFor(model => model.EventDate)
                    @Html.ValidationMessageFor(model => model.EventDate)
                </td>
            </tr>
            <tr>
                <td style="width:150px;">@Html.LabelFor(model => model.Stores)</td>
                <td>
                    @*@(Html.Telerik().ComboBox()
                                .Name("StoreIdTwo")
                                .DataBinding( binding => binding.Ajax().Select("GetStore","StackEvent"))
                                .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                                .HighlightFirstMatch(true)
                                //.ClientEvents(ev => ev.OnDataBound("ondStoreTwoDatabinding") )
                                .CascadeTo("StackNumberTwo")
                    )*@
                    @Html.TextBox("StoreTwoName", null, new { @disabled = "disabled" })
                    @Html.HiddenFor(model => model.StoreIdTwo)
                    @Html.ValidationMessageFor(model => model.Stores)
                </td>
             </tr>
            <tr>
                <td style="width:150px;" >@Html.LabelFor(model => model.Stacks)</td>
                <td>
                @*
                    @(Html.Telerik().ComboBoxFor(model => model.Stacks)
                                .Name("StackNumberTwo")
                                .BindTo(new SelectList(Model.Stacks))
                                .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                                .HighlightFirstMatch(true)
                                .DataBinding(binding => binding.Ajax().Select("GetStacksFromStoreTwo", "StackEvent"))
                    )*@
                    @Html.TextBox("StackTwoName", null, new { @disabled = "disabled" })
                    @Html.HiddenFor(model => model.StackNumberTwo)
                    @Html.ValidationMessageFor(model => model.StackNumberTwo)

               </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.StackEventTypes)</td>
                <td>
                    @(Html.Telerik().ComboBox()
                                .Name("StackEventTypeId")
                                .DataBinding(binding => binding.Ajax().Select("GetEventType", "StackEvent"))
                                .Filterable(filtering => { filtering.FilterMode(AutoCompleteFilterMode.StartsWith); })
                                .ClientEvents(ev => ev.OnChange("onEventTypeComboChange"))
                                .HighlightFirstMatch(true)
                    )
                    @Html.ValidationMessageFor(model => model.StackEventTypes)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Description)</td>
                <td>
                    @Html.TextAreaFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Recommendation)</td>
                <td>
                    @Html.TextAreaFor(model => model.Recommendation)
                    @Html.ValidationMessageFor(model => model.Recommendation)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.FollowUpDate)</td>
                <td>
                    @Html.EditorFor(model => model.FollowUpDate)
                    @Html.ValidationMessageFor(model => model.FollowUpDate)
                </td>
            </tr>
        </tbody>
    </table>

    <div style="margin-left:70px; margin-top: 20px;">
    <input type="submit" value="Save" /> <input type="button" onclick="onCancelClick()" value = "Cancel" />
    </div>
}

</div>


<script type="text/javascript">
    function onCancelClick() {
        $('#AddNewEventWindow').data('tWindow').close();
    }

    
   
    function OnSuccessSave() {
        $("#EventGrid").data("tGrid").rebind();
        $('#AddNewEventWindow').data('tWindow').close();
    }

    
</script>