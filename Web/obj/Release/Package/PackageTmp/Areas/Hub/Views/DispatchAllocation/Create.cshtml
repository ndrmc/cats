@model Cats.Models.Hubs.ViewModels.DispatchAllocationViewModel
@using Cats.Web.Hub.Helpers
@{
    ViewBag.Title = Html.Translate("Create new dispatch allocation");
 }
 
<p>
    @Html.Translate("Please use this form to create a new dispatch allocation for your hub.")
    @Html.Translate(" This should allow you to create new allocation records for dispatch that")
    @Html.Translate(" is not being recorded in the transportation bidding system.")
</p>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Create", "DispatchAllocation", FormMethod.Post, new { id = "createForm" }))
    {
    @Html.ValidationSummary(true)
 
        <table class="borderless">
            <tr>
                <td>@Html.LabelFor(model => model.RequisitionNo, Html.Translate("Requisition No"))
                <span class="required">*</span></td>
                <td>@Html.EditorFor(model => model.RequisitionNo)
            @Html.ValidationMessageFor(model => model.RequisitionNo)</td>
                <td>@Html.LabelFor(model => model.BidRefNo, Html.Translate(" Bid Ref Number"))
                <span class="required">*</span>
                </td>
                <td>@Html.EditorFor(model => model.BidRefNo)
            @Html.ValidationMessageFor(model => model.BidRefNo)</td>
            </tr>
                            <tr>    <td>
                @Html.LabelFor(model => model.CommodityTypeID, Html.Translate("Commodity Type")) <span class="required">
                                                                                                     *</span>
            </td>
                    <td>
                @(Html.Telerik().ComboBox()

           .Name("CommodityTypeID")
           .AutoFill(true)
           .BindTo((SelectList)ViewBag.CommodityTypes)
           .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
           //.ClientEvents(ev => ev.OnChange("OnComChange"))
           .HighlightFirstMatch(true).CascadeTo("CommodityID")
           //.CascadeTo("CommodityID")
           .Filterable(filtering =>
           {

               filtering.FilterMode(AutoCompleteFilterMode.Contains);

           })
           .HighlightFirstMatch(true)
           .OpenOnFocus(true)
                      )
                @Html.AuditTrial("DispatchAllocationID", "CommodityTypeID", Model.DispatchAllocationID)
                @Html.ValidationMessageFor(model => model.CommodityTypeID)
            </td>
            </tr>

        <tr>
            <td>@Html.LabelFor(model => model.CommodityID, Html.Translate("Commodity"))
                <span class="required">*</span>
            </td>
            <td>@(Html.Telerik().ComboBox().Name("CommodityID")
           .BindTo((SelectList)ViewBag.Commodities)
           .DataBinding(bind => bind.Ajax().Select("CommodityParentListByType", "Commodity", new { CommodityTypeID = Model.CommodityTypeID, editModeVal = Model.CommodityID}))
           .AutoFill(true)
           .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
           .OpenOnFocus(true)
                      )
                @Html.ValidationMessageFor(model => model.CommodityID)
            </td>
                  
            <td>@Html.LabelFor(model => model.ProgramID, Html.Translate("Program")) <span class="required">*</span>
            </td>
            <td>@(Html.Telerik().ComboBox().Name("ProgramID")
           .BindTo((SelectList)ViewBag.Programs)
           .AutoFill(true)
           .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
           .OpenOnFocus(true)
                      )
                @Html.ValidationMessageFor(model => model.ProgramID)
            </td>
        </tr>
        <tr>
                <td>@Html.LabelFor(model => model.DonorID, Html.Translate("Donor"))
                <span class="required">*</span>
                </td>
                <td>@(Html.Telerik().ComboBox().Name("DonorID")
                                    .BindTo((SelectList)ViewBag.Donors)
                    .AutoFill(true)
                            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                    .OpenOnFocus(true)
                )
            @Html.ValidationMessageFor(model => model.DonorID)
            </td>
         <td>@Html.LabelFor(model => model.Beneficiery)</td>
        
                     <td> @Html.EditorFor(model => model.Beneficiery)
                         @Html.ValidationMessageFor(model => model.Beneficiery)</td>
             </tr>
            <tr>
                <td>
                Region <span class="required">*</span>
            </td>
            <td>
                @(Html.Telerik().ComboBox()
                   .Name("SelectedRegionId")
                   .AutoFill(true)
                                   .BindTo((SelectList)ViewBag.Regions)
                   .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                   .Filterable(filtering =>
                   {
                       filtering.FilterMode(AutoCompleteFilterMode.Contains);
                   })
                    .HighlightFirstMatch(true).CascadeTo("SelectedZoneId")
                     .AutoFill(true)
                     .OpenOnFocus(true)
                      )
                @* @Html.DropDownList("SelectedRegionId", String.Empty)*@
            </td>
                <td>
                Zone <span class="required">*</span>
            </td>
            <td>@(Html.Telerik().ComboBox()
                            .Name("SelectedZoneId")
                            .AutoFill(true).
                                DataBinding(bind => bind.Ajax().Select("GetZones", "AdminUnit").Enabled(true))
                                .BindTo((SelectList)ViewBag.Zones)
                            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                            .Filterable(filtering =>
                            {
                                filtering.FilterMode(AutoCompleteFilterMode.Contains);
                            })
                            .HighlightFirstMatch(true)
                                .CascadeTo("woredaId")
                                .AutoFill(true)
                                .OpenOnFocus(true).ClientEvents(e => e.OnDataBound("function(){$('#SelectedZoneId-input').focus();}"))
                    )
            </td>
            </tr>
            <tr>
                <td style="width: 200px">
                Woreda <span class="required">*</span>
            </td>
            <td>@(Html.Telerik().ComboBox()
                            .Name("woredaId")
                            .AutoFill(true).DataBinding(bind => bind.Ajax().Select("GetWoredas", "AdminUnit").Enabled(true))
                                .BindTo((SelectList)ViewBag.Woredas)
                            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                            .Filterable(filtering =>
                            {

                                filtering.FilterMode(AutoCompleteFilterMode.Contains);

                            })
                                .HighlightFirstMatch(true).CascadeTo("FDPID")
                                .AutoFill(true)
                                .OpenOnFocus(true)
                    )
            </td>
                <td style="width: 200px">
           
            @Html.LabelFor(model => model.FDPID, Html.Translate("FDP")) <span class="required">*</span>
            </td>
            <td>@(Html.Telerik().ComboBox().Name("FDPID")
                                .AutoFill(true)
                                .BindTo((SelectList)ViewBag.FDPS)
                                .DataBinding(bind => bind.Ajax().Select("GetFDPs", "FDP"))

                            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                            .Filterable(filtering =>
                            {
                                filtering.FilterMode(AutoCompleteFilterMode.Contains);

                            })
                            .HighlightFirstMatch(true)
                    )
                @Html.ValidationMessageFor(model => model.FDPID)
            </td>
            </tr>
            <tr>
            <td>
                @if (@Html.GetCurrentUser().PreferedWeightMeasurment.ToUpperInvariant() == "QN")
                {
                    @Html.LabelFor(model => model.Amount, Html.Translate("Amount")) <span class="required">
                                                                                                *</span>
                }
                else
                {
                    @Html.LabelFor(model => model.Amount, Html.Translate("Amount"))
                <span class="required">
                *</span>
                }
                </td>
                <td> @Html.EditorFor(model => model.Amount)
                    @Html.ValidationMessageFor(model => model.Amount)
                </td>

            <td>@Html.LabelFor(model => model.Unit)
            <span class="required">*</span>
            </td>
                <td>@(Html.Telerik().ComboBox().Name("Unit")
                            .BindTo((SelectList)ViewBag.Units)
                    .AutoFill(true)
                            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                    .OpenOnFocus(true)
                    )
            @Html.ValidationMessageFor(model => model.Unit)</td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Year)</td>
                <td>@(Html.Telerik().ComboBox().Name("Year")
                    .BindTo((SelectList)ViewBag.Years)
                    .AutoFill(true)
                            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                    .OpenOnFocus(true)
                    .CascadeTo("Month")
                )
            @Html.ValidationMessageFor(model => model.Year)</td>
                <td>@Html.LabelFor(model => model.Month)</td>
                <td>@(Html.Telerik().ComboBox().Name("Month")
                            .BindTo((SelectList)ViewBag.Months)
                           .DataBinding(bind => bind.Ajax().Select("Months", "Dispatch"))
                    .AutoFill(true)
                            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                    .OpenOnFocus(true)
                    )
            @Html.ValidationMessageFor(model => model.Month)</td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Round)</td>
                <td>@Html.EditorFor(model => model.Round)
            @Html.ValidationMessageFor(model => model.Round)</td>
                
                <td style="width: 200px">@Html.LabelFor(model => model.TransporterID, Html.Translate("Transporter")) <span class="required">*</span>
            </td>
            <td>
            @(Html.Telerik().ComboBox().Name("TransporterID")
                            .BindTo((SelectList)ViewBag.Transporters)
                    .AutoFill(true)
                            .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                    .OpenOnFocus(true)
                )
                @Html.ValidationMessageFor(model => model.TransporterID)
            </td>
            </tr>

        </table>

        <p>
            <input class="t-button" type="submit" value="@Html.Translate("Create")" onclick="return submitForm(this)" />
            <input class="t-button" type="reset" value="@Html.Translate("Cancel")" onclick="return cancel()" />@*reloadGrid();*@
        </p>
}


