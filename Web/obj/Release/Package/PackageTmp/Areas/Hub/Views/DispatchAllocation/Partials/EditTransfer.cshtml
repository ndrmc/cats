@model Cats.Models.Hubs.ViewModels.Dispatch.OtherDispatchAllocationViewModel
@using Cats.Web.Hub.Helpers

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div style="padding:20px;">
@using (Html.BeginForm("SaveTransfer", "DispatchAllocation"))
    {
    @Html.HiddenFor(model => model.PartitionId)
    @Html.HiddenFor(model => model.OtherDispatchAllocationID)
    @Html.HiddenFor(model => model.FromHubID) 
    
<table width="100%" class="borderless">
    <tr>
        <td>@Html.LabelFor(model => model.AgreementDate) <span class="required">*</span></td>
        <td>@Html.EditorFor(model => model.AgreementDate)</td>
        
        <td>@Html.LabelFor(model => model.EstimatedDispatchDate) <span class="required">*</span></td>
        <td>@Html.EditorFor(model => model.EstimatedDispatchDate)</td>
        
    </tr>
    <tr>
        <td>@Html.LabelFor(model => model.ReasonID) <span class="required">*</span></td>
        <td>@Html.Telerik().ComboBox().Name("ReasonID").BindTo(new SelectList(Model.Reasons, "ID", "Name", Model.ReasonID))</td>

        <td>@Html.LabelFor(model => model.ReferenceNumber) <span class="required">*</span></td>
        <td>@Html.EditorFor(model => model.ReferenceNumber)</td>
    </tr>
    <tr>
@*         <td>@Html.LabelFor(model => model.FromHubID) <span class="required">*</span></td>
        <td>@Html.Telerik().ComboBox().Name("FromHubID").BindTo(new SelectList(Model.FromHubs, "HubID", "HubNameWithOwner", Model.FromHubID))</td>*@
        
        <td>@Html.LabelFor(model => model.ToHubID) <span class="required">*</span></td>
        <td>@Html.Telerik().ComboBox().Name("ToHubID").BindTo(new SelectList(Model.ToHubs, "HubID", "HubNameWithOwner", Model.ToHubID))</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(model => model.ProgramID) <span class="required">*</span></td>
        <td>@Html.Telerik().ComboBox().Name("ProgramID").BindTo(new SelectList(Model.Programs, "ProgramID", "Name", Model.ProgramID))</td>
        <td></td>
        <td></td>
    </tr>
    <tr>
        <td>@Html.LabelFor(model => model.ProjectCode) <span class="required">*</span></td>
        <td>@Html.EditorFor(model => model.ProjectCode)
            @Html.ValidationMessageFor(model => model.ProjectCode)
        </td>
        <td>
            @Html.LabelFor(model => model.ShippingInstruction) 
            <span class="required">*</span>
        </td>
        <td>
            @Html.EditorFor(model => model.ShippingInstruction)
            @Html.ValidationMessageFor(model => model.ShippingInstruction)
        </td>
    </tr>
    <tr>
        <td>@Html.LabelFor(model => model.CommodityID) <span class="required">*</span></td>
        <td>@Html.Telerik().ComboBox().Name("CommodityID").BindTo(new SelectList(Model.Commodities, "CommodityID", "Name", Model.CommodityID))</td>
        <td>@Html.LabelFor(model => model.UnitID) <span class="required">*</span></td>
        <td>@Html.Telerik().ComboBox().Name("UnitID").BindTo(new SelectList(Model.Units, "UnitID", "Name", Model.UnitID))</td>
    </tr>
    <tr>
         <td>@Html.LabelFor(model => model.QuantityInUnit) <span class="required">*</span></td>
        <td>@Html.TextBoxFor(model => model.QuantityInUnit)</td>
            <td>        
                @if (@Html.GetCurrentUser().PreferedWeightMeasurment.ToUpperInvariant() == "QN")
                {
                @Html.LabelFor(model => model.QuantityInMT, Html.Translate("Quantity In Quintals")) <span class="required">
                                                                                                *</span>
                }
                else
                {
                 @Html.LabelFor(model => model.QuantityInMT, Html.Translate("Quantity In MT"))
            <span class="required">
                *</span>
                }
            </td>
@*        <td>@Html.LabelFor(model => model.QuantityInMT) <span class="required">*</span></td>*@
        <td>@Html.EditorFor(model => model.QuantityInMT)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(model => model.IsClosed)</td>
        <td>@Html.CheckBoxFor(model => model.IsClosed)</td>
        <td></td>
        <td></td>
    </tr>
    <tr>
        <td colspan="4">
            &nbsp;
        </td>
    </tr>
    <tr>
        <td></td>
        <td></td>
        <td colspan="2">
            <input type="submit" value="@Html.Translate("Save")" onclick=" return $('form').valid();" class="t-button button" />
            <input type="button" value="@Html.Translate("Cancel")" class="t-button button" onclick="cancel();" />
        </td>
       
    </tr>
</table>
}
</div>