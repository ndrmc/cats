@model IEnumerable<Cats.Models.Hubs.ReceiptAllocation>
@using Cats.Web.Hub.Helpers
@{
    ViewBag.Title = Html.Translate("Receipt Allocations");
}
    
@(Html.Telerik().Grid(Model).Name("ReceiveAllocationGrid")
    .DataKeys(keys => keys.Add(d => d.ReceiptAllocationID))
    .Columns(col =>
    {

        col.Template(
        @<text>
                        
                            @if (!item.IsCommited && item.UserNotAllowedHub)
                                {
                                <text> <input onchange="totalChanged(this)" name="checkedRecords" class="checkedRecords" type="checkbox" data-ammount="@item.QuantityInMT" data-commodity="@item.CommodityID" data-hub="@item.HubID" data-SI="@item.SINumber"  value="@item.ReceiptAllocationID " title="checkedRecords" /></text>
                                }
                            else
                                {
                                if (!item.UserNotAllowedHub)
                                    {
                                    <text></text>
                                    }
                                else
                                    {
                                    <text><a href="#" onclick="editPartialForm(this)"  allocationId="@item.ReceiptAllocationID"> @Html.Translate("Commited") </a></text>
                                    }
                                }
                            
                     </text>).Title("").Width(36).HtmlAttributes(new { style = "text-align:center" });
        col.Bound(dis => dis.ReceiptAllocationID).Template(
                @<text>
                                 @if (!item.IsCommited)
                                     {
                                     if (item.UserNotAllowedHub)
                                         {
                                         <text><a href="#" onclick="editPartialForm(this)"  allocationId="@item.ReceiptAllocationID">Edit</a></text>
                                         <span>   </span>
                                        @Html.ActionLink(Html.Translate("Delete"), "Delete", new { id = item.ReceiptAllocationID })
                                         }
                                     else
                                         {
                                         <text>Html.Translate("Allocated To")</text> @item.Hub.Name<span> </span>@item.Hub.HubOwner.Name
                                         }
                                     }
                                 else
                                     {
                                     @item.Hub.Name<span> </span>@item.Hub.HubOwner.Name
                                     }                                 
                            </text>).Title(Html.Translate("Allocation"));
        col.Bound(dis => dis.Commodity.Name).Title(Html.Translate("Commodity"));
        col.Bound(dis => dis.SINumber).Title(Html.Translate("SINumber"));
        col.Bound(dis => dis.Donor.Name).Title(Html.Translate("Donor"));
        col.Template(@<text>
                        @item.Hub.Name<span> : </span>@item.Hub.HubOwner.Name
                        </text>).Title(Html.Translate("Hub"));
                    col.Bound(dis => dis.QuantityInMT).Title(Html.Translate("Allocated"));
                    col.Bound(dis => dis.ProjectNumber).Title(Html.Translate("Project Code"));
                    col.Bound(dis => dis.ETA).Format("{0:dd/MM/yyyy}");
            
                }).Footer(false)
    )
<br /><input id="commit-btn" class="t-button" type="submit" value="@Html.Translate("Commit")" onclick="return onCommitClick();" />
@**@
<script type="text/javascript">
    function totalChanged(item) {
        return false;
    }
</script>