@using Cats.Helpers
@using Cats.Security
@using Kendo.Mvc.UI
@using Cats.Services.Security
@using LanguageHelpers.Localization
@model List<Cats.Models.HRD>

    @{
        ViewBag.Title = "Create";
        Layout = "~/Views/Shared/_CATSLayout.cshtml";
    }

    @section Title
{
        Plans
    }

    @section PageTitle
{
        <h1 class="hdr-blck big ">
            @Html.Translate("Old HRD List")
        </h1>
    }

    <div class="row">
        @Html.Partial("_HRDLeftBar")
        <div class="col-md-10  col-sm-9">
            <div class=" box box-primary ">
                <div class="box-body row">
                    <div class="text-right col-md-12">
                        @Html.EarlyWarningOperationButton(
                        @Url.Action("Create", "HRD", new { Area = "EarlyWarning" }),
                        EarlyWarningConstants.Operation.New_HRD, "<button type=\"button\" class=\"btn btn-success\"><span class=\"fa fa-plus\"></span> New HRD</button>", "btn", "btn_new_record")
                    </div>
                    <div class="col-md-12">
                        <div class="table-responsive">

                            @(Html.Kendo().Grid<Cats.Models.ViewModels.HRD.HRDViewModel>()
    .Name("grid")
    .Columns(columns =>
    {

        columns.Bound(p => p.Plan).Title(Html.Translate("HRD Name")).ClientTemplate(
                            @Html.EarlyWarningOperationButton(
                                @Url.Action("Detail", "HRD", new { id = "#=HRDID#" }),
                                EarlyWarningConstants.Operation.New_HRD, "#=Plan#").ToString());
        columns.Bound(p => p.Ration).Title("Ration No");
        columns.Bound(p => p.StartDate).HeaderHtmlAttributes(new { @class = "cats-date-pref-grid" });
        columns.Bound(p => p.EndDate).HeaderHtmlAttributes(new { @class = "cats-date-pref-grid" });
        columns.Bound(p => p.CreatedBy);
        columns.Bound(p => p.CreatedDatePref).HeaderHtmlAttributes(new { @class = "cats-date-pref-grid" }).Width(120);

        columns.Bound(p => p.Status);

        //columns.Command(p =>
        //{
        //    p.Custom("Edit").Click("hrdEdit").Text("<span class=\"fa fa-pencil-square-o\"></span> Edit ");
        //    p.Custom("Publish").Click("publishHRD").Text("<span class=\"fa fa-check\"></span> Publish ");
        //    p.Custom("Summary").Click("showSummary").Text("<span class=\"fa fa-list\"></span> Summary ");

        //}
        //);

    })
    .Scrollable()
    .Sortable()
     .Pageable()
      .Events(e => e.DataBound("onDataBound"))
    .DataSource(dataSource => dataSource
          .Ajax()
            .Model(model => model.Id(p => p.HRDID))
            .Read(read => read.Action("OldHRD_Read", "HRD"))

     )

                            )

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>



    <script>
    function onDataBound(e) {

        $(".table-responsive .k-button").removeClass("k-button").addClass("btn btn-xs mrgn3-b col-md-11");
        $(".k-grid-Edit").addClass("btn-warning");
        $(".k-grid-Publish").addClass("btn-success");
        $(".k-grid-Summary").addClass("btn-primary");
    }

    function showSummary(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "@Url.Action("RegionalSummary", "HRD")" + "/" + dataItem.HRDID;
    }


    function hrdEdit(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "@Url.Action("Edit", "HRD")" + "/" + dataItem.HRDID;
    }

    function publishHRD(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "@Url.Action("PublishHRD", "HRD")" + "/" + dataItem.HRDID;
    }
    </script>

    <script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {da
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    </script>
