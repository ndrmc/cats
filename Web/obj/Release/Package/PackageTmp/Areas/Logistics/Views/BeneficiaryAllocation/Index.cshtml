@using Cats.Models.ViewModels
@using Kendo.Mvc.UI
@using Cats.Helpers

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h4>@Html.Translate("Beneficiary Allocation")</h4>


@section LeftBar
{
   
}

@*@using (Html.BeginForm())
    {
        <div class="control-group">
            <label class="control-label">Region</label>
            <div class="controls">
                @Html.DropDownList("RegionID", String.Empty)
            </div>
        </div>

        <div class="control-group">
            <label class="control-label">Zone</label>
            <div class="controls">
                 <select id="FilterZone" name="FilterZone"></select>
             
            </div>
        </div>
        <div class="control-group">
            <label class="control-label">Requisition</label>
            <div class="controls">
                @Html.DropDownList("RequisitionID", String.Empty)
            </div>
        </div>

        <div class="control-group">
            <div class="controls">
                <input type="submit" value="Filter" class="btn btn-primary" />
            </div>
        </div> 
    }*@

@(Html.Kendo().Grid<BeneficiaryAllocation>()
      .Name("grid")
      .DataSource(dataSource => dataSource 
                                    .Ajax() 
                                    .Read(read => read.Action("BeneficiaryAllocations_Read", "BeneficiaryAllocation")) 
      )
      .Columns(columns =>
                   {
                       columns.Bound(allocation => allocation.Commodity);
                       columns.Bound(allocation => allocation.RequisitionNo);
                       columns.Bound(allocation => allocation.Donor);
                       columns.Bound(allocation => allocation.BeneficiaryNo);
                       columns.Bound(allocation => allocation.Amount);
                       columns.Bound(allocation => allocation.Region);
                       columns.Bound(allocation => allocation.Zone);
                       columns.Bound(allocation => allocation.Woreda);
                       columns.Bound(allocation => allocation.FDP);
                       
                   })
      .Pageable() 
      .Sortable()
      .ToolBar(t=>t.Template(  @<text>

  <a  class="btn-small" target="_blank" href="@Url.Action("Print", "BeneficiaryAllocation", new { Area = "Logistics"})"><i class="icon-print"></i></a>
</text>)))
      

@*<table class="table table-condensed table-bordered table-striped">

    <tr>

        <th>
            @Html.DisplayNameFor(model => model.Commodity)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.RequisitionNo)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Donor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BeneficiaryNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Region)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Zone)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Woreda)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.FDP)
        </th>


        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.Commodity)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.RequisitionNo)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Donor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BeneficiaryNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Region)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Zone)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Woreda)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.FDP)
            </td>



        </tr>
    }

</table>*@


@*@Scripts.Render("~/bundles/jquery")
<script type="text/jscript">
    $(function () {
        $('#RegionID').change(function () {
            $.getJSON('/Logistics/BeneficiaryAllocation/ZonesList/' + $('#RegionID').val(), function (data) {
                var items = '<option>Select a Zone</option>';
                $.each(data, function (i, zone) {
                    items += "<option value='" + zone.Value + "'>" + zone.Text + "</option>";
                });
                $('#FilterZone').html(items);
            });
        });
    });
</script>*@