@using Cats.Areas.Logistics.Models
@using Kendo.Mvc.UI
@using Cats.Helpers

@model Cats.Areas.Logistics.Models.LocalPurchaseWithDetailViewModel
@{
    ViewBag.Title = Html.Translate("Create");
    //Layout = "~/Views/Shared/_MainLayout.cshtml";
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";
    ViewBag.PageTitle = Html.Translate("Create new Receipt Plan from Local Purchase");
    ViewBag.PageTitleDescription = "";
    
}
@*@section Toolbar
{
    <a class="btn toolbar-btn " data-buttontype="btn_save" data-submittedform="frm_create_localPurchase" title="Save"></a>
    <a class="btn toolbar-btn " data-buttontype="btn_cancel" href="@Url.Action("Index", "LocalPurchase")" title="Cancel"></a>
}*@
@*<h4>@Html.Translate("Receipt Plan From Local Purchase") </h4>*@

@using (Html.BeginForm("Create", "LocalPurchase", FormMethod.Post, new { id = "frm_create_localPurchase" }))
{
    <div class="portlet light bordered bg-inverse">
        <div class="portlet-title">
            <div class="caption font-green-sharp">
                <i class="fa fa-list font-green-sharp"></i>
                <span class="caption-subject bold uppercase"> @Html.Translate("Header")</span>
                <span class="caption-helper">  </span>
            </div>
            <div class="tools">
                <a href="#" class="collapse" data-original-title="" title=""></a>
                @*<a href="javascript:;" class="remove" data-original-title="" title=""></a>*@
            </div>
            <div class="actions">
                <a class="btn green btn-xs toolbar-btn " data-buttontype="btn_save" data-submittedform="frm_create_localPurchase"><i class="fa fa-save"></i> @Html.Translate("Save Changes")</a>
                @*<a class="btn red btn-xs toolbar-btn " data-buttontype="btn_cancel" href="@Url.Action("Index", "LocalPurchase")"><i class="fa fa-times"></i> @Html.Translate("Cancel Changes")</a>*@
                
            </div>
        </div>
        <div class="portlet-body">
            <div class="form-horizontal well">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("SI Number"))
                            </div>
                            <div class="col-sm-7">
                                @(Html.Kendo().AutoComplete()
                                      .Name("SINumber")
                                      .HtmlAttributes(new {style = "width:215px;", @class = "form-control"})
                                      .Filter("startswith")
                                      .Placeholder(@Html.Translate("Enter or Select SINumber..."))
                                      .DataSource(source => source.Read(read => read.Action("AutoCompleteSiNumber", "LocalPurchase").Data("onAdditionalData")).ServerFiltering(true))
         
                                      )
                                 <input type="button" class="btn green" style="float: left"  onclick="return getNewSINo()" name="new si" value="New SI" id="btnNewSINo"/>
                            </div>
                             
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("Commodity Type"))
                            </div>
                            <div class="col-sm-7">
                                @Html.DropDownList("CommodityTypeID", null,new{@class="form-control"})
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("Commodity Source"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.CommoditySource, new { Disabled = true, @class = "form-control" })
                            </div>

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.ParentCommodityID, @Html.Translate("Parent Commodity"))
                            </div>

                            <div class="col-sm-7">
                                <select id="ParentCommodityID" class="form-control" name="ParentCommodityID"></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("Project Code"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.ProjectCode, String.Empty, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.CommodityID, @Html.Translate("Commodity"))
                            </div>
                            <div class="col-sm-7">
                                <select id="CommodityID" class="form-control" name="CommodityID"></select>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">

                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("Supplier Name"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.SupplierName, String.Empty, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">

                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("Program"))
                            </div>
                            <div class="col-sm-7">
                                @Html.DropDownList("ProgramID", null, new { @class = "form-control" })
                            </div>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("PurchaseOrder"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.PurchaseOrder, String.Empty , new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("Donor"))
                            </div>
                            <div class="col-sm-7">
                                @Html.DropDownList("DonorID", null, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("Reference Number"))
                            </div>
                            <div class="col-sm-7" style="height: 10px">
                                @Html.TextBoxFor(m => m.ReferenceNumber, String.Empty, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-sm-5 control-label">
                                @Html.Label(Html.Translate("Quantity in MT"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.Quantity, String.Empty, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption font-green-sharp">
                <i class="fa fa-list font-green-sharp"></i>
                <span class="caption-subject bold uppercase"> @Html.Translate("Detail")</span>
                <span class="caption-helper">  </span>
            </div>
            @*<div class="tools">
                    <a href="#" class="collapse" data-original-title="" title=""></a>
                    <a href="javascript:;" class="remove" data-original-title="" title=""></a>
                </div>*@
            <div class="actions">
                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
            </div>
        </div>
        <div class="portlet-body">
            <div class="table-responsive">

                @(Html.Kendo().Grid(Model.LocalPurchaseDetailViewModels)
                      .Name("LocalPurchaseDetail")
                      .Columns(columns =>
                      {
                          columns.Bound(m => m.HubID).Hidden(true).ClientTemplate("#= HubID #" +
                                                                                  "<input type='hidden' name='LocalPurchaseDetailViewModels[#= index(data)#].HubID' value='#= HubID #' />");
                          columns.Bound(m => m.HubName).Title(Html.Translate("Hub")).ClientTemplate("#= HubName #" +
                                                                                                    "<input type='hidden' name='LocalPurchaseDetailViewModels[#= index(data)#].HubName' value='#= HubName #' />");
                          columns.Bound(m => m.AllocatedAmonut).Width(200).Title(Html.Translate("Allocated Amonut")).HtmlAttributes(new {align = "right"})
                              .ClientTemplate("#= AllocatedAmonut #" +
                                              "<input type='hidden' name='LocalPurchaseDetailViewModels[#= index(data)#].AllocatedAmonut' value='#= AllocatedAmonut #' />");
                          columns.Bound(m => m.RecievedAmonut).Width(200).Title(Html.Translate("Recieved Amount")).HtmlAttributes(new {align = "right"})
                              .ClientTemplate("#= RecievedAmonut #" +
                                              "<input type='hidden' name='LocalPurchaseDetailViewModels[#= index(data)#].RecievedAmonut' value='#= RecievedAmonut #' />");
                          columns.Bound(m => m.RemainingAmonut).Width(200).Title(Html.Translate("Remaining Amonut")).HtmlAttributes(new {align = "right"});

                      }

                      )

                      .Editable(edit => edit.Mode(GridEditMode.InCell))
                      .Navigatable()
                      .TableHtmlAttributes(new {@class = "table table-condensed"})
                      .DataSource(dataSource => dataSource
                          .Ajax()
                          .Model(model =>
                          {
                              model.Id(p => p.LocalPurchaseDetailID);
                              model.Field(p => p.HubName).Editable(false);
                              model.Field(p => p.HubID).Editable(false);
                              model.Field(p => p.RecievedAmonut).Editable(false);
                          })

                          .Read(read => read.Action("HubsLocalPurchaseDetail_Read", "LocalPurchase", new {localPurchaseID = Model.LocalPurchaseID}))
                      //.Update(update => update.Action("Commodity_Update", "Request"))
                      )
                      )
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    
    function getNewSINo(data) {

        $.ajax({
            async: false,
            type: "POST",
            url: "@Url.Action("GetMaxSINo", "LocalPurchase")",



            success: function (returnValue) {
                var SiNumber = document.getElementById("SINumber");
                SiNumber.value = returnValue;
                SiNumber.readOnly = true;
                return returnValue;
            },
            error: function (request, error) {

                //return data.LossReasonId;
                alert('An error occurred attempting to get new e-number');

            }
        });
    }
    
    function onAdditionalData(e) {
      
        return {
            term: $("#SINumber").val()
           
        };
    }
    function index(dataItem) {
        var data = $("#LocalPurchaseDetail").data("kendoGrid").dataSource.data();

        return data.indexOf(dataItem);
    }
   
    $(document).ready(function () {
 
        $.getJSON('@Url.Action("JsonParentCommodities","Transfer")', { commodityTypeID: 1, editModval: '@Model.CommodityID' }, function (result) {
            //for (var i = 0; i < 2; i++)
            //    alert(result[i].Text);
            if (result != "" && result != null) {
                //$('#StoreID').data('tComboBox').value(result[0]);
                var options = '<option value="">@Html.Translate("-- Select a Parent Commodity")</option>';
                for (var i = 0; i < result.length; i++) {
                    options += '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                }
                $("#ParentCommodityID").html(options);

            }
        });
        $('#CommodityTypeID').change(function () {
            var url = '@Url.Action("JsonParentCommodities","Transfer")';
            $.getJSON(url, { commodityTypeID: $('#CommodityTypeID').val(), editModval: '@Model.CommodityID' }, function (result) {
                //for (var i = 0; i < 2; i++)
                //    alert(result[i].Text);
                if (result != "" && result != null) {
                    //$('#StoreID').data('tComboBox').value(result[0]);
                    var options = '<option value="">@Html.Translate("-- Select a Parent Commodity")</option>';
                    for (var i = 0; i < result.length; i++) {
                        options += '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    }
                    $("#ParentCommodityID").html(options);

                }
            });
            $("#CommodityID").html('');
        });
        $('#ParentCommodityID').change(function () {
            var url = '@Url.Action("JsonCommodities","Transfer")';
            $.getJSON(url, { parentCommodityID: $('#ParentCommodityID').val(), editModval: '@Model.ParentCommodityID' }, function (result) {
                //for (var i = 0; i < 2; i++)
                //    alert(result[i].Text);
                if (result != "" && result != null) {
                    //$('#StoreID').data('tComboBox').value(result[0]);
                    var options = '<option value="">@Html.Translate("-- Select a Commodity")</option>';
                    for (var i = 0; i < result.length; i++) {
                        options += '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    }
                    $("#CommodityID").html(options);

                }
            });
        });

    });
</script>