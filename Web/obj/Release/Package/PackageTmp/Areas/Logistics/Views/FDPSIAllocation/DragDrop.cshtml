@using Cats.Services.Security
@using Cats.Helpers;

@{
    ViewBag.Title = "Hub Allocated Requesitions";
    Layout = "~/Views/Shared/_MainLayout.cshtml";

   
}

@section LeftBar
{
    @Html.Partial("_AllocationLeftBar")
<div id="debug2"></div>
}
@section Toolbar
{

    <a class="btn toolbar-btn desabled" data-buttontype="btn_save" id="btn_save_submitform" href="javascript:submitform()"></a>
    <a class="btn toolbar-btn " data-buttontype="btn_cancel" href="javascript:reloadPage()"></a>
    <a class="btn toolbar-btn " data-buttontype="btn_back_to_list" href="@Url.Action("Index", "DispatchAllocation", new { Area = "Logistics" })"></a>
}

<fieldset>
    <legend>@Html.Translate("SI/ProjectCode Allocation")</legend>
   
</fieldset>

<script src="~/Scripts/angular/angular-dragdrop.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery-ui.min.js"> </script>
<div id="debug" style="display:none;">deb</div>

<style>
    #accordion_zone  .in
    {
        
        overflow:visible;
    }
    #accordion_zone  .ui-draggable-disabled
    {
        opacity:0.75;
        
    }
     #accordion_zone  .ui-draggable-disabled .icon-move
    {
         visibility:hidden;
    }
    [ng-app] .PC, [ng-app] .SI
    {
        margin-top:5px;
        border:solid 1px #CCC;
        border-radius:4px;
    }
    [ng-app] .SI
    {
        background:#ffffd8;
    }
</style>
<div ng-app="drag-and-drop">

    <div ng-controller="oneCtrl">
        <div>

            <div style="borders: solid 1px #00a;" class="span4">


                 <div style="height:30px;" data-drop="true" ng-model='list1' data-jqyoui-options="optionsList2" jqyoui-droppable="{multiple:true}"">
                        <b>Requisitions</b>
                </div>
                <br />
               
                <!--  -->
                <div class="accordion" id="accordion_zone" >
                    <div class="accordion-group" id="accordion_zone{{$index}}" data-index="{{zone.id}}" ng-repeat="zone in requests" class="btn-draggable" ng-model="unallocated" data-drag="zone.allocatedAmount<zone.requestedAmount" 
                    data-jqyoui-options="{revert: 'invalid'}" jqyoui-draggable="{index: {{zone.id}},placeholder:'keep',animate:true, onStart:'startCallback(zone, $index)', onStop: 'stopCallback', onDrag: 'dragCallback'}" >

                      <div class="dd-handle accordion-heading">
                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion_zone" href="#collapse_zone{{zone.zoneId}}">
                           <i class="icon-move icon-align-right"></i> <span>{{zone.name}} [{{zone.allocatedAmount}} of {{zone.requestedAmount}}]</span>
                        </a>
                      </div>
                      <div id="collapse_zone{{zone.zoneId}}" class="accordion-body dd-list collapse">
                        <div class="accordion-inner">
                            <div class="accordion" id="woredas_inzone{{zone.zoneId}}">
                                <div class="accordion-group" data-index="{{woreda.id}}" ng-repeat="woreda in zone.woredas" class="list-woreda btn-draggable" ng-model="unallocated" data-drag="woreda.allocatedAmount<woreda.requestedAmount" 
                        data-jqyoui-options="{revert: 'invalid'}" jqyoui-draggable="{index: {{woreda.index}},placeholder:'keep',animate:true, onStart:'startCallback(woreda, $index)', onStop: 'stopCallback', onDrag: 'dragCallback'}">
                                  <div class="accordion-heading">
                                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#woredas_inzone{{zone.zoneId}}" href="#collapse_woreda{{woreda.woredaId}}">
                                      <i class="icon-move"></i> {{woreda.name}} [{{woreda.allocatedAmount}} of {{woreda.requestedAmount}}]
                                    </a>
                                  </div>
                                  <div id="collapse_woreda{{woreda.woredaId}}" class="accordion-body collapse" style="height: 0px;">
                                    <div class="accordion-inner">
                                                                <div class="list-fdp" ng-repeat="fdp in woreda.fdps">
                            <div data-allocated="0" data-index="{{fdp.index}}" class="admin-list btn-draggable" ng-model="unallocated" data-drag="fdp.allocatedAmount<fdp.requestedAmount" data-jqyoui-options="{revert: 'invalid'}"  
                                jqyoui-draggable="{index: {{fdp.id}},placeholder:'keep',animate:true, onStart:'startCallback(fdp, $index)', onStop: 'stopCallback', onDrag: 'dragCallback'}"
                                 >
                                <i class="icon-move"></i> {{fdp.name}} [{{fdp.allocatedAmount}} of {{fdp.requestedAmount}}]
                            </div>

                        </div>
                                    </div>
                                  </div>
                                </div>
                            </div>
                        </div>
                      </div>
                    </div>
                
              </div>
                <!--
                <div data-index="{{zone.id}}" ng-repeat="zone in requests" class="list-zone btn-draggable" ng-model="unallocated" data-drag="1" 
                    data-jqyoui-options="{revert: 'invalid'}" jqyoui-draggable="{index: {{zone.id}},placeholder:'keep',animate:true, onStart:'startCallback(zone, $index)', onStop: 'stopCallback', onDrag: 'dragCallback'}" ng-hide="zone.allocated">
                   
                     <div class="admin-list">{{zone.name}} [{{zone.requestedAmount}}]</div>
                    
                    <div data-index="{{woreda.id}}" ng-repeat="woreda in zone.woredas" class="list-woreda btn-draggable" ng-model="unallocated" data-drag="1" 
                        data-jqyoui-options="{revert: 'invalid'}" jqyoui-draggable="{index: {{woreda.index}},placeholder:'keep',animate:true, onStart:'startCallback(woreda, $index)', onStop: 'stopCallback', onDrag: 'dragCallback'}" ng-hide="woreda.allocated">
                        <div class="admin-list">
                            {{woreda.name}} [{{woreda.requestedAmount}}]

                        </div>
                        <div class="list-fdp" ng-repeat="fdp in woreda.fdps">
                            <div data-allocated="0" data-index="{{fdp.index}}" class="admin-list btn-draggable" ng-model="unallocated" data-drag="1" data-jqyoui-options="{revert: 'invalid'}" 
                                jqyoui-draggable="{index: {{fdp.id}},placeholder:'keep',animate:true, onStart:'startCallback(fdp, $index)', onStop: 'stopCallback', onDrag: 'dragCallback'}"
                                 ng-hide="fdp.allocated">
                                {{fdp.name}} [{{fdp.requestedAmount}}]
                            </div>

                        </div>
                    </div>
                </div>
                -->
            </div>
            <div class="span4" ng-repeat="si in SIPCCodes">
            <div style="padding:5px;" class="{{si.type}}" >  
                 
                <div>{{si.name}} [{{si.availableAmount}}]</div>
            <div  style="border: solid 1px #CCC; height: 100px;" data-drop="true" ng-model='list1' id="SIPC{{si.index}}"  data-index="{{si.index}}"  data-jqyoui-options="optionsList1" jqyoui-droppable="{multiple:true,onDrop:dropCallback,onDrop:'dropCallback',onOver: 'overCallback', onOut: 'outCallback'}">
                <ul class="nav nav-list ">
                    <li class="btn-draggable" data-allocated="1" ng-repeat="item in si.allocatedRequests" data-drag="1" data-jqyoui-options="{revert: 'invalid'}" ng-model="list1" jqyoui-draggable="{index: {{$index}},animate:true}" data-index="{{item.index}}" >
                        <a href="#dropdowns" ng-show="si.index==item.allocated">{{item.name}} [{{item.allocatedAmount}}]</a></li>
                </ul>

            </div>
                </div> 

   
            </div>

        </div>

    </div>
</div>

<script type="text/javascript">

    var App = angular.module('drag-and-drop', ['ngDragDrop']);

    App.controller('oneCtrl', function ($scope, $timeout) {
        $scope.list1 = [];
        $scope.list2 = [];
        $scope.list3 = [];
        $scope.list4 = [];
        $scope.unallocated = [];
        $scope.allocations = { "si001": [], "si002": [] };
        $scope.list5 = [
          
        ];
        $scope.fdps = [];
        $scope.allAdminRegions = [];
        $scope.SIPCCodes = [
           { codeId: 1, name: "SI-1001", availableAmount: 300, type: "SI", allocatedRequests: [], index: 1 },
           { codeId: 2, name: "SI-1002", availableAmount: 120, type: "SI", allocatedRequests: [], index: 2 },
           { codeId: 3, name: "PC-1001", availableAmount: 160, type: "PC", allocatedRequests: [], index: 3 }
        ]
        $scope.requests = [
                {
                    name: "Zone1", type: "zone", zoneId: 1, requestedAmount: 200,
                    woredas:
                     [
                         {
                             name: "Worda 1", type:"woreda", woredaId: 1, requestedAmount: 100,
                             fdps:
                                 [
                                     { name: "FDP11", requestedAmount: 20 }
                                     , { name: "FDP12", requestedAmount: 38 }
                                     , { name: "FDP13", requestedAmount: 50 }
                                 ]
                         }
                     , {
                         name: "Worda 2", type: "woreda", woredaId: 2, requestedAmount: 100,
                         fdps:
                         [
                             { name: "FDP21", requestedAmount: 20 }
                             , { name: "FDP22", requestedAmount: 30 }
                             , { name: "FDP23", requestedAmount: 50 }
                         ]
                     }

                     ]
                }
                , {
                    name: "Zone2", zoneId: 2, type: "zone", requestedAmount: 100,
                    woredas:
                    [
                        {
                            name: "Worda 2", type: "woreda", woredaId: 3, requestedAmount: 100,
                            fdps:
                                [
                                    { name: "FDP11", requestedAmount: 20 }
                                    , { name: "FDP12", requestedAmount: 32 }
                                    , { name: "FDP13", requestedAmount: 50 }
                                ]
                        }
                    ]
                }
        ];
        $scope.initUi = function () {
            var i = 0;
            
            for (var z in $scope.requests) {
                $scope.addItemToList($scope.requests[z]);
                for (var w in $scope.requests[z].woredas) {
                    var woreda = $scope.requests[z].woredas[w];
                    $scope.addItemToList(woreda);
                    for (var f in woreda.fdps) {
                        $scope.addItemToList(woreda.fdps[f]);
                        woreda.fdps[f].allocatedAmount = 0;
                    }
                }
            }
            $scope.calculateAllocated();
        };
        $scope.addItemToList = function (item) {
            item.id = $scope.unallocated.length;
            item.index = $scope.unallocated.length;
            
            $scope.unallocated.push(item);
            $scope.allAdminRegions.push(item);
            item.allocated = 0;
        };
        $scope.calculateAllocated = function () {
            for (var z in $scope.requests) {
                $scope.requests[z].allocatedAmount = 0;
                $scope.requests[z].requestedAmount = 0;
                
                for (var w in $scope.requests[z].woredas) {
                    var woreda = $scope.requests[z].woredas[w];
                    woreda.allocatedAmount = 0;
                    woreda.requestedAmount = 0;
                    for (var f in woreda.fdps) {
                        woreda.allocatedAmount += woreda.fdps[f].allocatedAmount;
                        woreda.requestedAmount += woreda.fdps[f].requestedAmount;
                    }
                    $scope.requests[z].allocatedAmount += woreda.allocatedAmount;
                    $scope.requests[z].requestedAmount += woreda.requestedAmount;
                }
            }
        }
        $scope.refreshList = function () {
            for (var i in $scope.fdps) {
                $scope.fdps[i].index = i;

            }
        };
       
        $scope.initUi();


        $scope.startCallback = function (event, ui, item) {
            console.log('You started draggin: ' + item.name);
            $scope.draggedItem = item;
            if (item.requestedAmount > 30) {
                $("#si002").css("visibility", "hidden");
            }
            else {
                $("#si002").css("visibility", "visible");
            }
        };

        $scope.stopCallback = function (event, ui) {
            console.log('Why did you stop draggin me?');
            $("#si002").css("visibility", "visible");
        };

        $scope.dragCallback = function (event, ui) {
            // console.log('hey, look I`m flying');
        };
        $scope.assigneAllocation = function (requestIndex, siIndex, amount) {
            var location = $scope.allAdminRegions[requestIndex];
            amount = location.requestedAmount - location.allocatedAmount;
            
            $scope.allAdminRegions[requestIndex].allocated = siIndex+1;
            $scope.allAdminRegions[requestIndex].allocatedAmount = amount;
            $scope.SIPCCodes[siIndex].availableAmount -= amount;
            $scope.SIPCCodes[siIndex].allocatedRequests.push($scope.allAdminRegions[requestIndex]);

  
                $scope.allocateAdminRegion(location);
           

            $scope.calculateAllocated();
        }
        $scope.allocateAdminRegion = function (location) {
            if (location.type == "zone") {
                for (var w in location.woredas) {
                    $scope.allocateAdminRegion(location.woredas[w]);
                }
            }
            if (location.type == "woreda") {
                for (var f in location.fdps) {
                    var fdp = location.fdps[f];
                    if (!fdp.allocatedAmount) {
                        fdp.allocatedAmount = fdp.requestedAmount;
                    }

                }
            }
        }
        $scope.dropCallback = function (event, ui) {
            var requestIndex = $scope.draggedItem.index;
            var siIndex = $(event.target).data("index") / 1 -1;
            $scope.assigneAllocation(requestIndex, siIndex);
            //$scope.allAdminRegions[requestIndex].allocated = $(event.target).data("index") / 1;

            $scope.refreshList();
            var target = $(event.target).data("id");
            console.log('hey, you dumped on ' + target + ' :-(', event);
        };
        $scope.overCallback = function (event, ui) {
            console.log('Look, I`m over you');
        };

        $scope.outCallback = function (event, ui) {
            console.log('I`m not, hehe');
        };
        $scope.on_drop_on_allocation = function (item) {
            $("#debug2").html("droped");
            if (item) {

                $("#debug2").html(item);
                //item.allocated = 1;
            }
        };
        $scope.optionsList1 = {
            accept: function (dragEl) {
                if (dragEl.data("allocated")) {
                    return false;
                }
                return true;
            }
        };

        // Limit items to be dropped in list1
        $scope.optionsList2 = {
            accept: function (dragEl) {
                $("#debug").html("Reset " + dragEl.data("allocated"));
                return false;
                var ret = false;
                if (dragEl.data("index") && $scope.allAdminRegions[dragEl.data("index")].allocated) {
                    var msg = $("#debug").html();

                    $("#debug").html(msg + " --- back " + dragEl.data("index"));
                    $scope.allAdminRegions[dragEl.data("index")].allocated = 0;
                    $scope.refreshList();
                    ret = true;
                }
                return ret;


            }
        };
    });

</script>


<style>
    .list-zone
    {
        padding-left: 0px;
        font-size: 14px;
    }

    .list-woreda
    {
        padding-left: 20px;
    }

    .list-fdp
    {
        padding-left: 40px;
    }

    .admin-list
    {
        line-height: 30px;
        padding-left: 5px;
    }

        .admin-list:hover
        {
            background: #EEE;
        }
</style>
