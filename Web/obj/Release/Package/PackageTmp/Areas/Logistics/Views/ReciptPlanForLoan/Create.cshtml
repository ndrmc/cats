@using LanguageHelpers.Localization
@using Cats.Helpers
@model Cats.Areas.Logistics.Models.LoanReciptPlanViewModel
@{
    ViewBag.Title = "Create";
    const string PAGE_NAME = "Logistics.ReciptPlanForLoanAndOthers.Create";
}

<div class="modal-dialog">
    <div class="modal-content">


        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 id="myModalLabel">@Html.Translate("New Receipt Plan from Loan")</h4>
        </div>

        @using (Html.BeginForm("Create", "ReciptPlanForLoan", FormMethod.Post, new { @class = "modal-form", id = "myForm1" }))
        {
            @Html.ValidationSummary(true)
            <div class="modal-body form-horizontal">
                <div class="row">
                    <div class="col-sm-6 form-group">
                        <div class="control-label col-sm-5">
                            @Html.LabelFor(m => m.SiNumber, @Html.Translate("SI Number"))
                        </div>
                        <div class="col-sm-7">
                            @Html.TextBoxFor(m => m.SiNumber, String.Empty, new { @class = "form-control" })
                            <input type="button" class="btn green" style="float: left"  onclick="return getNewSINo()" name="new si" value="New SI" id="btnNewSINo"/>
                            <span class="help-block">@Html.ValidationMessageFor(m => m.SiNumber)</span>
                        </div>
                    </div>

                    <div class="col-sm-6 form-group">
                        <div class="control-label col-sm-5">
                            @Html.LabelFor(m => m.CommodityID, @Html.Translate("Commodity Type"))
                        </div>
                        <div class="col-sm-7">
                            @Html.DropDownList("CommodityTypeID", null, new { @class = "form-control" })
                            <span class="help-block">@Html.ValidationMessageFor(m => m.CommodityID)</span>
                        </div>

                    </div>
                    @* <td style="width: 40%">
                            <div class="control-label col-sm-5">
                                @Html.LabelFor(m=>m.HubID,@Html.Translate("Hub"))
                            </div>
                            <div class="col-sm-7">
                                @Html.DropDownList("HubID")
                                @Html.ValidationMessageFor(m=>m.HubID)
                            </div>
                        </td>*@
                </div>
                <div class="row">
                   
                        
                           
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.Label(@Html.Translate("Donor"))
                            </div>
                            <div class="col-sm-7">
                                @Html.DropDownList("LoanSource", null, new { @class = "form-control" })
                                <span class="help-block"></span>@Html.ValidationMessageFor(m => m.LoanSource)
                            </div>
                               
                        </div>

                    
                    <div class="col-sm-6 form-group">
                        <div class="control-label col-sm-5">
                            @Html.LabelFor(m => m.ParentCommodityID, @Html.Translate("Parent Commodity"))
                        </div>
                        <div class="col-sm-7">
                            <select id="ParentCommodityID" name="ParentCommodityID" class="form-control"></select>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-6 form-group">
                        <div class="control-label col-sm-5">
                            @Html.LabelFor(m => m.ProgramID, @Html.Translate("Program"))
                        </div>
                        <div class="col-sm-7">
                            @Html.DropDownList("ProgramID", null, new { @class = "form-control" })
                            <span class="help-block"></span>@Html.ValidationMessageFor(m => m.ProgramID)
                        </div>
                    </div>
                    <div class="col-sm-6 form-group">
                        <div class="control-label col-sm-5">
                            @Html.LabelFor(m => m.CommodityID, @Html.Translate("Commodity"))
                        </div>
                        <div class="col-sm-7">
                            <select id="CommodityID" name="CommodityID" class="form-control"></select>

                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-6 form-group">
                        <div class="control-label col-sm-5">
                            @Html.LabelFor(m => m.CommoditySourceID, @Html.Translate("Commodity Source"))
                        </div>
                        <div class="col-sm-7">
                            @Html.TextBoxFor(m => m.CommoditySourceName, new { Disabled = true, @class="form-control" })
                            <span class="help-block">@Html.ValidationMessageFor(m => m.CommoditySourceID)</span>
                        </div>
                    </div>
                    <div class="col-sm-6 form-group">
                        <div class="control-label col-sm-5">
                            @Html.LabelFor(m => m.RefeenceNumber, @Html.Translate("Reference Number"))
                        </div>
                        <div class="col-sm-7">
                            @Html.TextBoxFor(m => m.RefeenceNumber, String.Empty, new { @class = "form-control" })
                            <span class="help-block">@Html.ValidationMessageFor(m => m.RefeenceNumber)</span>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-6 form-group">
                        <div class="control-label col-sm-5">
                            @Html.LabelFor(m => m.ProjectCode, @Html.Translate("Project Code"))
                        </div>
                        <div class="col-sm-7">
                            @Html.TextBoxFor(m => m.ProjectCode, String.Empty, new { @class = "form-control" })
                            <span class="help-block">@Html.ValidationMessageFor(m => m.ProjectCode)</span>
                        </div>

                    </div>
                    <div class="col-sm-6 form-group">
                        <div class="control-label col-sm-5">
                            @Html.LabelFor(m => m.Quantity, @Html.Translate("Quantity in MT"))
                        </div>
                        <div class="col-sm-7">
                            @Html.TextBoxFor(m => m.Quantity, String.Empty, new { @class = "form-control" })
                            <span class="help-block">@Html.ValidationMessageFor(m => m.Quantity)</span>
                        </div>
                    </div>
                    @*<td>
                            <div class="control-label col-sm-5">
                                @Html.LabelFor(m=>m.Quantity,@Html.Translate("Quantity in MT"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m=>m.Quantity)
                                @Html.ValidationMessageFor(m=>m.Quantity)
                            </div>
                        </td>*@
                </div>
            </div>

            <div class="modal-footer">
                <div class="col-sm-3 form-group pull-left">
                    @*<div class="md-checkbox-inline">
                        <div class="md-checkbox">
                            @Html.CheckBoxFor(m => m.IsFalseGRN, new { @checked = Model.IsFalseGRN, @class = "md-check" })
                            <label for="IsFalseGRN">
                                <span></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @Html.Translate("Receivable")
                            </label>
                        </div>
                    </div>*@
                
                </div>
                <button class="btn green" type="submit">@Html.Translate("Save")</button>
                <button class="btn red" data-dismiss="modal" aria-hidden="true">@Html.Translate("Cancel")</button>

            </div>
        }
    </div>
    <!-- /.modal-content -->
</div>
<script>

    function getNewSINo(data) {

        $.ajax({
            async: false,
            type: "POST",
            url: "@Url.Action("GetMaxSINo", "ReciptPlanForLoan")",
           


            success: function (returnValue) {
                var SiNumber = document.getElementById("SiNumber");
                SiNumber.value = returnValue;
                SiNumber.readOnly = true;
                return returnValue;
            },
            error: function (request, error) {

                //return data.LossReasonId;
                alert('An error occurred attempting to get new e-number');

            }
        });
    }

    $(document).ready(function () {

        var allValidationRules = {
            RefeenceNumber: "required",
            ProjectCode: "required",
            Quantity: "required",
            SiNumber: "required",
            LoanSource: "required"

        };
        $("#myForm1").validate({
            rules: allValidationRules,
            showErrors: function (element, errorClass, validClass) {
                for (var i in errorClass) {
                    $(errorClass[i].element).popover('show');
                }
            }
        });
        $.getJSON('@Url.Action("JsonParentCommodities","Transfer")', { commodityTypeID: 1, editModval: '@Model.CommodityID' }, function (result) {
            //for (var i = 0; i < 2; i++)
            //    alert(result[i].Text);
            if (result != "" && result != null) {
                //$('#StoreID').data('tComboBox').value(result[0]);
                var options = '<option value="">-- @Html.Translate("Select a Parent Commodity")</option>';
                for (var i = 0; i < result.length; i++) {
                    options += '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                }
                $("#ParentCommodityID").html(options);

            }
        });
        $('#CommodityTypeID').change(function () {
            var url = '@Url.Action("JsonParentCommodities","Transfer")';
            $.getJSON(url, { commodityTypeID: $('#CommodityTypeID').val(), editModval: '@Model.CommodityID' }, function (result) {
                //for (var i = 0; i < 2; i++)
                //    alert(result[i].Text);
                if (result != "" && result != null) {
                    //$('#StoreID').data('tComboBox').value(result[0]);
                    var options = '<option value="">-- @Html.Translate("Select a Parent Commodity")</option>';
                    for (var i = 0; i < result.length; i++) {
                        options += '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    }
                    $("#ParentCommodityID").html(options);

                }
            });
            $("#CommodityID").html('');
        });
        $('#ParentCommodityID').change(function () {
            var url = '@Url.Action("JsonCommodities","Transfer")';
            $.getJSON(url, { parentCommodityID: $('#ParentCommodityID').val(), editModval: '@Model.ParentCommodityID' }, function (result) {
                //for (var i = 0; i < 2; i++)
                //    alert(result[i].Text);
                if (result != "" && result != null) {
                    //$('#StoreID').data('tComboBox').value(result[0]);
                    var options = '<option value="">-- @Html.Translate("Select a Commodity")</option>';
                    for (var i = 0; i < result.length; i++) {
                        options += '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    }
                    $("#CommodityID").html(options);

                }
            });
        });

    });
</script>
