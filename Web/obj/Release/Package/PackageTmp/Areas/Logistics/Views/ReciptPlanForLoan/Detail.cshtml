@model Cats.Areas.Logistics.Models.LoanReciptPlanViewModel
@using Cats.Areas.Logistics.Models
@using Cats.Helpers
@using Cats.Models.Constant
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Detail";
    //Layout = "~/Views/Shared/_MainLayout.cshtml";
    const string PAGE_NAME = "Logistics.ReciptPlanForLoanAndOthers.Detail";
    Layout = "~/Views/Shared/NewTheme _MainLayout.cshtml";
    ViewBag.PageTitle = Html.Translate("List of Receipt Plan From Loan Details");
    ViewBag.PageTitleDescription = "";
}
@section Toolbar
{
    <a class="btn grey-salt" href="@Url.Action("Index", "ReciptPlanForLoan")" data-buttontype="btn_back_to_list"><i class="fa fa-list"></i> @Html.Translate("Back to List")</a>
}

<script type="text/javascript">
    $(function () {

        //Optional: turn the chache off
        $.ajaxSetup({ cache: false });

        $('#btnRecive').click(function () {

            // alert("");
            $('#dialogContentSmall').load(this.href, function () {
                $('#dialogDivSmall').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                //bindForm(this);
            });
            return false;
        });

        $('#btnEdit').click(function () {

            // alert("");
            $('#dialogContent').load(this.href, function () {
                $('#dialogDiv').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                //bindForm(this);
                $(".modal-dialog").removeClass("modal-sm").addClass("modal-lg");
            });
            return false;
        });

    });
</script>
<div id='dialogDivSmall' class='modal fade' style="display: none;">
    <div id='dialogContentSmall'></div>
</div>
<div id='dialogDiv' class='modal fade in' style="display: none;">
    <div id='dialogContent'></div>
</div>
@Html.HiddenFor(m => m.LoanReciptPlanID)
@Html.HiddenFor(m => m.StatusID)
@Html.HiddenFor(m => m.SiNumber)

<div class="portlet light bordered bg-inverse">
    <div class="portlet-title">
        <div class="caption font-green-sharp">
            <i class="fa fa-list font-green-sharp"></i>
            <span class="caption-subject bold uppercase"> @Html.Translate("Details")</span>
            <span class="caption-helper">  </span>
        </div>
        <div class="tools">
            <a href="#" class="collapse" data-original-title="" title=""></a>
            @*<a href="javascript:;" class="remove" data-original-title="" title=""></a>*@
        </div>
        <div class="actions">
            <div class="btn-group">
                <a class="btn green dropdown-toggle " data-toggle="dropdown">
                    @Html.Translate("Action")
                    <i class="fa fa-angle-down"></i>
                </a>

                <ul class="dropdown-menu pull-right">
                    @if (Model.StatusID == (int)LocalPurchaseStatus.Draft)
                    {
                    <li><a id="btnRecive" class="btn green-sharp-stripe" href="@Url.Action("ReciptPlan", "ReciptPlanForLoan", new { id = Model.LoanReciptPlanID})">@Html.Translate("Recieve Plan")</a></li>
                    <li><a id="btnEdit" class="btn green-sharp-stripe" href="@Url.Action("Edit", "ReciptPlanForLoan", new {id = Model.LoanReciptPlanID})">@Html.Translate("Edit")</a></li>
                    <li><a id="btnApprove" class="btn green-sharp-stripe" href="@Url.Action("Approve", "ReciptPlanForLoan", new {id = Model.LoanReciptPlanID})">@Html.Translate("Approve")</a></li>
                    }
                </ul>
            </div>

        </div>
    </div>
    <div class="portlet-body">
        <div class="form-horizontal row">
            <div class="row">

                <div class="form-group col-sm-6">
                    <div class="control-label col-sm-4">
                        @Html.LabelFor(m => m.SiNumber, @Html.Translate("SI Number"))
                    </div>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.SiNumber, new { disabled = true, @class = "form-control" })
                        <span class="help-block">@Html.ValidationMessageFor(m => m.SiNumber)</span>
                    </div>

                </div>
                <div class="form-group col-sm-6">
                    <div class="control-label col-sm-4">
                        @Html.LabelFor(m => m.Donor, @Html.Translate("Loan Source"))
                    </div>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.Donor, new { disabled = true, @class = "form-control" })
                    </div>
                </div>

            </div>
            <div class="row">

                <div class="form-group col-sm-6">
                    <div class="control-label col-sm-4">
                        @Html.LabelFor(m => m.ProgramID, @Html.Translate("Program"))
                    </div>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.ProgramName, new { disabled = true, @class = "form-control" })
                    </div>
                </div>
                <div class="form-group col-sm-6">
                    <div class="control-label col-sm-4">
                        @Html.LabelFor(m => m.CommodityID, @Html.Translate("Commodity"))
                    </div>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.CommodityName, new { disabled = true, @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="form-group col-sm-6">
                    <div class="control-label col-sm-4">
                        @Html.LabelFor(m => m.CommoditySourceID, @Html.Translate("Commodity Source"))
                    </div>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.CommoditySourceName, new {disabled = true, @class = "form-control"})
                    </div>
                </div>
                <div class="form-group col-sm-6">
                    <div class="control-label col-sm-4">
                        @Html.LabelFor(m => m.RefeenceNumber, @Html.Translate("Reference Number"))
                    </div>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.RefeenceNumber, new {disabled = true, @class = "form-control"})
                    </div>
                </div>

            </div>
            <div class="row">

                <div class="form-group col-sm-6">
                    <div class="control-label col-sm-4">
                        @Html.LabelFor(m => m.ProjectCode, @Html.Translate("Project Code"))
                    </div>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.ProjectCode, new { disabled = true, @class = "form-control" })
                    </div>

                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group">
                        <div class="control-label col-sm-4">
                            @Html.LabelFor(m => m.Quantity, @Html.Translate("Quantity in MT"))
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.Quantity, new {disabled = true, @class = "form-control"})
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>


<div class="portlet light bordered">
    <div class="portlet-title">
        <div class="caption font-green-sharp">
            <i class="fa fa-list font-green-sharp"></i>
            <span class="caption-subject bold uppercase"> @Html.Translate("List of Recived Loans")</span>
            <span class="caption-helper">  </span>
        </div>
        @*<div class="tools">
                <a href="#" class="collapse" data-original-title="" title=""></a>
                <a href="javascript:;" class="remove" data-original-title="" title=""></a>
            </div>*@
        <div class="actions">
            <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""></a>
        </div>
    </div>
    <div class="portlet-body">
        <div class="table-responsive">
            @(Html.Kendo().Grid<LoanReciptPlanWithDetailViewModel>()
              .Name("grid")
              .Columns(columns =>
                  {
                      columns.Bound(m => m.MemoRefrenceNumber).Width(100).Title(@Html.Translate("Memo Reference number"));
                      columns.Bound(m => m.HubName).Title(@Html.Translate("Hub")).Width(100);
                      columns.Bound(m => m.CreatedDate).Title(Html.Translate("Recieved Date")).Width(100);
                      columns.Bound(m => m.Amount).Width(100).Title(@Html.Translate("Recieving Amount")).HtmlAttributes(new { align = "right" });
                      columns.Bound(m => m.Remaining).Width(100).Title(@Html.Translate("Remaining")).HtmlAttributes(new { align = "right" });
                      // columns.Bound(m => m.Remaining).ClientFooterTemplate("Total in Birr <b>:#=kendo.format('{0:N}', sum)#</b>").Format("{0:N}");
                      if (Model.StatusID == (int)LocalPurchaseStatus.Draft)
                      {
                          columns.Command(destroy => destroy.Destroy().HtmlAttributes(new {align = "center"})).Width(100).Title(Html.Translate("Delete"));
                      }

                  }

              )

              .Navigatable()
              .Scrollable()
              .TableHtmlAttributes(new { @class = "table table-condensed" })
              .HtmlAttributes(new { style = "height:230px;" })
              .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .Group(t => t.Add(m => m.HubName))
                                            .Model(model => model.Id(m => m.LoanReciptPlanDetailID))
                                            .Read(read => read.Action("LoanReciptPlanDetail_Read", "ReciptPlanForLoan", new { loanReciptPlanID = Model.LoanReciptPlanID }))
                                            .Destroy(destroy => destroy.Action("LoanReciptPlanDetail_Delete", "ReciptPlanForLoan" ))
                    //.Update(update => update.Action("Commodity_Update", "Request"))
              )
            )

        </div>
    </div>
</div>