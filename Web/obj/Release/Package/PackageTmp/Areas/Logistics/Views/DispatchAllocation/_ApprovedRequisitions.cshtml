@model List<int?>
@using Kendo.Mvc.UI
@using Cats.Helpers
@using Cats.Security
@using Cats.Services.Security

@{
    var gridid = Guid.NewGuid().ToString();
}
<style>
    .action-link {
        display: none;
    }

    .assign-code3 {
        display: block;
    }
</style>


@(Html.Kendo().Grid<Cats.Models.RequisitionViewModel>()
    .Name("ApprovedRequsitions")
    .Columns(columns =>
    {

        columns.Bound(e => e.RequisitionNo).Width(120).Title(@Html.Translate("Requisition No")).Filterable(false);
        columns.Bound(e => e.Program).Width(120).Title(@Html.Translate("Program")).Filterable(true);
        columns.Bound(e => e.MonthName).Width(120).Title(@Html.Translate("Month")).Filterable(true);
        columns.Bound(e => e.Round).Width(80).Title(@Html.Translate("Round"));
        columns.Bound(e => e.Region).Width(120).Title(@Html.Translate("Region")).Filterable(false);
        columns.Bound(e => e.Zone).Width(120).Title(@Html.Translate("Zone")).Filterable(false);
        columns.Bound(e => e.Commodity).Title(@Html.Translate("Commodity")).Width(110).Filterable(false);
        columns.Bound(e => e.Amount).Width(140).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal; ", title =@Html.Translate("Amount Allocated"), @class = "cats-unit-pref-grid" }).Format("{0:N2}").HtmlAttributes(new { align = "Right" }).HtmlAttributes(new { style = "text-align: right; font-size: 12px; " }).Filterable(false);
        //columns.Bound(e => e.StrRequisitionDate).Title("Requested On").Width(140);
        columns.Bound(e => e.BenficiaryNo).Title("Beneficiaries").Width(120).HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;", title =@Html.Translate("Benficiary No") }).Format("{0:n0}").HtmlAttributes(new { align = "Right" }).HtmlAttributes(new { style = "text-align: right; font-size: 12px; " }).Filterable(false);
        //columns.Bound(e => e.Status).Title("").Width(120).ClientTemplate("<a class='action-link assign-code#=Status#' href='" + @Url.Action("Index", "FDPSIAllocation", new { Area = "Logistics", regionid = ViewBag.regionId }) + "&RequisitionID=#=RequisitionId#'>PC/SI Allocate</a>  ").Filterable(false);
        //columns.Bound(e => e.Status).Width(90).Title("Status");
        //@Url.Action("Create", "GiftCertificate", new { Area = "EarlyWarning" }),
        //            EarlyWarningConstants.Operation.New_Gift_Certificate, "<button type=\"button\" class=\"btn btn-success\"><span class=\"fa fa-plus\"></span> " + @Html.Translate("New Gift Certificate") + " </button>", "btn btn-success", "btn_new_record")
        if(LogisticsConstants.isValidOperation(LogisticsConstants.Operation.Reject_Approved_Requisition).ToString() == "Reject_Approved_Requisition")
        columns.Command(p =>  p.Custom(@Html.Translate("Reject")).Click("onReject")).Width(100);

    })
   
                        .DataSource(dataSource => dataSource
                            .Ajax()
                             .Model(model => model.Id(p => p.RequisitionId))
                            .Read(read => read.Action("AllocateProjectCode", "DispatchAllocation", new { regionId = Model[0], status = Model[1] }))

                           // .PageSize(5)
                         )
                         .Scrollable(scroll => scroll.Height(350))
                         .Selectable(select => select.Mode(GridSelectionMode.Single))
                         .Navigatable()
                             .Filterable(filterable => filterable
                                 .Extra(false)
                                 .Operators(operators => operators
                                     .ForString(str => str.Clear()
                                         .StartsWith(@Html.Translate("Starts with"))
                                         .IsEqualTo(@Html.Translate("Is equal to"))
                                         .IsNotEqualTo(@Html.Translate("Is not equal to"))
                              )))
        //.Filterable()
                         .Sortable()
                         .HtmlAttributes(new { style = "height:450px;" })
        //.Pageable()
)


<script>
    function roundChange(e) {
        e.preventDefault();
        var value = this.value();
        var grid = $("#ProjectCodegrid" + '@gridid').data("kendoGrid");
        if (value) {
            grid.dataSource.filter({ field: "Round", operator: "eq", value: parseInt(value) });

        } else {
            grid.dataSource.filter({});
        }
    }
    
    function onReject(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "@Url.Action("RejectRequsition", "DispatchAllocation")" + "/" + dataItem.RequisitionId;
    }
</script>