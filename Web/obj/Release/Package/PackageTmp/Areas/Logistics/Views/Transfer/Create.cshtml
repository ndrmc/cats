@using Cats.Helpers
@model Cats.Areas.Logistics.Models.TransferViewModel
@{
    ViewBag.Title = Html.Translate("Create");

}
<div class="modal-dialog">
    <div class="modal-content">


        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 id="myModalLabel">@Html.Translate("New Receipt Plan from Transfer")</h4>
        </div>

        @using (Html.BeginForm("Create", "Transfer", FormMethod.Post, new { @class = "modal-form", id = "myForm1" }))
        {
            <div class="modal-body">
                <div class="form-horizontal row">

                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.SiNumber, @Html.Translate("SI Number"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.SiNumber, String.Empty, new { @class = "form-control" })
                                <span class="help-block">@Html.ValidationMessageFor(m => m.SiNumber)</span>
                            </div>
                        </div>
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.CommodityTypeID, @Html.Translate("Commodity Type"))
                            </div>
                            <div class="col-sm-7">
                                @Html.DropDownList("CommodityTypeID", null, new { @class = "form-control" })
                                @*@Html.ValidationMessageFor(m=>m.CommodityID)*@
                            </div>

                        </div>
                        @* <div class="col-sm-6 form-group" >
                    <div class="col-sm-5 control-label">
                        @Html.LabelFor(m=>m.HubID,@Html.Translate2(PAGE_NAME,"Hub"))
                    </div>
                    <div class="col-sm-7">
                        @Html.DropDownList("HubID")
                        @Html.ValidationMessageFor(m=>m.HubID)
                    </div>
                </div>*@
                    </div>
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.SourceHubID, @Html.Translate("Source Hub"))
                            </div>
                            <div class="col-sm-7">
                                @Html.DropDownList("SourceHubID", null, new { @class = "form-control" })
                                <div class="help-block">@Html.ValidationMessageFor(m => m.SourceHubID)</div>
                            </div>
                        </div>
                    
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.ParentCommodityID, @Html.Translate("Parent Commodity"))
                            </div>
                            <div class="col-sm-7">
                                <select id="ParentCommodityID" name="ParentCommodityID" class="form-control"></select>
                                @*@Html.DropDownList("ParentCommodityID")
                @Html.ValidationMessageFor(m=>m.ParentCommodityID)*@
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.ProgramID, @Html.Translate("Program"))
                            </div>
                            <div class="col-sm-7">
                                @Html.DropDownList("ProgramID", null, new { @class = "form-control" })
                                <span class="help-block">@Html.ValidationMessageFor(m => m.ProgramID)</span>
                            </div>
                        </div>
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.CommodityID, @Html.Translate("Commodity"))
                            </div>
                            <div class="col-sm-7">
                                <select id="CommodityID" name="CommodityID" class="form-control"></select>
                                @*@Html.DropDownList("CommodityID")
                @Html.ValidationMessageFor(m=>m.CommodityID)*@
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.CommoditySourceID, @Html.Translate("Commodity Source"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.CommoditySource, new { Disabled = true , @class="form-control"})

                            </div>
                        </div>
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.Quantity, @Html.Translate("Quantity in MT"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.Quantity, String.Empty, new { @class = "form-control" })
                                <span class="help-block">@Html.ValidationMessageFor(m => m.Quantity)</span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.ProjectCode, @Html.Translate("Project Code"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.ProjectCode, String.Empty, new { @class = "form-control" })
                                <span class="help-block">@Html.ValidationMessageFor(m => m.ProjectCode)</span>
                            </div>

                        </div>
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.DestinationHubID, @Html.Translate("Destination Hub"))
                            </div>
                            <div class="col-sm-7">
                                @Html.DropDownList("DestinationHubID", null, new { @class = "form-control" })
                                <span class="help-block">@Html.ValidationMessageFor(m => m.DestinationHubID)</span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <div class="col-sm-5 control-label">
                                @Html.LabelFor(m => m.ReferenceNumber, @Html.Translate("Reference Number"))
                            </div>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.ReferenceNumber, String.Empty, new { @class = "form-control" })
                                <span class="help-block">@Html.ValidationMessageFor(m => m.ReferenceNumber)</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn green" type="submit">@Html.Translate("Save")</button>
                <button class="btn red" data-dismiss="modal" aria-hidden="true">@Html.Translate("Cancel")</button>

            </div>
        }
    </div>
    <!-- /.modal-content -->
</div>
<script>
    $(document).ready(function () {

        var allValidationRules = {
            ReferenceNumber: "required",
            ProjectCode: "required",
            Quantity: "required",
            SiNumber: "required"


        };
        $("#myForm1").validate({
            rules: allValidationRules,
            showErrors: function (element, errorClass, validClass) {
                for (var i in errorClass) {
                    $(errorClass[i].element).popover('show');
                }
            }
        });

        $.getJSON('@Url.Action("JsonParentCommodities","Transfer")', { commodityTypeID: 1, editModval: '@Model.CommodityTypeID' }, function (result) {
            //for (var i = 0; i < 2; i++)
            //    alert(result[i].Text);
            if (result != "" && result != null) {
                //$('#StoreID').data('tComboBox').value(result[0]);
                var options = '<option value="">@Html.Translate("-- Select a Parent Commodity")</option>';
                for (var i = 0; i < result.length; i++) {
                    options += '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                }
                $("#ParentCommodityID").html(options);

            }
        });

        $('#CommodityTypeID').change(function () {
            var url = '@Url.Action("JsonParentCommodities","Transfer")';
            $.getJSON(url, { commodityTypeID: $('#CommodityTypeID').val(), editModval: '@Model.CommodityTypeID' }, function (result) {
                //for (var i = 0; i < 2; i++)
                //    alert(result[i].Text);
                if (result != "" && result != null) {
                    //$('#StoreID').data('tComboBox').value(result[0]);
                    var options = '<option value="">@Html.Translate("-- Select a Parent Commodity")</option>';
                    for (var i = 0; i < result.length; i++) {
                        options += '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    }
                    $("#ParentCommodityID").html(options);

                }
            });
            $("#CommodityID").html('');
        });

        $('#ParentCommodityID').change(function () {
            var url = '@Url.Action("JsonCommodities","Transfer")';
            $.getJSON(url, { parentCommodityID: $('#ParentCommodityID').val(), editModval: '@Model.ParentCommodityID' }, function (result) {
                //for (var i = 0; i < 2; i++)
                //    alert(result[i].Text);
                if (result != "" && result != null) {
                    //$('#StoreID').data('tComboBox').value(result[0]);
                    var options = '<option value="">@Html.Translate("-- Select a Commodity")</option>';
                    for (var i = 0; i < result.length; i++) {
                        options += '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    }
                    $("#CommodityID").html(options);

                }
            });
        });
    });

    var giftCertificates = "";
    var sourceArr = [];
    $(document).ready(function () {

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetGiftCertificates", "transfer",new {Area="Logistics"})",
            dataType: "json",
            contentType: "application/json; charset=utf-8",

            success: function (result) {
                for (var i = 0; i < result.length; i++) {
                    sourceArr.push(result[i]);

                }
            },
            error: function (error) {
                alert("There was an error posting the data to the server: " + error.responseText);
            }
        });
    });



    $('#SiNumber').typeahead({ source: sourceArr });
</script>