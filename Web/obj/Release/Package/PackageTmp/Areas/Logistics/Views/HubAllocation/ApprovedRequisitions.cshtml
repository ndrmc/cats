@using Cats.Helpers
@using Cats.Services.Security

@model IList<Cats.Models.RequisitionViewModel>
@{
    
    var user = (UserIdentity)System.Web.HttpContext.Current.User.Identity;
    var unitPreference = user.Profile.PreferedWeightMeasurment;
}
@{
    ViewBag.Title = Html.Translate("Approved Requisitions");
    Layout = "~/Views/Shared/_MainLayout.cshtml";
   
}

@section LeftBar
{
    @Html.Partial("_AllocationLeftBar")
}
@section Toolbar
{
     
    <a data-buttontype=""  class="btn toolbar-btn " data-submittedform="frm_hub_allocation" >Assign hub</a>
}
<fieldset>
    <legend>
       @Html.Translate("Approved Requisitions")
    </legend>
</fieldset>

<script>
    $(document).ready(function () {

        $('#frm_hub_allocation').validate(
            {

                submitHandler: function (form) {
                    var rows = $("#kGrid").data("kendoGrid").dataSource.total();

                    if (rows < 1) {

                        var error = document.getElementById("Notification");
                        if (error.style.display == "none") {
                            error.style.display = "block";
                        }


                        return false;
                    } else form.submit();
                    return true;
                },



            });





    });
      </script>

<script>
  
    @{ var total = ViewData["Total"]; }

    $(document).ready(function () {
        var selectedIds = {};
        $("#kGrid").kendoGrid({

            groupable: true,
            scrollable: true,
            sortable: true,
            pageable: true,
            autoBind: true,
            dataSource: {
                pageSize: 10
            }




        });





    });

</script>





<div class="alert alert-block" id="Notification" style="display: none" >
    <button type="button" class="close" data-dismiss="alert">&times;</button>
    <h4>Error!</h4>
    No data to allocate!
</div>


@using (Html.BeginForm("hubAllocation", "HubAllocation", FormMethod.Post, new { name = "frm_hub_allocation", id = "frm_hub_allocation" }))
{
    
       
      <h5 align="right"> Metric: @unitPreference </h5>
       
    
    <div  class="k-content">
        <table  id="kGrid" >
            
            <thead>
                
                <tr>
                    
                    <th>
                        Select Request
                    </th>
                    <th>
                       Commodity
                    </th>
                    <th>
                       Region
                    </th>
                    <th>
                       Zone
                    </th>
       
                    <th>
                        Requisition No
                    </th>
                   
       
                    <th>
                       Amount
                    </th>
                
                    <th>
                        Beneficiaries
                    </th>
                    
                    <th class="cats-date-pref-grid">
                       Date
                    </th>
                    <th>
                       Requisition ID
                    </th>
                </tr>
            </thead>
             <tbody>
            @for (int i = 0; i < Model.Count; i++)
            {
               
                    <tr>
                        <td>
                            <input type='checkbox' name="IsChecked" id="chkApprovedRequests" value="@i"/>
            
                        </td> 
                        <td>
                            @Html.DisplayFor(m => m[i].Commodity)
                           
            
                        </td>
        
                        <td>
                            @Html.DisplayFor(m => m[i].Region)
                          
            
                        </td>
        
                        <td>
                            @Html.DisplayFor(m => m[i].Zone)
                            
            
                        </td>
        
                        <td >
           
                            @Html.DisplayFor(m => m[i].RequisitionNo)
                           
            
                        </td>
        
                       
           
                        <td>
                            <p class="text-right">
                             @Html.DisplayFor(m => m[i].Amount.ToPreferedWeightUnit())
                            </p>
                            @Html.HiddenFor(m => m[i].Amount)
            
                        </td>
                        <td>
                            <p class="text-right">
                                @Html.DisplayFor(m => m[i].BenficiaryNo)
                            </p>

                                 
                        </td>
                        <td>
                            @Html.DisplayFor(m => m[i].StrRequisitionDate)
                           @* @Html.DisplayFor(m => m[i].RequisitionDate)*@
                           
            
                        </td>
                        <td>
                            @Html.DisplayFor(m => m[i].RequisitionId)
                            @Html.HiddenFor(m => m[i].RequisitionId)
            
                             @Html.HiddenFor(m => m[i].Commodity)   @Html.HiddenFor(m => m[i].Region) @Html.HiddenFor(m => m[i].Zone)  @Html.HiddenFor(m => m[i].RequisitionNo)  @Html.HiddenFor(m => m[i].BenficiaryNo)       @Html.HiddenFor(m => m[i].StrRequisitionDate)
                        </td>
                        
                    </tr>
               
    
            }
 </tbody>
        </table>
    </div>
   
    
    
}


